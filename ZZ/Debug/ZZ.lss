
ZZ.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800200  00004338  000043cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004338  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001156  00800262  00800262  0000442e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000442e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004460  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000788  00000000  00000000  000044a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a9d3  00000000  00000000  00004c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003013  00000000  00000000  0000f5fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005837  00000000  00000000  0001260e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000149c  00000000  00000000  00017e48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002d97  00000000  00000000  000192e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006a4e  00000000  00000000  0001c07b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000006d0  00000000  00000000  00022ac9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	95 c0       	rjmp	.+298    	; 0x12c <__ctors_end>
       2:	00 00       	nop
       4:	c4 c0       	rjmp	.+392    	; 0x18e <__bad_interrupt>
       6:	00 00       	nop
       8:	c2 c0       	rjmp	.+388    	; 0x18e <__bad_interrupt>
       a:	00 00       	nop
       c:	c0 c0       	rjmp	.+384    	; 0x18e <__bad_interrupt>
       e:	00 00       	nop
      10:	be c0       	rjmp	.+380    	; 0x18e <__bad_interrupt>
      12:	00 00       	nop
      14:	bc c0       	rjmp	.+376    	; 0x18e <__bad_interrupt>
      16:	00 00       	nop
      18:	ba c0       	rjmp	.+372    	; 0x18e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b8 c0       	rjmp	.+368    	; 0x18e <__bad_interrupt>
      1e:	00 00       	nop
      20:	b6 c0       	rjmp	.+364    	; 0x18e <__bad_interrupt>
      22:	00 00       	nop
      24:	b4 c0       	rjmp	.+360    	; 0x18e <__bad_interrupt>
      26:	00 00       	nop
      28:	b2 c0       	rjmp	.+356    	; 0x18e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b0 c0       	rjmp	.+352    	; 0x18e <__bad_interrupt>
      2e:	00 00       	nop
      30:	dd c3       	rjmp	.+1978   	; 0x7ec <__vector_12>
      32:	00 00       	nop
      34:	ac c0       	rjmp	.+344    	; 0x18e <__bad_interrupt>
      36:	00 00       	nop
      38:	aa c0       	rjmp	.+340    	; 0x18e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a8 c0       	rjmp	.+336    	; 0x18e <__bad_interrupt>
      3e:	00 00       	nop
      40:	a6 c0       	rjmp	.+332    	; 0x18e <__bad_interrupt>
      42:	00 00       	nop
      44:	a4 c0       	rjmp	.+328    	; 0x18e <__bad_interrupt>
      46:	00 00       	nop
      48:	a2 c0       	rjmp	.+324    	; 0x18e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a0 c0       	rjmp	.+320    	; 0x18e <__bad_interrupt>
      4e:	00 00       	nop
      50:	9e c0       	rjmp	.+316    	; 0x18e <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 32 13 	jmp	0x2664	; 0x2664 <__vector_21>
      58:	9a c0       	rjmp	.+308    	; 0x18e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	98 c0       	rjmp	.+304    	; 0x18e <__bad_interrupt>
      5e:	00 00       	nop
      60:	96 c0       	rjmp	.+300    	; 0x18e <__bad_interrupt>
      62:	00 00       	nop
      64:	94 c0       	rjmp	.+296    	; 0x18e <__bad_interrupt>
      66:	00 00       	nop
      68:	92 c0       	rjmp	.+292    	; 0x18e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	90 c0       	rjmp	.+288    	; 0x18e <__bad_interrupt>
      6e:	00 00       	nop
      70:	8e c0       	rjmp	.+284    	; 0x18e <__bad_interrupt>
      72:	00 00       	nop
      74:	8c c0       	rjmp	.+280    	; 0x18e <__bad_interrupt>
      76:	00 00       	nop
      78:	8a c0       	rjmp	.+276    	; 0x18e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	88 c0       	rjmp	.+272    	; 0x18e <__bad_interrupt>
      7e:	00 00       	nop
      80:	86 c0       	rjmp	.+268    	; 0x18e <__bad_interrupt>
      82:	00 00       	nop
      84:	84 c0       	rjmp	.+264    	; 0x18e <__bad_interrupt>
      86:	00 00       	nop
      88:	82 c0       	rjmp	.+260    	; 0x18e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	80 c0       	rjmp	.+256    	; 0x18e <__bad_interrupt>
      8e:	00 00       	nop
      90:	7e c0       	rjmp	.+252    	; 0x18e <__bad_interrupt>
      92:	00 00       	nop
      94:	7c c0       	rjmp	.+248    	; 0x18e <__bad_interrupt>
      96:	00 00       	nop
      98:	7a c0       	rjmp	.+244    	; 0x18e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	78 c0       	rjmp	.+240    	; 0x18e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	76 c0       	rjmp	.+236    	; 0x18e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	74 c0       	rjmp	.+232    	; 0x18e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	72 c0       	rjmp	.+228    	; 0x18e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	70 c0       	rjmp	.+224    	; 0x18e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	6e c0       	rjmp	.+220    	; 0x18e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	6c c0       	rjmp	.+216    	; 0x18e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	6a c0       	rjmp	.+212    	; 0x18e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	68 c0       	rjmp	.+208    	; 0x18e <__bad_interrupt>
      be:	00 00       	nop
      c0:	66 c0       	rjmp	.+204    	; 0x18e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	64 c0       	rjmp	.+200    	; 0x18e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	62 c0       	rjmp	.+196    	; 0x18e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	60 c0       	rjmp	.+192    	; 0x18e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	5e c0       	rjmp	.+188    	; 0x18e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	5c c0       	rjmp	.+184    	; 0x18e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	5a c0       	rjmp	.+180    	; 0x18e <__bad_interrupt>
      da:	00 00       	nop
      dc:	58 c0       	rjmp	.+176    	; 0x18e <__bad_interrupt>
      de:	00 00       	nop
      e0:	56 c0       	rjmp	.+172    	; 0x18e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	87 12       	cpse	r8, r23
      e6:	87 12       	cpse	r8, r23
      e8:	87 12       	cpse	r8, r23
      ea:	ae 12       	cpse	r10, r30
      ec:	b6 12       	cpse	r11, r22
      ee:	c4 12       	cpse	r12, r20
      f0:	87 12       	cpse	r8, r23
      f2:	87 12       	cpse	r8, r23
      f4:	ae 12       	cpse	r10, r30
      f6:	b6 12       	cpse	r11, r22

000000f8 <prvIdleTask>:
      f8:	0e 94 bf 08 	call	0x117e	; 0x117e <prvCheckTasksWaitingTermination>
      fc:	80 91 b3 12 	lds	r24, 0x12B3	; 0x8012b3 <pxReadyTasksLists>
     100:	82 30       	cpi	r24, 0x02	; 2
     102:	d0 f3       	brcs	.-12     	; 0xf8 <prvIdleTask>
     104:	ae d2       	rcall	.+1372   	; 0x662 <vPortYield>
     106:	f8 cf       	rjmp	.-16     	; 0xf8 <prvIdleTask>

00000108 <prvTimerTask>:
     108:	cf 93       	push	r28
     10a:	df 93       	push	r29
     10c:	1f 92       	push	r1
     10e:	cd b7       	in	r28, 0x3d	; 61
     110:	de b7       	in	r29, 0x3e	; 62
     112:	ce 01       	movw	r24, r28
     114:	01 96       	adiw	r24, 0x01	; 1
     116:	0e 94 9c 10 	call	0x2138	; 0x2138 <prvGetNextExpireTime>
     11a:	69 81       	ldd	r22, Y+1	; 0x01
     11c:	0e 94 17 12 	call	0x242e	; 0x242e <prvProcessTimerOrBlockTask>
     120:	0e 94 59 12 	call	0x24b2	; 0x24b2 <prvProcessReceivedCommands>
     124:	f6 cf       	rjmp	.-20     	; 0x112 <prvTimerTask+0xa>

00000126 <__ctors_start>:
     126:	46 19       	sub	r20, r6
     128:	18 1b       	sub	r17, r24
     12a:	94 1c       	adc	r9, r4

0000012c <__ctors_end>:
     12c:	11 24       	eor	r1, r1
     12e:	1f be       	out	0x3f, r1	; 63
     130:	cf ef       	ldi	r28, 0xFF	; 255
     132:	d1 e2       	ldi	r29, 0x21	; 33
     134:	de bf       	out	0x3e, r29	; 62
     136:	cd bf       	out	0x3d, r28	; 61
     138:	00 e0       	ldi	r16, 0x00	; 0
     13a:	0c bf       	out	0x3c, r16	; 60

0000013c <__do_copy_data>:
     13c:	12 e0       	ldi	r17, 0x02	; 2
     13e:	a0 e0       	ldi	r26, 0x00	; 0
     140:	b2 e0       	ldi	r27, 0x02	; 2
     142:	e8 e3       	ldi	r30, 0x38	; 56
     144:	f3 e4       	ldi	r31, 0x43	; 67
     146:	00 e0       	ldi	r16, 0x00	; 0
     148:	0b bf       	out	0x3b, r16	; 59
     14a:	02 c0       	rjmp	.+4      	; 0x150 <__do_copy_data+0x14>
     14c:	07 90       	elpm	r0, Z+
     14e:	0d 92       	st	X+, r0
     150:	a2 36       	cpi	r26, 0x62	; 98
     152:	b1 07       	cpc	r27, r17
     154:	d9 f7       	brne	.-10     	; 0x14c <__do_copy_data+0x10>

00000156 <__do_clear_bss>:
     156:	23 e1       	ldi	r18, 0x13	; 19
     158:	a2 e6       	ldi	r26, 0x62	; 98
     15a:	b2 e0       	ldi	r27, 0x02	; 2
     15c:	01 c0       	rjmp	.+2      	; 0x160 <.do_clear_bss_start>

0000015e <.do_clear_bss_loop>:
     15e:	1d 92       	st	X+, r1

00000160 <.do_clear_bss_start>:
     160:	a8 3b       	cpi	r26, 0xB8	; 184
     162:	b2 07       	cpc	r27, r18
     164:	e1 f7       	brne	.-8      	; 0x15e <.do_clear_bss_loop>

00000166 <__do_global_ctors>:
     166:	10 e0       	ldi	r17, 0x00	; 0
     168:	c6 e9       	ldi	r28, 0x96	; 150
     16a:	d0 e0       	ldi	r29, 0x00	; 0
     16c:	00 e0       	ldi	r16, 0x00	; 0
     16e:	06 c0       	rjmp	.+12     	; 0x17c <__do_global_ctors+0x16>
     170:	21 97       	sbiw	r28, 0x01	; 1
     172:	01 09       	sbc	r16, r1
     174:	80 2f       	mov	r24, r16
     176:	fe 01       	movw	r30, r28
     178:	0e 94 3e 20 	call	0x407c	; 0x407c <__tablejump2__>
     17c:	c3 39       	cpi	r28, 0x93	; 147
     17e:	d1 07       	cpc	r29, r17
     180:	80 e0       	ldi	r24, 0x00	; 0
     182:	08 07       	cpc	r16, r24
     184:	a9 f7       	brne	.-22     	; 0x170 <__do_global_ctors+0xa>
     186:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <main>
     18a:	0c 94 9a 21 	jmp	0x4334	; 0x4334 <_exit>

0000018e <__bad_interrupt>:
     18e:	38 cf       	rjmp	.-400    	; 0x0 <__vectors>

00000190 <_ZN8castimer8vrednostEv>:
     190:	0f 93       	push	r16
     192:	1f 93       	push	r17
     194:	fc 01       	movw	r30, r24
     196:	80 81       	ld	r24, Z
     198:	81 11       	cpse	r24, r1
     19a:	12 c0       	rjmp	.+36     	; 0x1c0 <_ZN8castimer8vrednostEv+0x30>
     19c:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <Hardware+0x14>
     1a0:	90 91 b1 13 	lds	r25, 0x13B1	; 0x8013b1 <Hardware+0x15>
     1a4:	a0 91 b2 13 	lds	r26, 0x13B2	; 0x8013b2 <Hardware+0x16>
     1a8:	b0 91 b3 13 	lds	r27, 0x13B3	; 0x8013b3 <Hardware+0x17>
     1ac:	81 83       	std	Z+1, r24	; 0x01
     1ae:	92 83       	std	Z+2, r25	; 0x02
     1b0:	a3 83       	std	Z+3, r26	; 0x03
     1b2:	b4 83       	std	Z+4, r27	; 0x04
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	80 83       	st	Z, r24
     1b8:	60 e0       	ldi	r22, 0x00	; 0
     1ba:	70 e0       	ldi	r23, 0x00	; 0
     1bc:	cb 01       	movw	r24, r22
     1be:	12 c0       	rjmp	.+36     	; 0x1e4 <_ZN8castimer8vrednostEv+0x54>
     1c0:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <Hardware+0x14>
     1c4:	90 91 b1 13 	lds	r25, 0x13B1	; 0x8013b1 <Hardware+0x15>
     1c8:	a0 91 b2 13 	lds	r26, 0x13B2	; 0x8013b2 <Hardware+0x16>
     1cc:	b0 91 b3 13 	lds	r27, 0x13B3	; 0x8013b3 <Hardware+0x17>
     1d0:	01 81       	ldd	r16, Z+1	; 0x01
     1d2:	12 81       	ldd	r17, Z+2	; 0x02
     1d4:	23 81       	ldd	r18, Z+3	; 0x03
     1d6:	34 81       	ldd	r19, Z+4	; 0x04
     1d8:	bc 01       	movw	r22, r24
     1da:	cd 01       	movw	r24, r26
     1dc:	60 1b       	sub	r22, r16
     1de:	71 0b       	sbc	r23, r17
     1e0:	82 0b       	sbc	r24, r18
     1e2:	93 0b       	sbc	r25, r19
     1e4:	1f 91       	pop	r17
     1e6:	0f 91       	pop	r16
     1e8:	08 95       	ret

000001ea <_ZN8castimer9ponastaviEv>:
     1ea:	fc 01       	movw	r30, r24
     1ec:	10 82       	st	Z, r1
     1ee:	08 95       	ret

000001f0 <prvHeapInit>:
     1f0:	ee e6       	ldi	r30, 0x6E	; 110
     1f2:	f2 e0       	ldi	r31, 0x02	; 2
     1f4:	a2 e7       	ldi	r26, 0x72	; 114
     1f6:	b2 e0       	ldi	r27, 0x02	; 2
     1f8:	b1 83       	std	Z+1, r27	; 0x01
     1fa:	a0 83       	st	Z, r26
     1fc:	13 82       	std	Z+3, r1	; 0x03
     1fe:	12 82       	std	Z+2, r1	; 0x02
     200:	ee e6       	ldi	r30, 0x6E	; 110
     202:	f2 e1       	ldi	r31, 0x12	; 18
     204:	f0 93 6d 02 	sts	0x026D, r31	; 0x80026d <pxEnd+0x1>
     208:	e0 93 6c 02 	sts	0x026C, r30	; 0x80026c <pxEnd>
     20c:	13 82       	std	Z+3, r1	; 0x03
     20e:	12 82       	std	Z+2, r1	; 0x02
     210:	11 82       	std	Z+1, r1	; 0x01
     212:	10 82       	st	Z, r1
     214:	8c ef       	ldi	r24, 0xFC	; 252
     216:	9f e0       	ldi	r25, 0x0F	; 15
     218:	13 96       	adiw	r26, 0x03	; 3
     21a:	9c 93       	st	X, r25
     21c:	8e 93       	st	-X, r24
     21e:	12 97       	sbiw	r26, 0x02	; 2
     220:	ed 93       	st	X+, r30
     222:	fc 93       	st	X, r31
     224:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <xMinimumEverFreeBytesRemaining+0x1>
     228:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <xMinimumEverFreeBytesRemaining>
     22c:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <xFreeBytesRemaining+0x1>
     230:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <xFreeBytesRemaining>
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	90 e8       	ldi	r25, 0x80	; 128
     238:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <__data_end+0x1>
     23c:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <__data_end>
     240:	08 95       	ret

00000242 <prvInsertBlockIntoFreeList>:
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	ec 01       	movw	r28, r24
     248:	ae e6       	ldi	r26, 0x6E	; 110
     24a:	b2 e0       	ldi	r27, 0x02	; 2
     24c:	01 c0       	rjmp	.+2      	; 0x250 <prvInsertBlockIntoFreeList+0xe>
     24e:	df 01       	movw	r26, r30
     250:	ed 91       	ld	r30, X+
     252:	fc 91       	ld	r31, X
     254:	11 97       	sbiw	r26, 0x01	; 1
     256:	ec 17       	cp	r30, r28
     258:	fd 07       	cpc	r31, r29
     25a:	c8 f3       	brcs	.-14     	; 0x24e <prvInsertBlockIntoFreeList+0xc>
     25c:	12 96       	adiw	r26, 0x02	; 2
     25e:	8d 91       	ld	r24, X+
     260:	9c 91       	ld	r25, X
     262:	13 97       	sbiw	r26, 0x03	; 3
     264:	9d 01       	movw	r18, r26
     266:	28 0f       	add	r18, r24
     268:	39 1f       	adc	r19, r25
     26a:	c2 17       	cp	r28, r18
     26c:	d3 07       	cpc	r29, r19
     26e:	49 f4       	brne	.+18     	; 0x282 <prvInsertBlockIntoFreeList+0x40>
     270:	2a 81       	ldd	r18, Y+2	; 0x02
     272:	3b 81       	ldd	r19, Y+3	; 0x03
     274:	82 0f       	add	r24, r18
     276:	93 1f       	adc	r25, r19
     278:	13 96       	adiw	r26, 0x03	; 3
     27a:	9c 93       	st	X, r25
     27c:	8e 93       	st	-X, r24
     27e:	12 97       	sbiw	r26, 0x02	; 2
     280:	ed 01       	movw	r28, r26
     282:	8a 81       	ldd	r24, Y+2	; 0x02
     284:	9b 81       	ldd	r25, Y+3	; 0x03
     286:	9e 01       	movw	r18, r28
     288:	28 0f       	add	r18, r24
     28a:	39 1f       	adc	r19, r25
     28c:	e2 17       	cp	r30, r18
     28e:	f3 07       	cpc	r31, r19
     290:	c1 f4       	brne	.+48     	; 0x2c2 <prvInsertBlockIntoFreeList+0x80>
     292:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <pxEnd>
     296:	30 91 6d 02 	lds	r19, 0x026D	; 0x80026d <pxEnd+0x1>
     29a:	e2 17       	cp	r30, r18
     29c:	f3 07       	cpc	r31, r19
     29e:	71 f0       	breq	.+28     	; 0x2bc <prvInsertBlockIntoFreeList+0x7a>
     2a0:	22 81       	ldd	r18, Z+2	; 0x02
     2a2:	33 81       	ldd	r19, Z+3	; 0x03
     2a4:	82 0f       	add	r24, r18
     2a6:	93 1f       	adc	r25, r19
     2a8:	9b 83       	std	Y+3, r25	; 0x03
     2aa:	8a 83       	std	Y+2, r24	; 0x02
     2ac:	ed 91       	ld	r30, X+
     2ae:	fc 91       	ld	r31, X
     2b0:	11 97       	sbiw	r26, 0x01	; 1
     2b2:	80 81       	ld	r24, Z
     2b4:	91 81       	ldd	r25, Z+1	; 0x01
     2b6:	99 83       	std	Y+1, r25	; 0x01
     2b8:	88 83       	st	Y, r24
     2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <prvInsertBlockIntoFreeList+0x84>
     2bc:	39 83       	std	Y+1, r19	; 0x01
     2be:	28 83       	st	Y, r18
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <prvInsertBlockIntoFreeList+0x84>
     2c2:	f9 83       	std	Y+1, r31	; 0x01
     2c4:	e8 83       	st	Y, r30
     2c6:	ca 17       	cp	r28, r26
     2c8:	db 07       	cpc	r29, r27
     2ca:	11 f0       	breq	.+4      	; 0x2d0 <prvInsertBlockIntoFreeList+0x8e>
     2cc:	cd 93       	st	X+, r28
     2ce:	dc 93       	st	X, r29
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <pvPortMalloc>:
     2d6:	ef 92       	push	r14
     2d8:	ff 92       	push	r15
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	8c 01       	movw	r16, r24
     2e4:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <vTaskSuspendAll>
     2e8:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <pxEnd>
     2ec:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <pxEnd+0x1>
     2f0:	89 2b       	or	r24, r25
     2f2:	09 f4       	brne	.+2      	; 0x2f6 <pvPortMalloc+0x20>
     2f4:	7d df       	rcall	.-262    	; 0x1f0 <prvHeapInit>
     2f6:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <__data_end>
     2fa:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <__data_end+0x1>
     2fe:	80 23       	and	r24, r16
     300:	91 23       	and	r25, r17
     302:	89 2b       	or	r24, r25
     304:	09 f0       	breq	.+2      	; 0x308 <pvPortMalloc+0x32>
     306:	76 c0       	rjmp	.+236    	; 0x3f4 <pvPortMalloc+0x11e>
     308:	01 15       	cp	r16, r1
     30a:	11 05       	cpc	r17, r1
     30c:	49 f0       	breq	.+18     	; 0x320 <pvPortMalloc+0x4a>
     30e:	c8 01       	movw	r24, r16
     310:	04 96       	adiw	r24, 0x04	; 4
     312:	08 17       	cp	r16, r24
     314:	19 07       	cpc	r17, r25
     316:	18 f0       	brcs	.+6      	; 0x31e <pvPortMalloc+0x48>
     318:	00 e0       	ldi	r16, 0x00	; 0
     31a:	10 e0       	ldi	r17, 0x00	; 0
     31c:	01 c0       	rjmp	.+2      	; 0x320 <pvPortMalloc+0x4a>
     31e:	8c 01       	movw	r16, r24
     320:	01 15       	cp	r16, r1
     322:	11 05       	cpc	r17, r1
     324:	09 f4       	brne	.+2      	; 0x328 <pvPortMalloc+0x52>
     326:	69 c0       	rjmp	.+210    	; 0x3fa <pvPortMalloc+0x124>
     328:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <xFreeBytesRemaining>
     32c:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <xFreeBytesRemaining+0x1>
     330:	80 17       	cp	r24, r16
     332:	91 07       	cpc	r25, r17
     334:	08 f4       	brcc	.+2      	; 0x338 <pvPortMalloc+0x62>
     336:	64 c0       	rjmp	.+200    	; 0x400 <__LOCK_REGION_LENGTH__>
     338:	c0 91 6e 02 	lds	r28, 0x026E	; 0x80026e <xStart>
     33c:	d0 91 6f 02 	lds	r29, 0x026F	; 0x80026f <xStart+0x1>
     340:	ee e6       	ldi	r30, 0x6E	; 110
     342:	f2 e0       	ldi	r31, 0x02	; 2
     344:	02 c0       	rjmp	.+4      	; 0x34a <pvPortMalloc+0x74>
     346:	fe 01       	movw	r30, r28
     348:	ec 01       	movw	r28, r24
     34a:	8a 81       	ldd	r24, Y+2	; 0x02
     34c:	9b 81       	ldd	r25, Y+3	; 0x03
     34e:	80 17       	cp	r24, r16
     350:	91 07       	cpc	r25, r17
     352:	20 f4       	brcc	.+8      	; 0x35c <pvPortMalloc+0x86>
     354:	88 81       	ld	r24, Y
     356:	99 81       	ldd	r25, Y+1	; 0x01
     358:	00 97       	sbiw	r24, 0x00	; 0
     35a:	a9 f7       	brne	.-22     	; 0x346 <pvPortMalloc+0x70>
     35c:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <pxEnd>
     360:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <pxEnd+0x1>
     364:	c8 17       	cp	r28, r24
     366:	d9 07       	cpc	r29, r25
     368:	09 f4       	brne	.+2      	; 0x36c <pvPortMalloc+0x96>
     36a:	4d c0       	rjmp	.+154    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     36c:	e0 80       	ld	r14, Z
     36e:	f1 80       	ldd	r15, Z+1	; 0x01
     370:	84 e0       	ldi	r24, 0x04	; 4
     372:	e8 0e       	add	r14, r24
     374:	f1 1c       	adc	r15, r1
     376:	88 81       	ld	r24, Y
     378:	99 81       	ldd	r25, Y+1	; 0x01
     37a:	91 83       	std	Z+1, r25	; 0x01
     37c:	80 83       	st	Z, r24
     37e:	2a 81       	ldd	r18, Y+2	; 0x02
     380:	3b 81       	ldd	r19, Y+3	; 0x03
     382:	20 1b       	sub	r18, r16
     384:	31 0b       	sbc	r19, r17
     386:	29 30       	cpi	r18, 0x09	; 9
     388:	31 05       	cpc	r19, r1
     38a:	48 f0       	brcs	.+18     	; 0x39e <pvPortMalloc+0xc8>
     38c:	ce 01       	movw	r24, r28
     38e:	80 0f       	add	r24, r16
     390:	91 1f       	adc	r25, r17
     392:	fc 01       	movw	r30, r24
     394:	33 83       	std	Z+3, r19	; 0x03
     396:	22 83       	std	Z+2, r18	; 0x02
     398:	1b 83       	std	Y+3, r17	; 0x03
     39a:	0a 83       	std	Y+2, r16	; 0x02
     39c:	52 df       	rcall	.-348    	; 0x242 <prvInsertBlockIntoFreeList>
     39e:	2a 81       	ldd	r18, Y+2	; 0x02
     3a0:	3b 81       	ldd	r19, Y+3	; 0x03
     3a2:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <xFreeBytesRemaining>
     3a6:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <xFreeBytesRemaining+0x1>
     3aa:	82 1b       	sub	r24, r18
     3ac:	93 0b       	sbc	r25, r19
     3ae:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <xFreeBytesRemaining+0x1>
     3b2:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <xFreeBytesRemaining>
     3b6:	40 91 68 02 	lds	r20, 0x0268	; 0x800268 <xMinimumEverFreeBytesRemaining>
     3ba:	50 91 69 02 	lds	r21, 0x0269	; 0x800269 <xMinimumEverFreeBytesRemaining+0x1>
     3be:	84 17       	cp	r24, r20
     3c0:	95 07       	cpc	r25, r21
     3c2:	20 f4       	brcc	.+8      	; 0x3cc <pvPortMalloc+0xf6>
     3c4:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <xMinimumEverFreeBytesRemaining+0x1>
     3c8:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <xMinimumEverFreeBytesRemaining>
     3cc:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <__data_end>
     3d0:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <__data_end+0x1>
     3d4:	28 2b       	or	r18, r24
     3d6:	39 2b       	or	r19, r25
     3d8:	3b 83       	std	Y+3, r19	; 0x03
     3da:	2a 83       	std	Y+2, r18	; 0x02
     3dc:	19 82       	std	Y+1, r1	; 0x01
     3de:	18 82       	st	Y, r1
     3e0:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <xNumberOfSuccessfulAllocations>
     3e4:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <xNumberOfSuccessfulAllocations+0x1>
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <xNumberOfSuccessfulAllocations+0x1>
     3ee:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <xNumberOfSuccessfulAllocations>
     3f2:	0b c0       	rjmp	.+22     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     3f4:	e1 2c       	mov	r14, r1
     3f6:	f1 2c       	mov	r15, r1
     3f8:	08 c0       	rjmp	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     3fa:	e1 2c       	mov	r14, r1
     3fc:	f1 2c       	mov	r15, r1
     3fe:	05 c0       	rjmp	.+10     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     400:	e1 2c       	mov	r14, r1
     402:	f1 2c       	mov	r15, r1
     404:	02 c0       	rjmp	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     406:	e1 2c       	mov	r14, r1
     408:	f1 2c       	mov	r15, r1
     40a:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <xTaskResumeAll>
     40e:	e1 14       	cp	r14, r1
     410:	f1 04       	cpc	r15, r1
     412:	11 f4       	brne	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     414:	0e 94 f5 12 	call	0x25ea	; 0x25ea <vApplicationMallocFailedHook>
     418:	c7 01       	movw	r24, r14
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	08 95       	ret

00000428 <vPortFree>:
     428:	0f 93       	push	r16
     42a:	1f 93       	push	r17
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	00 97       	sbiw	r24, 0x00	; 0
     432:	91 f1       	breq	.+100    	; 0x498 <vPortFree+0x70>
     434:	ec 01       	movw	r28, r24
     436:	24 97       	sbiw	r28, 0x04	; 4
     438:	4a 81       	ldd	r20, Y+2	; 0x02
     43a:	5b 81       	ldd	r21, Y+3	; 0x03
     43c:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <__data_end>
     440:	30 91 63 02 	lds	r19, 0x0263	; 0x800263 <__data_end+0x1>
     444:	ba 01       	movw	r22, r20
     446:	62 23       	and	r22, r18
     448:	73 23       	and	r23, r19
     44a:	67 2b       	or	r22, r23
     44c:	29 f1       	breq	.+74     	; 0x498 <vPortFree+0x70>
     44e:	68 81       	ld	r22, Y
     450:	79 81       	ldd	r23, Y+1	; 0x01
     452:	67 2b       	or	r22, r23
     454:	09 f5       	brne	.+66     	; 0x498 <vPortFree+0x70>
     456:	20 95       	com	r18
     458:	30 95       	com	r19
     45a:	24 23       	and	r18, r20
     45c:	35 23       	and	r19, r21
     45e:	3b 83       	std	Y+3, r19	; 0x03
     460:	2a 83       	std	Y+2, r18	; 0x02
     462:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <vTaskSuspendAll>
     466:	8a 81       	ldd	r24, Y+2	; 0x02
     468:	9b 81       	ldd	r25, Y+3	; 0x03
     46a:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <xFreeBytesRemaining>
     46e:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <xFreeBytesRemaining+0x1>
     472:	82 0f       	add	r24, r18
     474:	93 1f       	adc	r25, r19
     476:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <xFreeBytesRemaining+0x1>
     47a:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <xFreeBytesRemaining>
     47e:	ce 01       	movw	r24, r28
     480:	e0 de       	rcall	.-576    	; 0x242 <prvInsertBlockIntoFreeList>
     482:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <xNumberOfSuccessfulFrees>
     486:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <xNumberOfSuccessfulFrees+0x1>
     48a:	01 96       	adiw	r24, 0x01	; 1
     48c:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <xNumberOfSuccessfulFrees+0x1>
     490:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <xNumberOfSuccessfulFrees>
     494:	0e 94 fc 0b 	call	0x17f8	; 0x17f8 <xTaskResumeAll>
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	1f 91       	pop	r17
     49e:	0f 91       	pop	r16
     4a0:	08 95       	ret

000004a2 <vListInitialise>:
     4a2:	fc 01       	movw	r30, r24
     4a4:	03 96       	adiw	r24, 0x03	; 3
     4a6:	92 83       	std	Z+2, r25	; 0x02
     4a8:	81 83       	std	Z+1, r24	; 0x01
     4aa:	2f ef       	ldi	r18, 0xFF	; 255
     4ac:	3f ef       	ldi	r19, 0xFF	; 255
     4ae:	34 83       	std	Z+4, r19	; 0x04
     4b0:	23 83       	std	Z+3, r18	; 0x03
     4b2:	96 83       	std	Z+6, r25	; 0x06
     4b4:	85 83       	std	Z+5, r24	; 0x05
     4b6:	90 87       	std	Z+8, r25	; 0x08
     4b8:	87 83       	std	Z+7, r24	; 0x07
     4ba:	10 82       	st	Z, r1
     4bc:	08 95       	ret

000004be <vListInitialiseItem>:
     4be:	fc 01       	movw	r30, r24
     4c0:	11 86       	std	Z+9, r1	; 0x09
     4c2:	10 86       	std	Z+8, r1	; 0x08
     4c4:	08 95       	ret

000004c6 <vListInsertEnd>:
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	9c 01       	movw	r18, r24
     4cc:	fb 01       	movw	r30, r22
     4ce:	dc 01       	movw	r26, r24
     4d0:	11 96       	adiw	r26, 0x01	; 1
     4d2:	cd 91       	ld	r28, X+
     4d4:	dc 91       	ld	r29, X
     4d6:	12 97       	sbiw	r26, 0x02	; 2
     4d8:	d3 83       	std	Z+3, r29	; 0x03
     4da:	c2 83       	std	Z+2, r28	; 0x02
     4dc:	8c 81       	ldd	r24, Y+4	; 0x04
     4de:	9d 81       	ldd	r25, Y+5	; 0x05
     4e0:	95 83       	std	Z+5, r25	; 0x05
     4e2:	84 83       	std	Z+4, r24	; 0x04
     4e4:	8c 81       	ldd	r24, Y+4	; 0x04
     4e6:	9d 81       	ldd	r25, Y+5	; 0x05
     4e8:	dc 01       	movw	r26, r24
     4ea:	13 96       	adiw	r26, 0x03	; 3
     4ec:	7c 93       	st	X, r23
     4ee:	6e 93       	st	-X, r22
     4f0:	12 97       	sbiw	r26, 0x02	; 2
     4f2:	7d 83       	std	Y+5, r23	; 0x05
     4f4:	6c 83       	std	Y+4, r22	; 0x04
     4f6:	31 87       	std	Z+9, r19	; 0x09
     4f8:	20 87       	std	Z+8, r18	; 0x08
     4fa:	f9 01       	movw	r30, r18
     4fc:	80 81       	ld	r24, Z
     4fe:	8f 5f       	subi	r24, 0xFF	; 255
     500:	80 83       	st	Z, r24
     502:	df 91       	pop	r29
     504:	cf 91       	pop	r28
     506:	08 95       	ret

00000508 <vListInsert>:
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	eb 01       	movw	r28, r22
     50e:	48 81       	ld	r20, Y
     510:	59 81       	ldd	r21, Y+1	; 0x01
     512:	4f 3f       	cpi	r20, 0xFF	; 255
     514:	2f ef       	ldi	r18, 0xFF	; 255
     516:	52 07       	cpc	r21, r18
     518:	21 f4       	brne	.+8      	; 0x522 <vListInsert+0x1a>
     51a:	fc 01       	movw	r30, r24
     51c:	a7 81       	ldd	r26, Z+7	; 0x07
     51e:	b0 85       	ldd	r27, Z+8	; 0x08
     520:	0d c0       	rjmp	.+26     	; 0x53c <vListInsert+0x34>
     522:	dc 01       	movw	r26, r24
     524:	13 96       	adiw	r26, 0x03	; 3
     526:	01 c0       	rjmp	.+2      	; 0x52a <vListInsert+0x22>
     528:	df 01       	movw	r26, r30
     52a:	12 96       	adiw	r26, 0x02	; 2
     52c:	ed 91       	ld	r30, X+
     52e:	fc 91       	ld	r31, X
     530:	13 97       	sbiw	r26, 0x03	; 3
     532:	20 81       	ld	r18, Z
     534:	31 81       	ldd	r19, Z+1	; 0x01
     536:	42 17       	cp	r20, r18
     538:	53 07       	cpc	r21, r19
     53a:	b0 f7       	brcc	.-20     	; 0x528 <vListInsert+0x20>
     53c:	12 96       	adiw	r26, 0x02	; 2
     53e:	ed 91       	ld	r30, X+
     540:	fc 91       	ld	r31, X
     542:	13 97       	sbiw	r26, 0x03	; 3
     544:	fb 83       	std	Y+3, r31	; 0x03
     546:	ea 83       	std	Y+2, r30	; 0x02
     548:	d5 83       	std	Z+5, r29	; 0x05
     54a:	c4 83       	std	Z+4, r28	; 0x04
     54c:	bd 83       	std	Y+5, r27	; 0x05
     54e:	ac 83       	std	Y+4, r26	; 0x04
     550:	13 96       	adiw	r26, 0x03	; 3
     552:	dc 93       	st	X, r29
     554:	ce 93       	st	-X, r28
     556:	12 97       	sbiw	r26, 0x02	; 2
     558:	99 87       	std	Y+9, r25	; 0x09
     55a:	88 87       	std	Y+8, r24	; 0x08
     55c:	fc 01       	movw	r30, r24
     55e:	20 81       	ld	r18, Z
     560:	2f 5f       	subi	r18, 0xFF	; 255
     562:	20 83       	st	Z, r18
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	08 95       	ret

0000056a <uxListRemove>:
     56a:	cf 93       	push	r28
     56c:	df 93       	push	r29
     56e:	fc 01       	movw	r30, r24
     570:	a0 85       	ldd	r26, Z+8	; 0x08
     572:	b1 85       	ldd	r27, Z+9	; 0x09
     574:	c2 81       	ldd	r28, Z+2	; 0x02
     576:	d3 81       	ldd	r29, Z+3	; 0x03
     578:	84 81       	ldd	r24, Z+4	; 0x04
     57a:	95 81       	ldd	r25, Z+5	; 0x05
     57c:	9d 83       	std	Y+5, r25	; 0x05
     57e:	8c 83       	std	Y+4, r24	; 0x04
     580:	c4 81       	ldd	r28, Z+4	; 0x04
     582:	d5 81       	ldd	r29, Z+5	; 0x05
     584:	82 81       	ldd	r24, Z+2	; 0x02
     586:	93 81       	ldd	r25, Z+3	; 0x03
     588:	9b 83       	std	Y+3, r25	; 0x03
     58a:	8a 83       	std	Y+2, r24	; 0x02
     58c:	11 96       	adiw	r26, 0x01	; 1
     58e:	8d 91       	ld	r24, X+
     590:	9c 91       	ld	r25, X
     592:	12 97       	sbiw	r26, 0x02	; 2
     594:	e8 17       	cp	r30, r24
     596:	f9 07       	cpc	r31, r25
     598:	31 f4       	brne	.+12     	; 0x5a6 <uxListRemove+0x3c>
     59a:	84 81       	ldd	r24, Z+4	; 0x04
     59c:	95 81       	ldd	r25, Z+5	; 0x05
     59e:	12 96       	adiw	r26, 0x02	; 2
     5a0:	9c 93       	st	X, r25
     5a2:	8e 93       	st	-X, r24
     5a4:	11 97       	sbiw	r26, 0x01	; 1
     5a6:	11 86       	std	Z+9, r1	; 0x09
     5a8:	10 86       	std	Z+8, r1	; 0x08
     5aa:	8c 91       	ld	r24, X
     5ac:	81 50       	subi	r24, 0x01	; 1
     5ae:	8c 93       	st	X, r24
     5b0:	8c 91       	ld	r24, X
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	08 95       	ret

000005b8 <prvSetupTimerInterrupt>:
     5b8:	a8 95       	wdr
     5ba:	90 ec       	ldi	r25, 0xC0	; 192
     5bc:	88 e1       	ldi	r24, 0x18	; 24
     5be:	0f b6       	in	r0, 0x3f	; 63
     5c0:	f8 94       	cli
     5c2:	a8 95       	wdr
     5c4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     5c8:	0f be       	out	0x3f, r0	; 63
     5ca:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     5ce:	08 95       	ret

000005d0 <pxPortInitialiseStack>:
     5d0:	fc 01       	movw	r30, r24
     5d2:	60 83       	st	Z, r22
     5d4:	31 97       	sbiw	r30, 0x01	; 1
     5d6:	70 83       	st	Z, r23
     5d8:	31 97       	sbiw	r30, 0x01	; 1
     5da:	10 82       	st	Z, r1
     5dc:	31 97       	sbiw	r30, 0x01	; 1
     5de:	10 82       	st	Z, r1
     5e0:	31 97       	sbiw	r30, 0x01	; 1
     5e2:	20 e8       	ldi	r18, 0x80	; 128
     5e4:	20 83       	st	Z, r18
     5e6:	31 97       	sbiw	r30, 0x01	; 1
     5e8:	10 82       	st	Z, r1
     5ea:	31 97       	sbiw	r30, 0x01	; 1
     5ec:	10 82       	st	Z, r1
     5ee:	31 97       	sbiw	r30, 0x01	; 1
     5f0:	10 82       	st	Z, r1
     5f2:	77 97       	sbiw	r30, 0x17	; 23
     5f4:	40 83       	st	Z, r20
     5f6:	31 97       	sbiw	r30, 0x01	; 1
     5f8:	50 83       	st	Z, r21
     5fa:	86 97       	sbiw	r24, 0x26	; 38
     5fc:	08 95       	ret

000005fe <xPortStartScheduler>:
     5fe:	dc df       	rcall	.-72     	; 0x5b8 <prvSetupTimerInterrupt>
     600:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
     604:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
     608:	cd 91       	ld	r28, X+
     60a:	cd bf       	out	0x3d, r28	; 61
     60c:	dd 91       	ld	r29, X+
     60e:	de bf       	out	0x3e, r29	; 62
     610:	ff 91       	pop	r31
     612:	ef 91       	pop	r30
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	bf 91       	pop	r27
     61a:	af 91       	pop	r26
     61c:	9f 91       	pop	r25
     61e:	8f 91       	pop	r24
     620:	7f 91       	pop	r23
     622:	6f 91       	pop	r22
     624:	5f 91       	pop	r21
     626:	4f 91       	pop	r20
     628:	3f 91       	pop	r19
     62a:	2f 91       	pop	r18
     62c:	1f 91       	pop	r17
     62e:	0f 91       	pop	r16
     630:	ff 90       	pop	r15
     632:	ef 90       	pop	r14
     634:	df 90       	pop	r13
     636:	cf 90       	pop	r12
     638:	bf 90       	pop	r11
     63a:	af 90       	pop	r10
     63c:	9f 90       	pop	r9
     63e:	8f 90       	pop	r8
     640:	7f 90       	pop	r7
     642:	6f 90       	pop	r6
     644:	5f 90       	pop	r5
     646:	4f 90       	pop	r4
     648:	3f 90       	pop	r3
     64a:	2f 90       	pop	r2
     64c:	1f 90       	pop	r1
     64e:	0f 90       	pop	r0
     650:	0c be       	out	0x3c, r0	; 60
     652:	0f 90       	pop	r0
     654:	0b be       	out	0x3b, r0	; 59
     656:	0f 90       	pop	r0
     658:	0f be       	out	0x3f, r0	; 63
     65a:	0f 90       	pop	r0
     65c:	08 95       	ret
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	08 95       	ret

00000662 <vPortYield>:
     662:	0f 92       	push	r0
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	f8 94       	cli
     668:	0f 92       	push	r0
     66a:	0b b6       	in	r0, 0x3b	; 59
     66c:	0f 92       	push	r0
     66e:	0c b6       	in	r0, 0x3c	; 60
     670:	0f 92       	push	r0
     672:	1f 92       	push	r1
     674:	11 24       	eor	r1, r1
     676:	2f 92       	push	r2
     678:	3f 92       	push	r3
     67a:	4f 92       	push	r4
     67c:	5f 92       	push	r5
     67e:	6f 92       	push	r6
     680:	7f 92       	push	r7
     682:	8f 92       	push	r8
     684:	9f 92       	push	r9
     686:	af 92       	push	r10
     688:	bf 92       	push	r11
     68a:	cf 92       	push	r12
     68c:	df 92       	push	r13
     68e:	ef 92       	push	r14
     690:	ff 92       	push	r15
     692:	0f 93       	push	r16
     694:	1f 93       	push	r17
     696:	2f 93       	push	r18
     698:	3f 93       	push	r19
     69a:	4f 93       	push	r20
     69c:	5f 93       	push	r21
     69e:	6f 93       	push	r22
     6a0:	7f 93       	push	r23
     6a2:	8f 93       	push	r24
     6a4:	9f 93       	push	r25
     6a6:	af 93       	push	r26
     6a8:	bf 93       	push	r27
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	ef 93       	push	r30
     6b0:	ff 93       	push	r31
     6b2:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
     6b6:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
     6ba:	0d b6       	in	r0, 0x3d	; 61
     6bc:	0d 92       	st	X+, r0
     6be:	0e b6       	in	r0, 0x3e	; 62
     6c0:	0d 92       	st	X+, r0
     6c2:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <vTaskSwitchContext>
     6c6:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
     6ca:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
     6ce:	cd 91       	ld	r28, X+
     6d0:	cd bf       	out	0x3d, r28	; 61
     6d2:	dd 91       	ld	r29, X+
     6d4:	de bf       	out	0x3e, r29	; 62
     6d6:	ff 91       	pop	r31
     6d8:	ef 91       	pop	r30
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	bf 91       	pop	r27
     6e0:	af 91       	pop	r26
     6e2:	9f 91       	pop	r25
     6e4:	8f 91       	pop	r24
     6e6:	7f 91       	pop	r23
     6e8:	6f 91       	pop	r22
     6ea:	5f 91       	pop	r21
     6ec:	4f 91       	pop	r20
     6ee:	3f 91       	pop	r19
     6f0:	2f 91       	pop	r18
     6f2:	1f 91       	pop	r17
     6f4:	0f 91       	pop	r16
     6f6:	ff 90       	pop	r15
     6f8:	ef 90       	pop	r14
     6fa:	df 90       	pop	r13
     6fc:	cf 90       	pop	r12
     6fe:	bf 90       	pop	r11
     700:	af 90       	pop	r10
     702:	9f 90       	pop	r9
     704:	8f 90       	pop	r8
     706:	7f 90       	pop	r7
     708:	6f 90       	pop	r6
     70a:	5f 90       	pop	r5
     70c:	4f 90       	pop	r4
     70e:	3f 90       	pop	r3
     710:	2f 90       	pop	r2
     712:	1f 90       	pop	r1
     714:	0f 90       	pop	r0
     716:	0c be       	out	0x3c, r0	; 60
     718:	0f 90       	pop	r0
     71a:	0b be       	out	0x3b, r0	; 59
     71c:	0f 90       	pop	r0
     71e:	0f be       	out	0x3f, r0	; 63
     720:	0f 90       	pop	r0
     722:	08 95       	ret

00000724 <vPortYieldFromTick>:
     724:	0f 92       	push	r0
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	0f 92       	push	r0
     72c:	0b b6       	in	r0, 0x3b	; 59
     72e:	0f 92       	push	r0
     730:	0c b6       	in	r0, 0x3c	; 60
     732:	0f 92       	push	r0
     734:	1f 92       	push	r1
     736:	11 24       	eor	r1, r1
     738:	2f 92       	push	r2
     73a:	3f 92       	push	r3
     73c:	4f 92       	push	r4
     73e:	5f 92       	push	r5
     740:	6f 92       	push	r6
     742:	7f 92       	push	r7
     744:	8f 92       	push	r8
     746:	9f 92       	push	r9
     748:	af 92       	push	r10
     74a:	bf 92       	push	r11
     74c:	cf 92       	push	r12
     74e:	df 92       	push	r13
     750:	ef 92       	push	r14
     752:	ff 92       	push	r15
     754:	0f 93       	push	r16
     756:	1f 93       	push	r17
     758:	2f 93       	push	r18
     75a:	3f 93       	push	r19
     75c:	4f 93       	push	r20
     75e:	5f 93       	push	r21
     760:	6f 93       	push	r22
     762:	7f 93       	push	r23
     764:	8f 93       	push	r24
     766:	9f 93       	push	r25
     768:	af 93       	push	r26
     76a:	bf 93       	push	r27
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	ef 93       	push	r30
     772:	ff 93       	push	r31
     774:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
     778:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
     77c:	0d b6       	in	r0, 0x3d	; 61
     77e:	0d 92       	st	X+, r0
     780:	0e b6       	in	r0, 0x3e	; 62
     782:	0d 92       	st	X+, r0
     784:	13 be       	out	0x33, r1	; 51
     786:	1f d7       	rcall	.+3646   	; 0x15c6 <xTaskIncrementTick>
     788:	81 11       	cpse	r24, r1
     78a:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <vTaskSwitchContext>
     78e:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
     792:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
     796:	cd 91       	ld	r28, X+
     798:	cd bf       	out	0x3d, r28	; 61
     79a:	dd 91       	ld	r29, X+
     79c:	de bf       	out	0x3e, r29	; 62
     79e:	ff 91       	pop	r31
     7a0:	ef 91       	pop	r30
     7a2:	df 91       	pop	r29
     7a4:	cf 91       	pop	r28
     7a6:	bf 91       	pop	r27
     7a8:	af 91       	pop	r26
     7aa:	9f 91       	pop	r25
     7ac:	8f 91       	pop	r24
     7ae:	7f 91       	pop	r23
     7b0:	6f 91       	pop	r22
     7b2:	5f 91       	pop	r21
     7b4:	4f 91       	pop	r20
     7b6:	3f 91       	pop	r19
     7b8:	2f 91       	pop	r18
     7ba:	1f 91       	pop	r17
     7bc:	0f 91       	pop	r16
     7be:	ff 90       	pop	r15
     7c0:	ef 90       	pop	r14
     7c2:	df 90       	pop	r13
     7c4:	cf 90       	pop	r12
     7c6:	bf 90       	pop	r11
     7c8:	af 90       	pop	r10
     7ca:	9f 90       	pop	r9
     7cc:	8f 90       	pop	r8
     7ce:	7f 90       	pop	r7
     7d0:	6f 90       	pop	r6
     7d2:	5f 90       	pop	r5
     7d4:	4f 90       	pop	r4
     7d6:	3f 90       	pop	r3
     7d8:	2f 90       	pop	r2
     7da:	1f 90       	pop	r1
     7dc:	0f 90       	pop	r0
     7de:	0c be       	out	0x3c, r0	; 60
     7e0:	0f 90       	pop	r0
     7e2:	0b be       	out	0x3b, r0	; 59
     7e4:	0f 90       	pop	r0
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	0f 90       	pop	r0
     7ea:	08 95       	ret

000007ec <__vector_12>:
     7ec:	9b df       	rcall	.-202    	; 0x724 <vPortYieldFromTick>
     7ee:	18 95       	reti

000007f0 <prvGetDisinheritPriorityAfterTimeout>:
     7f0:	dc 01       	movw	r26, r24
     7f2:	51 96       	adiw	r26, 0x11	; 17
     7f4:	2c 91       	ld	r18, X
     7f6:	51 97       	sbiw	r26, 0x11	; 17
     7f8:	22 23       	and	r18, r18
     7fa:	41 f0       	breq	.+16     	; 0x80c <prvGetDisinheritPriorityAfterTimeout+0x1c>
     7fc:	56 96       	adiw	r26, 0x16	; 22
     7fe:	ed 91       	ld	r30, X+
     800:	fc 91       	ld	r31, X
     802:	57 97       	sbiw	r26, 0x17	; 23
     804:	90 81       	ld	r25, Z
     806:	84 e0       	ldi	r24, 0x04	; 4
     808:	89 1b       	sub	r24, r25
     80a:	08 95       	ret
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	08 95       	ret

00000810 <prvIsQueueEmpty>:
     810:	0f b6       	in	r0, 0x3f	; 63
     812:	f8 94       	cli
     814:	0f 92       	push	r0
     816:	fc 01       	movw	r30, r24
     818:	82 8d       	ldd	r24, Z+26	; 0x1a
     81a:	81 11       	cpse	r24, r1
     81c:	02 c0       	rjmp	.+4      	; 0x822 <prvIsQueueEmpty+0x12>
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	01 c0       	rjmp	.+2      	; 0x824 <prvIsQueueEmpty+0x14>
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	0f 90       	pop	r0
     826:	0f be       	out	0x3f, r0	; 63
     828:	08 95       	ret

0000082a <prvIsQueueFull>:
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	0f 92       	push	r0
     830:	fc 01       	movw	r30, r24
     832:	22 8d       	ldd	r18, Z+26	; 0x1a
     834:	83 8d       	ldd	r24, Z+27	; 0x1b
     836:	28 13       	cpse	r18, r24
     838:	02 c0       	rjmp	.+4      	; 0x83e <prvIsQueueFull+0x14>
     83a:	81 e0       	ldi	r24, 0x01	; 1
     83c:	01 c0       	rjmp	.+2      	; 0x840 <prvIsQueueFull+0x16>
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	0f 90       	pop	r0
     842:	0f be       	out	0x3f, r0	; 63
     844:	08 95       	ret

00000846 <prvCopyDataToQueue>:
     846:	0f 93       	push	r16
     848:	1f 93       	push	r17
     84a:	cf 93       	push	r28
     84c:	df 93       	push	r29
     84e:	ec 01       	movw	r28, r24
     850:	04 2f       	mov	r16, r20
     852:	1a 8d       	ldd	r17, Y+26	; 0x1a
     854:	4c 8d       	ldd	r20, Y+28	; 0x1c
     856:	41 11       	cpse	r20, r1
     858:	0c c0       	rjmp	.+24     	; 0x872 <prvCopyDataToQueue+0x2c>
     85a:	88 81       	ld	r24, Y
     85c:	99 81       	ldd	r25, Y+1	; 0x01
     85e:	89 2b       	or	r24, r25
     860:	09 f0       	breq	.+2      	; 0x864 <prvCopyDataToQueue+0x1e>
     862:	42 c0       	rjmp	.+132    	; 0x8e8 <prvCopyDataToQueue+0xa2>
     864:	8c 81       	ldd	r24, Y+4	; 0x04
     866:	9d 81       	ldd	r25, Y+5	; 0x05
     868:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <xTaskPriorityDisinherit>
     86c:	1d 82       	std	Y+5, r1	; 0x05
     86e:	1c 82       	std	Y+4, r1	; 0x04
     870:	42 c0       	rjmp	.+132    	; 0x8f6 <prvCopyDataToQueue+0xb0>
     872:	01 11       	cpse	r16, r1
     874:	17 c0       	rjmp	.+46     	; 0x8a4 <prvCopyDataToQueue+0x5e>
     876:	50 e0       	ldi	r21, 0x00	; 0
     878:	8a 81       	ldd	r24, Y+2	; 0x02
     87a:	9b 81       	ldd	r25, Y+3	; 0x03
     87c:	0e 94 8a 21 	call	0x4314	; 0x4314 <memcpy>
     880:	2c 8d       	ldd	r18, Y+28	; 0x1c
     882:	8a 81       	ldd	r24, Y+2	; 0x02
     884:	9b 81       	ldd	r25, Y+3	; 0x03
     886:	82 0f       	add	r24, r18
     888:	91 1d       	adc	r25, r1
     88a:	9b 83       	std	Y+3, r25	; 0x03
     88c:	8a 83       	std	Y+2, r24	; 0x02
     88e:	2c 81       	ldd	r18, Y+4	; 0x04
     890:	3d 81       	ldd	r19, Y+5	; 0x05
     892:	82 17       	cp	r24, r18
     894:	93 07       	cpc	r25, r19
     896:	50 f1       	brcs	.+84     	; 0x8ec <prvCopyDataToQueue+0xa6>
     898:	88 81       	ld	r24, Y
     89a:	99 81       	ldd	r25, Y+1	; 0x01
     89c:	9b 83       	std	Y+3, r25	; 0x03
     89e:	8a 83       	std	Y+2, r24	; 0x02
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	29 c0       	rjmp	.+82     	; 0x8f6 <prvCopyDataToQueue+0xb0>
     8a4:	50 e0       	ldi	r21, 0x00	; 0
     8a6:	8e 81       	ldd	r24, Y+6	; 0x06
     8a8:	9f 81       	ldd	r25, Y+7	; 0x07
     8aa:	0e 94 8a 21 	call	0x4314	; 0x4314 <memcpy>
     8ae:	8c 8d       	ldd	r24, Y+28	; 0x1c
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	91 95       	neg	r25
     8b4:	81 95       	neg	r24
     8b6:	91 09       	sbc	r25, r1
     8b8:	2e 81       	ldd	r18, Y+6	; 0x06
     8ba:	3f 81       	ldd	r19, Y+7	; 0x07
     8bc:	28 0f       	add	r18, r24
     8be:	39 1f       	adc	r19, r25
     8c0:	3f 83       	std	Y+7, r19	; 0x07
     8c2:	2e 83       	std	Y+6, r18	; 0x06
     8c4:	48 81       	ld	r20, Y
     8c6:	59 81       	ldd	r21, Y+1	; 0x01
     8c8:	24 17       	cp	r18, r20
     8ca:	35 07       	cpc	r19, r21
     8cc:	30 f4       	brcc	.+12     	; 0x8da <prvCopyDataToQueue+0x94>
     8ce:	2c 81       	ldd	r18, Y+4	; 0x04
     8d0:	3d 81       	ldd	r19, Y+5	; 0x05
     8d2:	82 0f       	add	r24, r18
     8d4:	93 1f       	adc	r25, r19
     8d6:	9f 83       	std	Y+7, r25	; 0x07
     8d8:	8e 83       	std	Y+6, r24	; 0x06
     8da:	02 30       	cpi	r16, 0x02	; 2
     8dc:	49 f4       	brne	.+18     	; 0x8f0 <prvCopyDataToQueue+0xaa>
     8de:	11 23       	and	r17, r17
     8e0:	49 f0       	breq	.+18     	; 0x8f4 <prvCopyDataToQueue+0xae>
     8e2:	11 50       	subi	r17, 0x01	; 1
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	07 c0       	rjmp	.+14     	; 0x8f6 <prvCopyDataToQueue+0xb0>
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	05 c0       	rjmp	.+10     	; 0x8f6 <prvCopyDataToQueue+0xb0>
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	03 c0       	rjmp	.+6      	; 0x8f6 <prvCopyDataToQueue+0xb0>
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	01 c0       	rjmp	.+2      	; 0x8f6 <prvCopyDataToQueue+0xb0>
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	1f 5f       	subi	r17, 0xFF	; 255
     8f8:	1a 8f       	std	Y+26, r17	; 0x1a
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	1f 91       	pop	r17
     900:	0f 91       	pop	r16
     902:	08 95       	ret

00000904 <prvCopyDataFromQueue>:
     904:	fc 01       	movw	r30, r24
     906:	44 8d       	ldd	r20, Z+28	; 0x1c
     908:	44 23       	and	r20, r20
     90a:	a9 f0       	breq	.+42     	; 0x936 <prvCopyDataFromQueue+0x32>
     90c:	50 e0       	ldi	r21, 0x00	; 0
     90e:	26 81       	ldd	r18, Z+6	; 0x06
     910:	37 81       	ldd	r19, Z+7	; 0x07
     912:	24 0f       	add	r18, r20
     914:	35 1f       	adc	r19, r21
     916:	37 83       	std	Z+7, r19	; 0x07
     918:	26 83       	std	Z+6, r18	; 0x06
     91a:	84 81       	ldd	r24, Z+4	; 0x04
     91c:	95 81       	ldd	r25, Z+5	; 0x05
     91e:	28 17       	cp	r18, r24
     920:	39 07       	cpc	r19, r25
     922:	20 f0       	brcs	.+8      	; 0x92c <prvCopyDataFromQueue+0x28>
     924:	80 81       	ld	r24, Z
     926:	91 81       	ldd	r25, Z+1	; 0x01
     928:	97 83       	std	Z+7, r25	; 0x07
     92a:	86 83       	std	Z+6, r24	; 0x06
     92c:	cb 01       	movw	r24, r22
     92e:	66 81       	ldd	r22, Z+6	; 0x06
     930:	77 81       	ldd	r23, Z+7	; 0x07
     932:	0c 94 8a 21 	jmp	0x4314	; 0x4314 <memcpy>
     936:	08 95       	ret

00000938 <prvUnlockQueue>:
     938:	1f 93       	push	r17
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	ec 01       	movw	r28, r24
     940:	0f b6       	in	r0, 0x3f	; 63
     942:	f8 94       	cli
     944:	0f 92       	push	r0
     946:	1e 8d       	ldd	r17, Y+30	; 0x1e
     948:	0b c0       	rjmp	.+22     	; 0x960 <prvUnlockQueue+0x28>
     94a:	89 89       	ldd	r24, Y+17	; 0x11
     94c:	88 23       	and	r24, r24
     94e:	51 f0       	breq	.+20     	; 0x964 <prvUnlockQueue+0x2c>
     950:	ce 01       	movw	r24, r28
     952:	41 96       	adiw	r24, 0x11	; 17
     954:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <xTaskRemoveFromEventList>
     958:	81 11       	cpse	r24, r1
     95a:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <vTaskMissedYield>
     95e:	11 50       	subi	r17, 0x01	; 1
     960:	11 16       	cp	r1, r17
     962:	9c f3       	brlt	.-26     	; 0x94a <prvUnlockQueue+0x12>
     964:	8f ef       	ldi	r24, 0xFF	; 255
     966:	8e 8f       	std	Y+30, r24	; 0x1e
     968:	0f 90       	pop	r0
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	0f b6       	in	r0, 0x3f	; 63
     96e:	f8 94       	cli
     970:	0f 92       	push	r0
     972:	1d 8d       	ldd	r17, Y+29	; 0x1d
     974:	0b c0       	rjmp	.+22     	; 0x98c <prvUnlockQueue+0x54>
     976:	88 85       	ldd	r24, Y+8	; 0x08
     978:	88 23       	and	r24, r24
     97a:	51 f0       	breq	.+20     	; 0x990 <prvUnlockQueue+0x58>
     97c:	ce 01       	movw	r24, r28
     97e:	08 96       	adiw	r24, 0x08	; 8
     980:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <xTaskRemoveFromEventList>
     984:	81 11       	cpse	r24, r1
     986:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <vTaskMissedYield>
     98a:	11 50       	subi	r17, 0x01	; 1
     98c:	11 16       	cp	r1, r17
     98e:	9c f3       	brlt	.-26     	; 0x976 <prvUnlockQueue+0x3e>
     990:	8f ef       	ldi	r24, 0xFF	; 255
     992:	8d 8f       	std	Y+29, r24	; 0x1d
     994:	0f 90       	pop	r0
     996:	0f be       	out	0x3f, r0	; 63
     998:	df 91       	pop	r29
     99a:	cf 91       	pop	r28
     99c:	1f 91       	pop	r17
     99e:	08 95       	ret

000009a0 <xQueueGenericReset>:
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	ec 01       	movw	r28, r24
     9a6:	0f b6       	in	r0, 0x3f	; 63
     9a8:	f8 94       	cli
     9aa:	0f 92       	push	r0
     9ac:	e8 81       	ld	r30, Y
     9ae:	f9 81       	ldd	r31, Y+1	; 0x01
     9b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9b2:	2c 8d       	ldd	r18, Y+28	; 0x1c
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	82 9f       	mul	r24, r18
     9ba:	a0 01       	movw	r20, r0
     9bc:	83 9f       	mul	r24, r19
     9be:	50 0d       	add	r21, r0
     9c0:	92 9f       	mul	r25, r18
     9c2:	50 0d       	add	r21, r0
     9c4:	11 24       	eor	r1, r1
     9c6:	4e 0f       	add	r20, r30
     9c8:	5f 1f       	adc	r21, r31
     9ca:	5d 83       	std	Y+5, r21	; 0x05
     9cc:	4c 83       	std	Y+4, r20	; 0x04
     9ce:	1a 8e       	std	Y+26, r1	; 0x1a
     9d0:	fb 83       	std	Y+3, r31	; 0x03
     9d2:	ea 83       	std	Y+2, r30	; 0x02
     9d4:	01 97       	sbiw	r24, 0x01	; 1
     9d6:	28 9f       	mul	r18, r24
     9d8:	a0 01       	movw	r20, r0
     9da:	29 9f       	mul	r18, r25
     9dc:	50 0d       	add	r21, r0
     9de:	38 9f       	mul	r19, r24
     9e0:	50 0d       	add	r21, r0
     9e2:	11 24       	eor	r1, r1
     9e4:	cf 01       	movw	r24, r30
     9e6:	84 0f       	add	r24, r20
     9e8:	95 1f       	adc	r25, r21
     9ea:	9f 83       	std	Y+7, r25	; 0x07
     9ec:	8e 83       	std	Y+6, r24	; 0x06
     9ee:	8f ef       	ldi	r24, 0xFF	; 255
     9f0:	8d 8f       	std	Y+29, r24	; 0x1d
     9f2:	8e 8f       	std	Y+30, r24	; 0x1e
     9f4:	61 11       	cpse	r22, r1
     9f6:	0b c0       	rjmp	.+22     	; 0xa0e <xQueueGenericReset+0x6e>
     9f8:	88 85       	ldd	r24, Y+8	; 0x08
     9fa:	88 23       	and	r24, r24
     9fc:	71 f0       	breq	.+28     	; 0xa1a <xQueueGenericReset+0x7a>
     9fe:	ce 01       	movw	r24, r28
     a00:	08 96       	adiw	r24, 0x08	; 8
     a02:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <xTaskRemoveFromEventList>
     a06:	88 23       	and	r24, r24
     a08:	41 f0       	breq	.+16     	; 0xa1a <xQueueGenericReset+0x7a>
     a0a:	2b de       	rcall	.-938    	; 0x662 <vPortYield>
     a0c:	06 c0       	rjmp	.+12     	; 0xa1a <xQueueGenericReset+0x7a>
     a0e:	ce 01       	movw	r24, r28
     a10:	08 96       	adiw	r24, 0x08	; 8
     a12:	47 dd       	rcall	.-1394   	; 0x4a2 <vListInitialise>
     a14:	ce 01       	movw	r24, r28
     a16:	41 96       	adiw	r24, 0x11	; 17
     a18:	44 dd       	rcall	.-1400   	; 0x4a2 <vListInitialise>
     a1a:	0f 90       	pop	r0
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	df 91       	pop	r29
     a22:	cf 91       	pop	r28
     a24:	08 95       	ret

00000a26 <prvInitialiseNewQueue>:
     a26:	0f 93       	push	r16
     a28:	1f 93       	push	r17
     a2a:	f8 01       	movw	r30, r16
     a2c:	61 11       	cpse	r22, r1
     a2e:	03 c0       	rjmp	.+6      	; 0xa36 <prvInitialiseNewQueue+0x10>
     a30:	11 83       	std	Z+1, r17	; 0x01
     a32:	00 83       	st	Z, r16
     a34:	02 c0       	rjmp	.+4      	; 0xa3a <prvInitialiseNewQueue+0x14>
     a36:	51 83       	std	Z+1, r21	; 0x01
     a38:	40 83       	st	Z, r20
     a3a:	83 8f       	std	Z+27, r24	; 0x1b
     a3c:	64 8f       	std	Z+28, r22	; 0x1c
     a3e:	61 e0       	ldi	r22, 0x01	; 1
     a40:	cf 01       	movw	r24, r30
     a42:	ae df       	rcall	.-164    	; 0x9a0 <xQueueGenericReset>
     a44:	1f 91       	pop	r17
     a46:	0f 91       	pop	r16
     a48:	08 95       	ret

00000a4a <xQueueGenericCreate>:
     a4a:	df 92       	push	r13
     a4c:	ef 92       	push	r14
     a4e:	ff 92       	push	r15
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	f8 2e       	mov	r15, r24
     a5a:	e6 2e       	mov	r14, r22
     a5c:	d4 2e       	mov	r13, r20
     a5e:	86 9f       	mul	r24, r22
     a60:	c0 01       	movw	r24, r0
     a62:	11 24       	eor	r1, r1
     a64:	4f 96       	adiw	r24, 0x1f	; 31
     a66:	37 dc       	rcall	.-1938   	; 0x2d6 <pvPortMalloc>
     a68:	ec 01       	movw	r28, r24
     a6a:	00 97       	sbiw	r24, 0x00	; 0
     a6c:	41 f0       	breq	.+16     	; 0xa7e <xQueueGenericCreate+0x34>
     a6e:	8c 01       	movw	r16, r24
     a70:	2d 2d       	mov	r18, r13
     a72:	ac 01       	movw	r20, r24
     a74:	41 5e       	subi	r20, 0xE1	; 225
     a76:	5f 4f       	sbci	r21, 0xFF	; 255
     a78:	6e 2d       	mov	r22, r14
     a7a:	8f 2d       	mov	r24, r15
     a7c:	d4 df       	rcall	.-88     	; 0xa26 <prvInitialiseNewQueue>
     a7e:	ce 01       	movw	r24, r28
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	1f 91       	pop	r17
     a86:	0f 91       	pop	r16
     a88:	ff 90       	pop	r15
     a8a:	ef 90       	pop	r14
     a8c:	df 90       	pop	r13
     a8e:	08 95       	ret

00000a90 <xQueueGenericSend>:
     a90:	cf 92       	push	r12
     a92:	df 92       	push	r13
     a94:	ef 92       	push	r14
     a96:	ff 92       	push	r15
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	00 d0       	rcall	.+0      	; 0xaa2 <xQueueGenericSend+0x12>
     aa2:	1f 92       	push	r1
     aa4:	1f 92       	push	r1
     aa6:	cd b7       	in	r28, 0x3d	; 61
     aa8:	de b7       	in	r29, 0x3e	; 62
     aaa:	8c 01       	movw	r16, r24
     aac:	7b 01       	movw	r14, r22
     aae:	5d 83       	std	Y+5, r21	; 0x05
     ab0:	4c 83       	std	Y+4, r20	; 0x04
     ab2:	c2 2e       	mov	r12, r18
     ab4:	d1 2c       	mov	r13, r1
     ab6:	0f b6       	in	r0, 0x3f	; 63
     ab8:	f8 94       	cli
     aba:	0f 92       	push	r0
     abc:	f8 01       	movw	r30, r16
     abe:	92 8d       	ldd	r25, Z+26	; 0x1a
     ac0:	83 8d       	ldd	r24, Z+27	; 0x1b
     ac2:	98 17       	cp	r25, r24
     ac4:	18 f0       	brcs	.+6      	; 0xacc <xQueueGenericSend+0x3c>
     ac6:	f2 e0       	ldi	r31, 0x02	; 2
     ac8:	cf 12       	cpse	r12, r31
     aca:	16 c0       	rjmp	.+44     	; 0xaf8 <xQueueGenericSend+0x68>
     acc:	4c 2d       	mov	r20, r12
     ace:	b7 01       	movw	r22, r14
     ad0:	c8 01       	movw	r24, r16
     ad2:	b9 de       	rcall	.-654    	; 0x846 <prvCopyDataToQueue>
     ad4:	f8 01       	movw	r30, r16
     ad6:	91 89       	ldd	r25, Z+17	; 0x11
     ad8:	99 23       	and	r25, r25
     ada:	41 f0       	breq	.+16     	; 0xaec <xQueueGenericSend+0x5c>
     adc:	c8 01       	movw	r24, r16
     ade:	41 96       	adiw	r24, 0x11	; 17
     ae0:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <xTaskRemoveFromEventList>
     ae4:	88 23       	and	r24, r24
     ae6:	21 f0       	breq	.+8      	; 0xaf0 <xQueueGenericSend+0x60>
     ae8:	bc dd       	rcall	.-1160   	; 0x662 <vPortYield>
     aea:	02 c0       	rjmp	.+4      	; 0xaf0 <xQueueGenericSend+0x60>
     aec:	81 11       	cpse	r24, r1
     aee:	b9 dd       	rcall	.-1166   	; 0x662 <vPortYield>
     af0:	0f 90       	pop	r0
     af2:	0f be       	out	0x3f, r0	; 63
     af4:	81 e0       	ldi	r24, 0x01	; 1
     af6:	43 c0       	rjmp	.+134    	; 0xb7e <xQueueGenericSend+0xee>
     af8:	8c 81       	ldd	r24, Y+4	; 0x04
     afa:	9d 81       	ldd	r25, Y+5	; 0x05
     afc:	89 2b       	or	r24, r25
     afe:	21 f4       	brne	.+8      	; 0xb08 <xQueueGenericSend+0x78>
     b00:	0f 90       	pop	r0
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	3b c0       	rjmp	.+118    	; 0xb7e <xQueueGenericSend+0xee>
     b08:	d1 10       	cpse	r13, r1
     b0a:	06 c0       	rjmp	.+12     	; 0xb18 <xQueueGenericSend+0x88>
     b0c:	ce 01       	movw	r24, r28
     b0e:	01 96       	adiw	r24, 0x01	; 1
     b10:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <vTaskInternalSetTimeOutState>
     b14:	dd 24       	eor	r13, r13
     b16:	d3 94       	inc	r13
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	44 d5       	rcall	.+2696   	; 0x15a6 <vTaskSuspendAll>
     b1e:	0f b6       	in	r0, 0x3f	; 63
     b20:	f8 94       	cli
     b22:	0f 92       	push	r0
     b24:	f8 01       	movw	r30, r16
     b26:	85 8d       	ldd	r24, Z+29	; 0x1d
     b28:	8f 3f       	cpi	r24, 0xFF	; 255
     b2a:	09 f4       	brne	.+2      	; 0xb2e <xQueueGenericSend+0x9e>
     b2c:	15 8e       	std	Z+29, r1	; 0x1d
     b2e:	f8 01       	movw	r30, r16
     b30:	86 8d       	ldd	r24, Z+30	; 0x1e
     b32:	8f 3f       	cpi	r24, 0xFF	; 255
     b34:	09 f4       	brne	.+2      	; 0xb38 <xQueueGenericSend+0xa8>
     b36:	16 8e       	std	Z+30, r1	; 0x1e
     b38:	0f 90       	pop	r0
     b3a:	0f be       	out	0x3f, r0	; 63
     b3c:	be 01       	movw	r22, r28
     b3e:	6c 5f       	subi	r22, 0xFC	; 252
     b40:	7f 4f       	sbci	r23, 0xFF	; 255
     b42:	ce 01       	movw	r24, r28
     b44:	01 96       	adiw	r24, 0x01	; 1
     b46:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <xTaskCheckForTimeOut>
     b4a:	81 11       	cpse	r24, r1
     b4c:	14 c0       	rjmp	.+40     	; 0xb76 <xQueueGenericSend+0xe6>
     b4e:	c8 01       	movw	r24, r16
     b50:	6c de       	rcall	.-808    	; 0x82a <prvIsQueueFull>
     b52:	88 23       	and	r24, r24
     b54:	61 f0       	breq	.+24     	; 0xb6e <xQueueGenericSend+0xde>
     b56:	6c 81       	ldd	r22, Y+4	; 0x04
     b58:	7d 81       	ldd	r23, Y+5	; 0x05
     b5a:	c8 01       	movw	r24, r16
     b5c:	08 96       	adiw	r24, 0x08	; 8
     b5e:	ff d7       	rcall	.+4094   	; 0x1b5e <vTaskPlaceOnEventList>
     b60:	c8 01       	movw	r24, r16
     b62:	ea de       	rcall	.-556    	; 0x938 <prvUnlockQueue>
     b64:	49 d6       	rcall	.+3218   	; 0x17f8 <xTaskResumeAll>
     b66:	81 11       	cpse	r24, r1
     b68:	a6 cf       	rjmp	.-180    	; 0xab6 <xQueueGenericSend+0x26>
     b6a:	7b dd       	rcall	.-1290   	; 0x662 <vPortYield>
     b6c:	a4 cf       	rjmp	.-184    	; 0xab6 <xQueueGenericSend+0x26>
     b6e:	c8 01       	movw	r24, r16
     b70:	e3 de       	rcall	.-570    	; 0x938 <prvUnlockQueue>
     b72:	42 d6       	rcall	.+3204   	; 0x17f8 <xTaskResumeAll>
     b74:	a0 cf       	rjmp	.-192    	; 0xab6 <xQueueGenericSend+0x26>
     b76:	c8 01       	movw	r24, r16
     b78:	df de       	rcall	.-578    	; 0x938 <prvUnlockQueue>
     b7a:	3e d6       	rcall	.+3196   	; 0x17f8 <xTaskResumeAll>
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	0f 90       	pop	r0
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	1f 91       	pop	r17
     b8e:	0f 91       	pop	r16
     b90:	ff 90       	pop	r15
     b92:	ef 90       	pop	r14
     b94:	df 90       	pop	r13
     b96:	cf 90       	pop	r12
     b98:	08 95       	ret

00000b9a <prvInitialiseMutex>:
     b9a:	00 97       	sbiw	r24, 0x00	; 0
     b9c:	61 f0       	breq	.+24     	; 0xbb6 <prvInitialiseMutex+0x1c>
     b9e:	fc 01       	movw	r30, r24
     ba0:	15 82       	std	Z+5, r1	; 0x05
     ba2:	14 82       	std	Z+4, r1	; 0x04
     ba4:	11 82       	std	Z+1, r1	; 0x01
     ba6:	10 82       	st	Z, r1
     ba8:	16 82       	std	Z+6, r1	; 0x06
     baa:	20 e0       	ldi	r18, 0x00	; 0
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	6d cf       	rjmp	.-294    	; 0xa90 <xQueueGenericSend>
     bb6:	08 95       	ret

00000bb8 <xQueueCreateMutex>:
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	48 2f       	mov	r20, r24
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	43 df       	rcall	.-378    	; 0xa4a <xQueueGenericCreate>
     bc4:	ec 01       	movw	r28, r24
     bc6:	e9 df       	rcall	.-46     	; 0xb9a <prvInitialiseMutex>
     bc8:	ce 01       	movw	r24, r28
     bca:	df 91       	pop	r29
     bcc:	cf 91       	pop	r28
     bce:	08 95       	ret

00000bd0 <xQueueGenericSendFromISR>:
     bd0:	ef 92       	push	r14
     bd2:	ff 92       	push	r15
     bd4:	0f 93       	push	r16
     bd6:	1f 93       	push	r17
     bd8:	cf 93       	push	r28
     bda:	df 93       	push	r29
     bdc:	8a 01       	movw	r16, r20
     bde:	fc 01       	movw	r30, r24
     be0:	52 8d       	ldd	r21, Z+26	; 0x1a
     be2:	33 8d       	ldd	r19, Z+27	; 0x1b
     be4:	53 17       	cp	r21, r19
     be6:	10 f0       	brcs	.+4      	; 0xbec <xQueueGenericSendFromISR+0x1c>
     be8:	22 30       	cpi	r18, 0x02	; 2
     bea:	f9 f4       	brne	.+62     	; 0xc2a <xQueueGenericSendFromISR+0x5a>
     bec:	42 2f       	mov	r20, r18
     bee:	78 01       	movw	r14, r16
     bf0:	ec 01       	movw	r28, r24
     bf2:	1e 8d       	ldd	r17, Y+30	; 0x1e
     bf4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     bf6:	ce 01       	movw	r24, r28
     bf8:	26 de       	rcall	.-948    	; 0x846 <prvCopyDataToQueue>
     bfa:	1f 3f       	cpi	r17, 0xFF	; 255
     bfc:	81 f4       	brne	.+32     	; 0xc1e <xQueueGenericSendFromISR+0x4e>
     bfe:	89 89       	ldd	r24, Y+17	; 0x11
     c00:	88 23       	and	r24, r24
     c02:	a9 f0       	breq	.+42     	; 0xc2e <xQueueGenericSendFromISR+0x5e>
     c04:	ce 01       	movw	r24, r28
     c06:	41 96       	adiw	r24, 0x11	; 17
     c08:	0e 94 08 0e 	call	0x1c10	; 0x1c10 <xTaskRemoveFromEventList>
     c0c:	88 23       	and	r24, r24
     c0e:	89 f0       	breq	.+34     	; 0xc32 <xQueueGenericSendFromISR+0x62>
     c10:	e1 14       	cp	r14, r1
     c12:	f1 04       	cpc	r15, r1
     c14:	81 f0       	breq	.+32     	; 0xc36 <xQueueGenericSendFromISR+0x66>
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	f7 01       	movw	r30, r14
     c1a:	80 83       	st	Z, r24
     c1c:	0d c0       	rjmp	.+26     	; 0xc38 <xQueueGenericSendFromISR+0x68>
     c1e:	ff 24       	eor	r15, r15
     c20:	f3 94       	inc	r15
     c22:	f1 0e       	add	r15, r17
     c24:	fe 8e       	std	Y+30, r15	; 0x1e
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	07 c0       	rjmp	.+14     	; 0xc38 <xQueueGenericSendFromISR+0x68>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <xQueueGenericSendFromISR+0x68>
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <xQueueGenericSendFromISR+0x68>
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	01 c0       	rjmp	.+2      	; 0xc38 <xQueueGenericSendFromISR+0x68>
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	df 91       	pop	r29
     c3a:	cf 91       	pop	r28
     c3c:	1f 91       	pop	r17
     c3e:	0f 91       	pop	r16
     c40:	ff 90       	pop	r15
     c42:	ef 90       	pop	r14
     c44:	08 95       	ret

00000c46 <xQueueReceive>:
     c46:	cf 92       	push	r12
     c48:	df 92       	push	r13
     c4a:	ef 92       	push	r14
     c4c:	ff 92       	push	r15
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	00 d0       	rcall	.+0      	; 0xc58 <xQueueReceive+0x12>
     c58:	1f 92       	push	r1
     c5a:	1f 92       	push	r1
     c5c:	cd b7       	in	r28, 0x3d	; 61
     c5e:	de b7       	in	r29, 0x3e	; 62
     c60:	8c 01       	movw	r16, r24
     c62:	6b 01       	movw	r12, r22
     c64:	5d 83       	std	Y+5, r21	; 0x05
     c66:	4c 83       	std	Y+4, r20	; 0x04
     c68:	e1 2c       	mov	r14, r1
     c6a:	0f b6       	in	r0, 0x3f	; 63
     c6c:	f8 94       	cli
     c6e:	0f 92       	push	r0
     c70:	f8 01       	movw	r30, r16
     c72:	f2 8c       	ldd	r15, Z+26	; 0x1a
     c74:	ff 20       	and	r15, r15
     c76:	91 f0       	breq	.+36     	; 0xc9c <xQueueReceive+0x56>
     c78:	b6 01       	movw	r22, r12
     c7a:	c8 01       	movw	r24, r16
     c7c:	43 de       	rcall	.-890    	; 0x904 <prvCopyDataFromQueue>
     c7e:	fa 94       	dec	r15
     c80:	f8 01       	movw	r30, r16
     c82:	f2 8e       	std	Z+26, r15	; 0x1a
     c84:	80 85       	ldd	r24, Z+8	; 0x08
     c86:	88 23       	and	r24, r24
     c88:	29 f0       	breq	.+10     	; 0xc94 <xQueueReceive+0x4e>
     c8a:	c8 01       	movw	r24, r16
     c8c:	08 96       	adiw	r24, 0x08	; 8
     c8e:	c0 d7       	rcall	.+3968   	; 0x1c10 <xTaskRemoveFromEventList>
     c90:	81 11       	cpse	r24, r1
     c92:	e7 dc       	rcall	.-1586   	; 0x662 <vPortYield>
     c94:	0f 90       	pop	r0
     c96:	0f be       	out	0x3f, r0	; 63
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	48 c0       	rjmp	.+144    	; 0xd2c <xQueueReceive+0xe6>
     c9c:	8c 81       	ldd	r24, Y+4	; 0x04
     c9e:	9d 81       	ldd	r25, Y+5	; 0x05
     ca0:	89 2b       	or	r24, r25
     ca2:	21 f4       	brne	.+8      	; 0xcac <xQueueReceive+0x66>
     ca4:	0f 90       	pop	r0
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	40 c0       	rjmp	.+128    	; 0xd2c <xQueueReceive+0xe6>
     cac:	e1 10       	cpse	r14, r1
     cae:	06 c0       	rjmp	.+12     	; 0xcbc <xQueueReceive+0x76>
     cb0:	ce 01       	movw	r24, r28
     cb2:	01 96       	adiw	r24, 0x01	; 1
     cb4:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <vTaskInternalSetTimeOutState>
     cb8:	ee 24       	eor	r14, r14
     cba:	e3 94       	inc	r14
     cbc:	0f 90       	pop	r0
     cbe:	0f be       	out	0x3f, r0	; 63
     cc0:	72 d4       	rcall	.+2276   	; 0x15a6 <vTaskSuspendAll>
     cc2:	0f b6       	in	r0, 0x3f	; 63
     cc4:	f8 94       	cli
     cc6:	0f 92       	push	r0
     cc8:	f8 01       	movw	r30, r16
     cca:	85 8d       	ldd	r24, Z+29	; 0x1d
     ccc:	8f 3f       	cpi	r24, 0xFF	; 255
     cce:	09 f4       	brne	.+2      	; 0xcd2 <xQueueReceive+0x8c>
     cd0:	15 8e       	std	Z+29, r1	; 0x1d
     cd2:	f8 01       	movw	r30, r16
     cd4:	86 8d       	ldd	r24, Z+30	; 0x1e
     cd6:	8f 3f       	cpi	r24, 0xFF	; 255
     cd8:	09 f4       	brne	.+2      	; 0xcdc <xQueueReceive+0x96>
     cda:	16 8e       	std	Z+30, r1	; 0x1e
     cdc:	0f 90       	pop	r0
     cde:	0f be       	out	0x3f, r0	; 63
     ce0:	be 01       	movw	r22, r28
     ce2:	6c 5f       	subi	r22, 0xFC	; 252
     ce4:	7f 4f       	sbci	r23, 0xFF	; 255
     ce6:	ce 01       	movw	r24, r28
     ce8:	01 96       	adiw	r24, 0x01	; 1
     cea:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <xTaskCheckForTimeOut>
     cee:	81 11       	cpse	r24, r1
     cf0:	14 c0       	rjmp	.+40     	; 0xd1a <xQueueReceive+0xd4>
     cf2:	c8 01       	movw	r24, r16
     cf4:	8d dd       	rcall	.-1254   	; 0x810 <prvIsQueueEmpty>
     cf6:	88 23       	and	r24, r24
     cf8:	61 f0       	breq	.+24     	; 0xd12 <xQueueReceive+0xcc>
     cfa:	6c 81       	ldd	r22, Y+4	; 0x04
     cfc:	7d 81       	ldd	r23, Y+5	; 0x05
     cfe:	c8 01       	movw	r24, r16
     d00:	41 96       	adiw	r24, 0x11	; 17
     d02:	2d d7       	rcall	.+3674   	; 0x1b5e <vTaskPlaceOnEventList>
     d04:	c8 01       	movw	r24, r16
     d06:	18 de       	rcall	.-976    	; 0x938 <prvUnlockQueue>
     d08:	77 d5       	rcall	.+2798   	; 0x17f8 <xTaskResumeAll>
     d0a:	81 11       	cpse	r24, r1
     d0c:	ae cf       	rjmp	.-164    	; 0xc6a <xQueueReceive+0x24>
     d0e:	a9 dc       	rcall	.-1710   	; 0x662 <vPortYield>
     d10:	ac cf       	rjmp	.-168    	; 0xc6a <xQueueReceive+0x24>
     d12:	c8 01       	movw	r24, r16
     d14:	11 de       	rcall	.-990    	; 0x938 <prvUnlockQueue>
     d16:	70 d5       	rcall	.+2784   	; 0x17f8 <xTaskResumeAll>
     d18:	a8 cf       	rjmp	.-176    	; 0xc6a <xQueueReceive+0x24>
     d1a:	c8 01       	movw	r24, r16
     d1c:	0d de       	rcall	.-998    	; 0x938 <prvUnlockQueue>
     d1e:	6c d5       	rcall	.+2776   	; 0x17f8 <xTaskResumeAll>
     d20:	c8 01       	movw	r24, r16
     d22:	76 dd       	rcall	.-1300   	; 0x810 <prvIsQueueEmpty>
     d24:	88 23       	and	r24, r24
     d26:	09 f4       	brne	.+2      	; 0xd2a <xQueueReceive+0xe4>
     d28:	a0 cf       	rjmp	.-192    	; 0xc6a <xQueueReceive+0x24>
     d2a:	80 e0       	ldi	r24, 0x00	; 0
     d2c:	0f 90       	pop	r0
     d2e:	0f 90       	pop	r0
     d30:	0f 90       	pop	r0
     d32:	0f 90       	pop	r0
     d34:	0f 90       	pop	r0
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	1f 91       	pop	r17
     d3c:	0f 91       	pop	r16
     d3e:	ff 90       	pop	r15
     d40:	ef 90       	pop	r14
     d42:	df 90       	pop	r13
     d44:	cf 90       	pop	r12
     d46:	08 95       	ret

00000d48 <xQueueSemaphoreTake>:
     d48:	ef 92       	push	r14
     d4a:	ff 92       	push	r15
     d4c:	0f 93       	push	r16
     d4e:	1f 93       	push	r17
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	00 d0       	rcall	.+0      	; 0xd56 <xQueueSemaphoreTake+0xe>
     d56:	1f 92       	push	r1
     d58:	1f 92       	push	r1
     d5a:	cd b7       	in	r28, 0x3d	; 61
     d5c:	de b7       	in	r29, 0x3e	; 62
     d5e:	8c 01       	movw	r16, r24
     d60:	7d 83       	std	Y+5, r23	; 0x05
     d62:	6c 83       	std	Y+4, r22	; 0x04
     d64:	e1 2c       	mov	r14, r1
     d66:	f1 2c       	mov	r15, r1
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	f8 94       	cli
     d6c:	0f 92       	push	r0
     d6e:	f8 01       	movw	r30, r16
     d70:	82 8d       	ldd	r24, Z+26	; 0x1a
     d72:	88 23       	and	r24, r24
     d74:	c1 f0       	breq	.+48     	; 0xda6 <xQueueSemaphoreTake+0x5e>
     d76:	81 50       	subi	r24, 0x01	; 1
     d78:	82 8f       	std	Z+26, r24	; 0x1a
     d7a:	80 81       	ld	r24, Z
     d7c:	91 81       	ldd	r25, Z+1	; 0x01
     d7e:	89 2b       	or	r24, r25
     d80:	29 f4       	brne	.+10     	; 0xd8c <xQueueSemaphoreTake+0x44>
     d82:	0e 94 8a 10 	call	0x2114	; 0x2114 <pvTaskIncrementMutexHeldCount>
     d86:	f8 01       	movw	r30, r16
     d88:	95 83       	std	Z+5, r25	; 0x05
     d8a:	84 83       	std	Z+4, r24	; 0x04
     d8c:	f8 01       	movw	r30, r16
     d8e:	80 85       	ldd	r24, Z+8	; 0x08
     d90:	88 23       	and	r24, r24
     d92:	29 f0       	breq	.+10     	; 0xd9e <xQueueSemaphoreTake+0x56>
     d94:	c8 01       	movw	r24, r16
     d96:	08 96       	adiw	r24, 0x08	; 8
     d98:	3b d7       	rcall	.+3702   	; 0x1c10 <xTaskRemoveFromEventList>
     d9a:	81 11       	cpse	r24, r1
     d9c:	62 dc       	rcall	.-1852   	; 0x662 <vPortYield>
     d9e:	0f 90       	pop	r0
     da0:	0f be       	out	0x3f, r0	; 63
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	66 c0       	rjmp	.+204    	; 0xe72 <xQueueSemaphoreTake+0x12a>
     da6:	8c 81       	ldd	r24, Y+4	; 0x04
     da8:	9d 81       	ldd	r25, Y+5	; 0x05
     daa:	89 2b       	or	r24, r25
     dac:	21 f4       	brne	.+8      	; 0xdb6 <xQueueSemaphoreTake+0x6e>
     dae:	0f 90       	pop	r0
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	5e c0       	rjmp	.+188    	; 0xe72 <xQueueSemaphoreTake+0x12a>
     db6:	f1 10       	cpse	r15, r1
     db8:	05 c0       	rjmp	.+10     	; 0xdc4 <xQueueSemaphoreTake+0x7c>
     dba:	ce 01       	movw	r24, r28
     dbc:	01 96       	adiw	r24, 0x01	; 1
     dbe:	e5 d7       	rcall	.+4042   	; 0x1d8a <vTaskInternalSetTimeOutState>
     dc0:	ff 24       	eor	r15, r15
     dc2:	f3 94       	inc	r15
     dc4:	0f 90       	pop	r0
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	ee d3       	rcall	.+2012   	; 0x15a6 <vTaskSuspendAll>
     dca:	0f b6       	in	r0, 0x3f	; 63
     dcc:	f8 94       	cli
     dce:	0f 92       	push	r0
     dd0:	f8 01       	movw	r30, r16
     dd2:	85 8d       	ldd	r24, Z+29	; 0x1d
     dd4:	8f 3f       	cpi	r24, 0xFF	; 255
     dd6:	09 f4       	brne	.+2      	; 0xdda <xQueueSemaphoreTake+0x92>
     dd8:	15 8e       	std	Z+29, r1	; 0x1d
     dda:	f8 01       	movw	r30, r16
     ddc:	86 8d       	ldd	r24, Z+30	; 0x1e
     dde:	8f 3f       	cpi	r24, 0xFF	; 255
     de0:	09 f4       	brne	.+2      	; 0xde4 <xQueueSemaphoreTake+0x9c>
     de2:	16 8e       	std	Z+30, r1	; 0x1e
     de4:	0f 90       	pop	r0
     de6:	0f be       	out	0x3f, r0	; 63
     de8:	be 01       	movw	r22, r28
     dea:	6c 5f       	subi	r22, 0xFC	; 252
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	ce 01       	movw	r24, r28
     df0:	01 96       	adiw	r24, 0x01	; 1
     df2:	d6 d7       	rcall	.+4012   	; 0x1da0 <xTaskCheckForTimeOut>
     df4:	81 11       	cpse	r24, r1
     df6:	23 c0       	rjmp	.+70     	; 0xe3e <xQueueSemaphoreTake+0xf6>
     df8:	c8 01       	movw	r24, r16
     dfa:	0a dd       	rcall	.-1516   	; 0x810 <prvIsQueueEmpty>
     dfc:	88 23       	and	r24, r24
     dfe:	d9 f0       	breq	.+54     	; 0xe36 <xQueueSemaphoreTake+0xee>
     e00:	f8 01       	movw	r30, r16
     e02:	80 81       	ld	r24, Z
     e04:	91 81       	ldd	r25, Z+1	; 0x01
     e06:	89 2b       	or	r24, r25
     e08:	51 f4       	brne	.+20     	; 0xe1e <xQueueSemaphoreTake+0xd6>
     e0a:	0f b6       	in	r0, 0x3f	; 63
     e0c:	f8 94       	cli
     e0e:	0f 92       	push	r0
     e10:	84 81       	ldd	r24, Z+4	; 0x04
     e12:	95 81       	ldd	r25, Z+5	; 0x05
     e14:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <xTaskPriorityInherit>
     e18:	e8 2e       	mov	r14, r24
     e1a:	0f 90       	pop	r0
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	6c 81       	ldd	r22, Y+4	; 0x04
     e20:	7d 81       	ldd	r23, Y+5	; 0x05
     e22:	c8 01       	movw	r24, r16
     e24:	41 96       	adiw	r24, 0x11	; 17
     e26:	9b d6       	rcall	.+3382   	; 0x1b5e <vTaskPlaceOnEventList>
     e28:	c8 01       	movw	r24, r16
     e2a:	86 dd       	rcall	.-1268   	; 0x938 <prvUnlockQueue>
     e2c:	e5 d4       	rcall	.+2506   	; 0x17f8 <xTaskResumeAll>
     e2e:	81 11       	cpse	r24, r1
     e30:	9b cf       	rjmp	.-202    	; 0xd68 <xQueueSemaphoreTake+0x20>
     e32:	17 dc       	rcall	.-2002   	; 0x662 <vPortYield>
     e34:	99 cf       	rjmp	.-206    	; 0xd68 <xQueueSemaphoreTake+0x20>
     e36:	c8 01       	movw	r24, r16
     e38:	7f dd       	rcall	.-1282   	; 0x938 <prvUnlockQueue>
     e3a:	de d4       	rcall	.+2492   	; 0x17f8 <xTaskResumeAll>
     e3c:	95 cf       	rjmp	.-214    	; 0xd68 <xQueueSemaphoreTake+0x20>
     e3e:	c8 01       	movw	r24, r16
     e40:	7b dd       	rcall	.-1290   	; 0x938 <prvUnlockQueue>
     e42:	da d4       	rcall	.+2484   	; 0x17f8 <xTaskResumeAll>
     e44:	c8 01       	movw	r24, r16
     e46:	e4 dc       	rcall	.-1592   	; 0x810 <prvIsQueueEmpty>
     e48:	88 23       	and	r24, r24
     e4a:	09 f4       	brne	.+2      	; 0xe4e <xQueueSemaphoreTake+0x106>
     e4c:	8d cf       	rjmp	.-230    	; 0xd68 <xQueueSemaphoreTake+0x20>
     e4e:	ee 20       	and	r14, r14
     e50:	79 f0       	breq	.+30     	; 0xe70 <xQueueSemaphoreTake+0x128>
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	f8 94       	cli
     e56:	0f 92       	push	r0
     e58:	c8 01       	movw	r24, r16
     e5a:	ca dc       	rcall	.-1644   	; 0x7f0 <prvGetDisinheritPriorityAfterTimeout>
     e5c:	68 2f       	mov	r22, r24
     e5e:	f8 01       	movw	r30, r16
     e60:	84 81       	ldd	r24, Z+4	; 0x04
     e62:	95 81       	ldd	r25, Z+5	; 0x05
     e64:	0e 94 17 10 	call	0x202e	; 0x202e <vTaskPriorityDisinheritAfterTimeout>
     e68:	0f 90       	pop	r0
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	80 e0       	ldi	r24, 0x00	; 0
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <xQueueSemaphoreTake+0x12a>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	0f 90       	pop	r0
     e74:	0f 90       	pop	r0
     e76:	0f 90       	pop	r0
     e78:	0f 90       	pop	r0
     e7a:	0f 90       	pop	r0
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	1f 91       	pop	r17
     e82:	0f 91       	pop	r16
     e84:	ff 90       	pop	r15
     e86:	ef 90       	pop	r14
     e88:	08 95       	ret

00000e8a <vQueueWaitForMessageRestricted>:
     e8a:	cf 93       	push	r28
     e8c:	df 93       	push	r29
     e8e:	ec 01       	movw	r28, r24
     e90:	0f b6       	in	r0, 0x3f	; 63
     e92:	f8 94       	cli
     e94:	0f 92       	push	r0
     e96:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e98:	8f 3f       	cpi	r24, 0xFF	; 255
     e9a:	09 f4       	brne	.+2      	; 0xe9e <vQueueWaitForMessageRestricted+0x14>
     e9c:	1d 8e       	std	Y+29, r1	; 0x1d
     e9e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     ea0:	8f 3f       	cpi	r24, 0xFF	; 255
     ea2:	09 f4       	brne	.+2      	; 0xea6 <vQueueWaitForMessageRestricted+0x1c>
     ea4:	1e 8e       	std	Y+30, r1	; 0x1e
     ea6:	0f 90       	pop	r0
     ea8:	0f be       	out	0x3f, r0	; 63
     eaa:	8a 8d       	ldd	r24, Y+26	; 0x1a
     eac:	81 11       	cpse	r24, r1
     eae:	03 c0       	rjmp	.+6      	; 0xeb6 <vQueueWaitForMessageRestricted+0x2c>
     eb0:	ce 01       	movw	r24, r28
     eb2:	41 96       	adiw	r24, 0x11	; 17
     eb4:	65 d6       	rcall	.+3274   	; 0x1b80 <vTaskPlaceOnEventListRestricted>
     eb6:	ce 01       	movw	r24, r28
     eb8:	3f dd       	rcall	.-1410   	; 0x938 <prvUnlockQueue>
     eba:	df 91       	pop	r29
     ebc:	cf 91       	pop	r28
     ebe:	08 95       	ret

00000ec0 <prvTaskIsTaskSuspended>:
     ec0:	fc 01       	movw	r30, r24
     ec2:	22 85       	ldd	r18, Z+10	; 0x0a
     ec4:	33 85       	ldd	r19, Z+11	; 0x0b
     ec6:	21 58       	subi	r18, 0x81	; 129
     ec8:	32 41       	sbci	r19, 0x12	; 18
     eca:	59 f4       	brne	.+22     	; 0xee2 <prvTaskIsTaskSuspended+0x22>
     ecc:	fc 01       	movw	r30, r24
     ece:	84 89       	ldd	r24, Z+20	; 0x14
     ed0:	95 89       	ldd	r25, Z+21	; 0x15
     ed2:	f2 e1       	ldi	r31, 0x12	; 18
     ed4:	84 39       	cpi	r24, 0x94	; 148
     ed6:	9f 07       	cpc	r25, r31
     ed8:	31 f0       	breq	.+12     	; 0xee6 <prvTaskIsTaskSuspended+0x26>
     eda:	89 2b       	or	r24, r25
     edc:	31 f0       	breq	.+12     	; 0xeea <prvTaskIsTaskSuspended+0x2a>
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	08 95       	ret
     ee2:	80 e0       	ldi	r24, 0x00	; 0
     ee4:	08 95       	ret
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	08 95       	ret
     eea:	81 e0       	ldi	r24, 0x01	; 1
     eec:	08 95       	ret

00000eee <prvResetNextTaskUnblockTime>:
     eee:	e0 91 9f 12 	lds	r30, 0x129F	; 0x80129f <pxDelayedTaskList>
     ef2:	f0 91 a0 12 	lds	r31, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
     ef6:	80 81       	ld	r24, Z
     ef8:	81 11       	cpse	r24, r1
     efa:	07 c0       	rjmp	.+14     	; 0xf0a <prvResetNextTaskUnblockTime+0x1c>
     efc:	8f ef       	ldi	r24, 0xFF	; 255
     efe:	9f ef       	ldi	r25, 0xFF	; 255
     f00:	90 93 76 12 	sts	0x1276, r25	; 0x801276 <xNextTaskUnblockTime+0x1>
     f04:	80 93 75 12 	sts	0x1275, r24	; 0x801275 <xNextTaskUnblockTime>
     f08:	08 95       	ret
     f0a:	e0 91 9f 12 	lds	r30, 0x129F	; 0x80129f <pxDelayedTaskList>
     f0e:	f0 91 a0 12 	lds	r31, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
     f12:	05 80       	ldd	r0, Z+5	; 0x05
     f14:	f6 81       	ldd	r31, Z+6	; 0x06
     f16:	e0 2d       	mov	r30, r0
     f18:	80 81       	ld	r24, Z
     f1a:	91 81       	ldd	r25, Z+1	; 0x01
     f1c:	90 93 76 12 	sts	0x1276, r25	; 0x801276 <xNextTaskUnblockTime+0x1>
     f20:	80 93 75 12 	sts	0x1275, r24	; 0x801275 <xNextTaskUnblockTime>
     f24:	08 95       	ret

00000f26 <prvDeleteTCB>:
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	ec 01       	movw	r28, r24
     f2c:	8f 89       	ldd	r24, Y+23	; 0x17
     f2e:	98 8d       	ldd	r25, Y+24	; 0x18
     f30:	7b da       	rcall	.-2826   	; 0x428 <vPortFree>
     f32:	ce 01       	movw	r24, r28
     f34:	79 da       	rcall	.-2830   	; 0x428 <vPortFree>
     f36:	df 91       	pop	r29
     f38:	cf 91       	pop	r28
     f3a:	08 95       	ret

00000f3c <prvInitialiseNewTask>:
     f3c:	4f 92       	push	r4
     f3e:	5f 92       	push	r5
     f40:	6f 92       	push	r6
     f42:	7f 92       	push	r7
     f44:	8f 92       	push	r8
     f46:	9f 92       	push	r9
     f48:	af 92       	push	r10
     f4a:	bf 92       	push	r11
     f4c:	cf 92       	push	r12
     f4e:	df 92       	push	r13
     f50:	ef 92       	push	r14
     f52:	ff 92       	push	r15
     f54:	0f 93       	push	r16
     f56:	cf 93       	push	r28
     f58:	df 93       	push	r29
     f5a:	2c 01       	movw	r4, r24
     f5c:	5b 01       	movw	r10, r22
     f5e:	4a 01       	movw	r8, r20
     f60:	39 01       	movw	r6, r18
     f62:	e6 01       	movw	r28, r12
     f64:	65 ea       	ldi	r22, 0xA5	; 165
     f66:	70 e0       	ldi	r23, 0x00	; 0
     f68:	8f 89       	ldd	r24, Y+23	; 0x17
     f6a:	98 8d       	ldd	r25, Y+24	; 0x18
     f6c:	0e 94 93 21 	call	0x4326	; 0x4326 <memset>
     f70:	8f 89       	ldd	r24, Y+23	; 0x17
     f72:	98 8d       	ldd	r25, Y+24	; 0x18
     f74:	21 e0       	ldi	r18, 0x01	; 1
     f76:	82 1a       	sub	r8, r18
     f78:	91 08       	sbc	r9, r1
     f7a:	88 0e       	add	r8, r24
     f7c:	99 1e       	adc	r9, r25
     f7e:	a1 14       	cp	r10, r1
     f80:	b1 04       	cpc	r11, r1
     f82:	89 f4       	brne	.+34     	; 0xfa6 <prvInitialiseNewTask+0x6a>
     f84:	15 c0       	rjmp	.+42     	; 0xfb0 <prvInitialiseNewTask+0x74>
     f86:	82 2f       	mov	r24, r18
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	f5 01       	movw	r30, r10
     f8c:	e8 0f       	add	r30, r24
     f8e:	f9 1f       	adc	r31, r25
     f90:	30 81       	ld	r19, Z
     f92:	de 01       	movw	r26, r28
     f94:	a8 0f       	add	r26, r24
     f96:	b9 1f       	adc	r27, r25
     f98:	59 96       	adiw	r26, 0x19	; 25
     f9a:	3c 93       	st	X, r19
     f9c:	80 81       	ld	r24, Z
     f9e:	88 23       	and	r24, r24
     fa0:	29 f0       	breq	.+10     	; 0xfac <prvInitialiseNewTask+0x70>
     fa2:	2f 5f       	subi	r18, 0xFF	; 255
     fa4:	01 c0       	rjmp	.+2      	; 0xfa8 <prvInitialiseNewTask+0x6c>
     fa6:	20 e0       	ldi	r18, 0x00	; 0
     fa8:	28 30       	cpi	r18, 0x08	; 8
     faa:	68 f3       	brcs	.-38     	; 0xf86 <prvInitialiseNewTask+0x4a>
     fac:	18 a2       	std	Y+32, r1	; 0x20
     fae:	01 c0       	rjmp	.+2      	; 0xfb2 <prvInitialiseNewTask+0x76>
     fb0:	19 8e       	std	Y+25, r1	; 0x19
     fb2:	04 30       	cpi	r16, 0x04	; 4
     fb4:	08 f0       	brcs	.+2      	; 0xfb8 <prvInitialiseNewTask+0x7c>
     fb6:	03 e0       	ldi	r16, 0x03	; 3
     fb8:	0e 8b       	std	Y+22, r16	; 0x16
     fba:	09 a3       	std	Y+33, r16	; 0x21
     fbc:	1a a2       	std	Y+34, r1	; 0x22
     fbe:	ce 01       	movw	r24, r28
     fc0:	02 96       	adiw	r24, 0x02	; 2
     fc2:	7d da       	rcall	.-2822   	; 0x4be <vListInitialiseItem>
     fc4:	ce 01       	movw	r24, r28
     fc6:	0c 96       	adiw	r24, 0x0c	; 12
     fc8:	7a da       	rcall	.-2828   	; 0x4be <vListInitialiseItem>
     fca:	d9 87       	std	Y+9, r29	; 0x09
     fcc:	c8 87       	std	Y+8, r28	; 0x08
     fce:	84 e0       	ldi	r24, 0x04	; 4
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	80 1b       	sub	r24, r16
     fd4:	91 09       	sbc	r25, r1
     fd6:	9d 87       	std	Y+13, r25	; 0x0d
     fd8:	8c 87       	std	Y+12, r24	; 0x0c
     fda:	db 8b       	std	Y+19, r29	; 0x13
     fdc:	ca 8b       	std	Y+18, r28	; 0x12
     fde:	84 e0       	ldi	r24, 0x04	; 4
     fe0:	fe 01       	movw	r30, r28
     fe2:	b3 96       	adiw	r30, 0x23	; 35
     fe4:	df 01       	movw	r26, r30
     fe6:	1d 92       	st	X+, r1
     fe8:	8a 95       	dec	r24
     fea:	e9 f7       	brne	.-6      	; 0xfe6 <prvInitialiseNewTask+0xaa>
     fec:	1f a2       	std	Y+39, r1	; 0x27
     fee:	a3 01       	movw	r20, r6
     ff0:	b2 01       	movw	r22, r4
     ff2:	c4 01       	movw	r24, r8
     ff4:	ed da       	rcall	.-2598   	; 0x5d0 <pxPortInitialiseStack>
     ff6:	99 83       	std	Y+1, r25	; 0x01
     ff8:	88 83       	st	Y, r24
     ffa:	e1 14       	cp	r14, r1
     ffc:	f1 04       	cpc	r15, r1
     ffe:	19 f0       	breq	.+6      	; 0x1006 <__EEPROM_REGION_LENGTH__+0x6>
    1000:	f7 01       	movw	r30, r14
    1002:	d1 83       	std	Z+1, r29	; 0x01
    1004:	c0 83       	st	Z, r28
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	0f 91       	pop	r16
    100c:	ff 90       	pop	r15
    100e:	ef 90       	pop	r14
    1010:	df 90       	pop	r13
    1012:	cf 90       	pop	r12
    1014:	bf 90       	pop	r11
    1016:	af 90       	pop	r10
    1018:	9f 90       	pop	r9
    101a:	8f 90       	pop	r8
    101c:	7f 90       	pop	r7
    101e:	6f 90       	pop	r6
    1020:	5f 90       	pop	r5
    1022:	4f 90       	pop	r4
    1024:	08 95       	ret

00001026 <prvInitialiseTaskLists>:
    1026:	cf 93       	push	r28
    1028:	c0 e0       	ldi	r28, 0x00	; 0
    102a:	0f c0       	rjmp	.+30     	; 0x104a <prvInitialiseTaskLists+0x24>
    102c:	8c 2f       	mov	r24, r28
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	9c 01       	movw	r18, r24
    1032:	22 0f       	add	r18, r18
    1034:	33 1f       	adc	r19, r19
    1036:	22 0f       	add	r18, r18
    1038:	33 1f       	adc	r19, r19
    103a:	22 0f       	add	r18, r18
    103c:	33 1f       	adc	r19, r19
    103e:	82 0f       	add	r24, r18
    1040:	93 1f       	adc	r25, r19
    1042:	8d 54       	subi	r24, 0x4D	; 77
    1044:	9d 4e       	sbci	r25, 0xED	; 237
    1046:	2d da       	rcall	.-2982   	; 0x4a2 <vListInitialise>
    1048:	cf 5f       	subi	r28, 0xFF	; 255
    104a:	c4 30       	cpi	r28, 0x04	; 4
    104c:	78 f3       	brcs	.-34     	; 0x102c <prvInitialiseTaskLists+0x6>
    104e:	8a ea       	ldi	r24, 0xAA	; 170
    1050:	92 e1       	ldi	r25, 0x12	; 18
    1052:	27 da       	rcall	.-2994   	; 0x4a2 <vListInitialise>
    1054:	81 ea       	ldi	r24, 0xA1	; 161
    1056:	92 e1       	ldi	r25, 0x12	; 18
    1058:	24 da       	rcall	.-3000   	; 0x4a2 <vListInitialise>
    105a:	84 e9       	ldi	r24, 0x94	; 148
    105c:	92 e1       	ldi	r25, 0x12	; 18
    105e:	21 da       	rcall	.-3006   	; 0x4a2 <vListInitialise>
    1060:	8b e8       	ldi	r24, 0x8B	; 139
    1062:	92 e1       	ldi	r25, 0x12	; 18
    1064:	1e da       	rcall	.-3012   	; 0x4a2 <vListInitialise>
    1066:	81 e8       	ldi	r24, 0x81	; 129
    1068:	92 e1       	ldi	r25, 0x12	; 18
    106a:	1b da       	rcall	.-3018   	; 0x4a2 <vListInitialise>
    106c:	8a ea       	ldi	r24, 0xAA	; 170
    106e:	92 e1       	ldi	r25, 0x12	; 18
    1070:	90 93 a0 12 	sts	0x12A0, r25	; 0x8012a0 <pxDelayedTaskList+0x1>
    1074:	80 93 9f 12 	sts	0x129F, r24	; 0x80129f <pxDelayedTaskList>
    1078:	81 ea       	ldi	r24, 0xA1	; 161
    107a:	92 e1       	ldi	r25, 0x12	; 18
    107c:	90 93 9e 12 	sts	0x129E, r25	; 0x80129e <pxOverflowDelayedTaskList+0x1>
    1080:	80 93 9d 12 	sts	0x129D, r24	; 0x80129d <pxOverflowDelayedTaskList>
    1084:	cf 91       	pop	r28
    1086:	08 95       	ret

00001088 <prvAddNewTaskToReadyList>:
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	ec 01       	movw	r28, r24
    108e:	0f b6       	in	r0, 0x3f	; 63
    1090:	f8 94       	cli
    1092:	0f 92       	push	r0
    1094:	80 91 80 12 	lds	r24, 0x1280	; 0x801280 <uxCurrentNumberOfTasks>
    1098:	8f 5f       	subi	r24, 0xFF	; 255
    109a:	80 93 80 12 	sts	0x1280, r24	; 0x801280 <uxCurrentNumberOfTasks>
    109e:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    10a2:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    10a6:	89 2b       	or	r24, r25
    10a8:	51 f4       	brne	.+20     	; 0x10be <prvAddNewTaskToReadyList+0x36>
    10aa:	d0 93 d8 12 	sts	0x12D8, r29	; 0x8012d8 <pxCurrentTCB+0x1>
    10ae:	c0 93 d7 12 	sts	0x12D7, r28	; 0x8012d7 <pxCurrentTCB>
    10b2:	80 91 80 12 	lds	r24, 0x1280	; 0x801280 <uxCurrentNumberOfTasks>
    10b6:	81 30       	cpi	r24, 0x01	; 1
    10b8:	91 f4       	brne	.+36     	; 0x10de <prvAddNewTaskToReadyList+0x56>
    10ba:	b5 df       	rcall	.-150    	; 0x1026 <prvInitialiseTaskLists>
    10bc:	10 c0       	rjmp	.+32     	; 0x10de <prvAddNewTaskToReadyList+0x56>
    10be:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <xSchedulerRunning>
    10c2:	81 11       	cpse	r24, r1
    10c4:	0c c0       	rjmp	.+24     	; 0x10de <prvAddNewTaskToReadyList+0x56>
    10c6:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    10ca:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    10ce:	96 89       	ldd	r25, Z+22	; 0x16
    10d0:	8e 89       	ldd	r24, Y+22	; 0x16
    10d2:	89 17       	cp	r24, r25
    10d4:	20 f0       	brcs	.+8      	; 0x10de <prvAddNewTaskToReadyList+0x56>
    10d6:	d0 93 d8 12 	sts	0x12D8, r29	; 0x8012d8 <pxCurrentTCB+0x1>
    10da:	c0 93 d7 12 	sts	0x12D7, r28	; 0x8012d7 <pxCurrentTCB>
    10de:	80 91 77 12 	lds	r24, 0x1277	; 0x801277 <uxTaskNumber>
    10e2:	8f 5f       	subi	r24, 0xFF	; 255
    10e4:	80 93 77 12 	sts	0x1277, r24	; 0x801277 <uxTaskNumber>
    10e8:	8e 89       	ldd	r24, Y+22	; 0x16
    10ea:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    10ee:	98 17       	cp	r25, r24
    10f0:	10 f4       	brcc	.+4      	; 0x10f6 <prvAddNewTaskToReadyList+0x6e>
    10f2:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	fc 01       	movw	r30, r24
    10fa:	ee 0f       	add	r30, r30
    10fc:	ff 1f       	adc	r31, r31
    10fe:	ee 0f       	add	r30, r30
    1100:	ff 1f       	adc	r31, r31
    1102:	ee 0f       	add	r30, r30
    1104:	ff 1f       	adc	r31, r31
    1106:	8e 0f       	add	r24, r30
    1108:	9f 1f       	adc	r25, r31
    110a:	fc 01       	movw	r30, r24
    110c:	ed 54       	subi	r30, 0x4D	; 77
    110e:	fd 4e       	sbci	r31, 0xED	; 237
    1110:	01 80       	ldd	r0, Z+1	; 0x01
    1112:	f2 81       	ldd	r31, Z+2	; 0x02
    1114:	e0 2d       	mov	r30, r0
    1116:	fd 83       	std	Y+5, r31	; 0x05
    1118:	ec 83       	std	Y+4, r30	; 0x04
    111a:	84 81       	ldd	r24, Z+4	; 0x04
    111c:	95 81       	ldd	r25, Z+5	; 0x05
    111e:	9f 83       	std	Y+7, r25	; 0x07
    1120:	8e 83       	std	Y+6, r24	; 0x06
    1122:	a4 81       	ldd	r26, Z+4	; 0x04
    1124:	b5 81       	ldd	r27, Z+5	; 0x05
    1126:	ce 01       	movw	r24, r28
    1128:	02 96       	adiw	r24, 0x02	; 2
    112a:	13 96       	adiw	r26, 0x03	; 3
    112c:	9c 93       	st	X, r25
    112e:	8e 93       	st	-X, r24
    1130:	12 97       	sbiw	r26, 0x02	; 2
    1132:	95 83       	std	Z+5, r25	; 0x05
    1134:	84 83       	std	Z+4, r24	; 0x04
    1136:	ee 89       	ldd	r30, Y+22	; 0x16
    1138:	f0 e0       	ldi	r31, 0x00	; 0
    113a:	cf 01       	movw	r24, r30
    113c:	88 0f       	add	r24, r24
    113e:	99 1f       	adc	r25, r25
    1140:	88 0f       	add	r24, r24
    1142:	99 1f       	adc	r25, r25
    1144:	88 0f       	add	r24, r24
    1146:	99 1f       	adc	r25, r25
    1148:	e8 0f       	add	r30, r24
    114a:	f9 1f       	adc	r31, r25
    114c:	ed 54       	subi	r30, 0x4D	; 77
    114e:	fd 4e       	sbci	r31, 0xED	; 237
    1150:	fb 87       	std	Y+11, r31	; 0x0b
    1152:	ea 87       	std	Y+10, r30	; 0x0a
    1154:	80 81       	ld	r24, Z
    1156:	8f 5f       	subi	r24, 0xFF	; 255
    1158:	80 83       	st	Z, r24
    115a:	0f 90       	pop	r0
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <xSchedulerRunning>
    1162:	88 23       	and	r24, r24
    1164:	49 f0       	breq	.+18     	; 0x1178 <prvAddNewTaskToReadyList+0xf0>
    1166:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    116a:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    116e:	96 89       	ldd	r25, Z+22	; 0x16
    1170:	8e 89       	ldd	r24, Y+22	; 0x16
    1172:	98 17       	cp	r25, r24
    1174:	08 f4       	brcc	.+2      	; 0x1178 <prvAddNewTaskToReadyList+0xf0>
    1176:	75 da       	rcall	.-2838   	; 0x662 <vPortYield>
    1178:	df 91       	pop	r29
    117a:	cf 91       	pop	r28
    117c:	08 95       	ret

0000117e <prvCheckTasksWaitingTermination>:
    117e:	cf 93       	push	r28
    1180:	df 93       	push	r29
    1182:	1a c0       	rjmp	.+52     	; 0x11b8 <prvCheckTasksWaitingTermination+0x3a>
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	f8 94       	cli
    1188:	0f 92       	push	r0
    118a:	e0 91 90 12 	lds	r30, 0x1290	; 0x801290 <xTasksWaitingTermination+0x5>
    118e:	f0 91 91 12 	lds	r31, 0x1291	; 0x801291 <xTasksWaitingTermination+0x6>
    1192:	c6 81       	ldd	r28, Z+6	; 0x06
    1194:	d7 81       	ldd	r29, Z+7	; 0x07
    1196:	ce 01       	movw	r24, r28
    1198:	02 96       	adiw	r24, 0x02	; 2
    119a:	e7 d9       	rcall	.-3122   	; 0x56a <uxListRemove>
    119c:	80 91 80 12 	lds	r24, 0x1280	; 0x801280 <uxCurrentNumberOfTasks>
    11a0:	81 50       	subi	r24, 0x01	; 1
    11a2:	80 93 80 12 	sts	0x1280, r24	; 0x801280 <uxCurrentNumberOfTasks>
    11a6:	80 91 8a 12 	lds	r24, 0x128A	; 0x80128a <uxDeletedTasksWaitingCleanUp>
    11aa:	81 50       	subi	r24, 0x01	; 1
    11ac:	80 93 8a 12 	sts	0x128A, r24	; 0x80128a <uxDeletedTasksWaitingCleanUp>
    11b0:	0f 90       	pop	r0
    11b2:	0f be       	out	0x3f, r0	; 63
    11b4:	ce 01       	movw	r24, r28
    11b6:	b7 de       	rcall	.-658    	; 0xf26 <prvDeleteTCB>
    11b8:	80 91 8a 12 	lds	r24, 0x128A	; 0x80128a <uxDeletedTasksWaitingCleanUp>
    11bc:	81 11       	cpse	r24, r1
    11be:	e2 cf       	rjmp	.-60     	; 0x1184 <prvCheckTasksWaitingTermination+0x6>
    11c0:	df 91       	pop	r29
    11c2:	cf 91       	pop	r28
    11c4:	08 95       	ret

000011c6 <prvAddCurrentTaskToDelayedList>:
    11c6:	ff 92       	push	r15
    11c8:	0f 93       	push	r16
    11ca:	1f 93       	push	r17
    11cc:	cf 93       	push	r28
    11ce:	df 93       	push	r29
    11d0:	ec 01       	movw	r28, r24
    11d2:	f6 2e       	mov	r15, r22
    11d4:	00 91 7e 12 	lds	r16, 0x127E	; 0x80127e <xTickCount>
    11d8:	10 91 7f 12 	lds	r17, 0x127F	; 0x80127f <xTickCount+0x1>
    11dc:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    11e0:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    11e4:	02 96       	adiw	r24, 0x02	; 2
    11e6:	c1 d9       	rcall	.-3198   	; 0x56a <uxListRemove>
    11e8:	cf 3f       	cpi	r28, 0xFF	; 255
    11ea:	8f ef       	ldi	r24, 0xFF	; 255
    11ec:	d8 07       	cpc	r29, r24
    11ee:	b1 f5       	brne	.+108    	; 0x125c <prvAddCurrentTaskToDelayedList+0x96>
    11f0:	ff 20       	and	r15, r15
    11f2:	a1 f1       	breq	.+104    	; 0x125c <prvAddCurrentTaskToDelayedList+0x96>
    11f4:	e1 e8       	ldi	r30, 0x81	; 129
    11f6:	f2 e1       	ldi	r31, 0x12	; 18
    11f8:	a1 81       	ldd	r26, Z+1	; 0x01
    11fa:	b2 81       	ldd	r27, Z+2	; 0x02
    11fc:	c0 91 d7 12 	lds	r28, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1200:	d0 91 d8 12 	lds	r29, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1204:	bd 83       	std	Y+5, r27	; 0x05
    1206:	ac 83       	std	Y+4, r26	; 0x04
    1208:	c0 91 d7 12 	lds	r28, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    120c:	d0 91 d8 12 	lds	r29, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1210:	14 96       	adiw	r26, 0x04	; 4
    1212:	8d 91       	ld	r24, X+
    1214:	9c 91       	ld	r25, X
    1216:	15 97       	sbiw	r26, 0x05	; 5
    1218:	9f 83       	std	Y+7, r25	; 0x07
    121a:	8e 83       	std	Y+6, r24	; 0x06
    121c:	14 96       	adiw	r26, 0x04	; 4
    121e:	cd 91       	ld	r28, X+
    1220:	dc 91       	ld	r29, X
    1222:	15 97       	sbiw	r26, 0x05	; 5
    1224:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1228:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    122c:	02 96       	adiw	r24, 0x02	; 2
    122e:	9b 83       	std	Y+3, r25	; 0x03
    1230:	8a 83       	std	Y+2, r24	; 0x02
    1232:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1236:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    123a:	02 96       	adiw	r24, 0x02	; 2
    123c:	15 96       	adiw	r26, 0x05	; 5
    123e:	9c 93       	st	X, r25
    1240:	8e 93       	st	-X, r24
    1242:	14 97       	sbiw	r26, 0x04	; 4
    1244:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1248:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    124c:	1b 96       	adiw	r26, 0x0b	; 11
    124e:	fc 93       	st	X, r31
    1250:	ee 93       	st	-X, r30
    1252:	1a 97       	sbiw	r26, 0x0a	; 10
    1254:	80 81       	ld	r24, Z
    1256:	8f 5f       	subi	r24, 0xFF	; 255
    1258:	80 83       	st	Z, r24
    125a:	2d c0       	rjmp	.+90     	; 0x12b6 <prvAddCurrentTaskToDelayedList+0xf0>
    125c:	c0 0f       	add	r28, r16
    125e:	d1 1f       	adc	r29, r17
    1260:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1264:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1268:	d3 83       	std	Z+3, r29	; 0x03
    126a:	c2 83       	std	Z+2, r28	; 0x02
    126c:	c0 17       	cp	r28, r16
    126e:	d1 07       	cpc	r29, r17
    1270:	60 f4       	brcc	.+24     	; 0x128a <prvAddCurrentTaskToDelayedList+0xc4>
    1272:	60 91 d7 12 	lds	r22, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1276:	70 91 d8 12 	lds	r23, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    127a:	80 91 9d 12 	lds	r24, 0x129D	; 0x80129d <pxOverflowDelayedTaskList>
    127e:	90 91 9e 12 	lds	r25, 0x129E	; 0x80129e <pxOverflowDelayedTaskList+0x1>
    1282:	6e 5f       	subi	r22, 0xFE	; 254
    1284:	7f 4f       	sbci	r23, 0xFF	; 255
    1286:	40 d9       	rcall	.-3456   	; 0x508 <vListInsert>
    1288:	16 c0       	rjmp	.+44     	; 0x12b6 <prvAddCurrentTaskToDelayedList+0xf0>
    128a:	60 91 d7 12 	lds	r22, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    128e:	70 91 d8 12 	lds	r23, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1292:	80 91 9f 12 	lds	r24, 0x129F	; 0x80129f <pxDelayedTaskList>
    1296:	90 91 a0 12 	lds	r25, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
    129a:	6e 5f       	subi	r22, 0xFE	; 254
    129c:	7f 4f       	sbci	r23, 0xFF	; 255
    129e:	34 d9       	rcall	.-3480   	; 0x508 <vListInsert>
    12a0:	80 91 75 12 	lds	r24, 0x1275	; 0x801275 <xNextTaskUnblockTime>
    12a4:	90 91 76 12 	lds	r25, 0x1276	; 0x801276 <xNextTaskUnblockTime+0x1>
    12a8:	c8 17       	cp	r28, r24
    12aa:	d9 07       	cpc	r29, r25
    12ac:	20 f4       	brcc	.+8      	; 0x12b6 <prvAddCurrentTaskToDelayedList+0xf0>
    12ae:	d0 93 76 12 	sts	0x1276, r29	; 0x801276 <xNextTaskUnblockTime+0x1>
    12b2:	c0 93 75 12 	sts	0x1275, r28	; 0x801275 <xNextTaskUnblockTime>
    12b6:	df 91       	pop	r29
    12b8:	cf 91       	pop	r28
    12ba:	1f 91       	pop	r17
    12bc:	0f 91       	pop	r16
    12be:	ff 90       	pop	r15
    12c0:	08 95       	ret

000012c2 <xTaskCreate>:
    12c2:	2f 92       	push	r2
    12c4:	3f 92       	push	r3
    12c6:	4f 92       	push	r4
    12c8:	5f 92       	push	r5
    12ca:	6f 92       	push	r6
    12cc:	7f 92       	push	r7
    12ce:	8f 92       	push	r8
    12d0:	9f 92       	push	r9
    12d2:	af 92       	push	r10
    12d4:	bf 92       	push	r11
    12d6:	cf 92       	push	r12
    12d8:	df 92       	push	r13
    12da:	ef 92       	push	r14
    12dc:	ff 92       	push	r15
    12de:	0f 93       	push	r16
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	3c 01       	movw	r6, r24
    12e6:	1b 01       	movw	r2, r22
    12e8:	4a 01       	movw	r8, r20
    12ea:	29 01       	movw	r4, r18
    12ec:	ca 01       	movw	r24, r20
    12ee:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <pvPortMalloc>
    12f2:	6c 01       	movw	r12, r24
    12f4:	89 2b       	or	r24, r25
    12f6:	69 f0       	breq	.+26     	; 0x1312 <xTaskCreate+0x50>
    12f8:	88 e2       	ldi	r24, 0x28	; 40
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <pvPortMalloc>
    1300:	ec 01       	movw	r28, r24
    1302:	89 2b       	or	r24, r25
    1304:	19 f0       	breq	.+6      	; 0x130c <xTaskCreate+0x4a>
    1306:	d8 8e       	std	Y+24, r13	; 0x18
    1308:	cf 8a       	std	Y+23, r12	; 0x17
    130a:	05 c0       	rjmp	.+10     	; 0x1316 <xTaskCreate+0x54>
    130c:	c6 01       	movw	r24, r12
    130e:	8c d8       	rcall	.-3816   	; 0x428 <vPortFree>
    1310:	02 c0       	rjmp	.+4      	; 0x1316 <xTaskCreate+0x54>
    1312:	c0 e0       	ldi	r28, 0x00	; 0
    1314:	d0 e0       	ldi	r29, 0x00	; 0
    1316:	20 97       	sbiw	r28, 0x00	; 0
    1318:	61 f0       	breq	.+24     	; 0x1332 <xTaskCreate+0x70>
    131a:	a1 2c       	mov	r10, r1
    131c:	b1 2c       	mov	r11, r1
    131e:	6e 01       	movw	r12, r28
    1320:	92 01       	movw	r18, r4
    1322:	a4 01       	movw	r20, r8
    1324:	b1 01       	movw	r22, r2
    1326:	c3 01       	movw	r24, r6
    1328:	09 de       	rcall	.-1006   	; 0xf3c <prvInitialiseNewTask>
    132a:	ce 01       	movw	r24, r28
    132c:	ad de       	rcall	.-678    	; 0x1088 <prvAddNewTaskToReadyList>
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	01 c0       	rjmp	.+2      	; 0x1334 <xTaskCreate+0x72>
    1332:	8f ef       	ldi	r24, 0xFF	; 255
    1334:	df 91       	pop	r29
    1336:	cf 91       	pop	r28
    1338:	0f 91       	pop	r16
    133a:	ff 90       	pop	r15
    133c:	ef 90       	pop	r14
    133e:	df 90       	pop	r13
    1340:	cf 90       	pop	r12
    1342:	bf 90       	pop	r11
    1344:	af 90       	pop	r10
    1346:	9f 90       	pop	r9
    1348:	8f 90       	pop	r8
    134a:	7f 90       	pop	r7
    134c:	6f 90       	pop	r6
    134e:	5f 90       	pop	r5
    1350:	4f 90       	pop	r4
    1352:	3f 90       	pop	r3
    1354:	2f 90       	pop	r2
    1356:	08 95       	ret

00001358 <vTaskDelete>:
    1358:	0f 93       	push	r16
    135a:	1f 93       	push	r17
    135c:	cf 93       	push	r28
    135e:	df 93       	push	r29
    1360:	ec 01       	movw	r28, r24
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	f8 94       	cli
    1366:	0f 92       	push	r0
    1368:	89 2b       	or	r24, r25
    136a:	21 f4       	brne	.+8      	; 0x1374 <vTaskDelete+0x1c>
    136c:	c0 91 d7 12 	lds	r28, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1370:	d0 91 d8 12 	lds	r29, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1374:	8e 01       	movw	r16, r28
    1376:	0e 5f       	subi	r16, 0xFE	; 254
    1378:	1f 4f       	sbci	r17, 0xFF	; 255
    137a:	c8 01       	movw	r24, r16
    137c:	f6 d8       	rcall	.-3604   	; 0x56a <uxListRemove>
    137e:	8c 89       	ldd	r24, Y+20	; 0x14
    1380:	9d 89       	ldd	r25, Y+21	; 0x15
    1382:	89 2b       	or	r24, r25
    1384:	19 f0       	breq	.+6      	; 0x138c <vTaskDelete+0x34>
    1386:	ce 01       	movw	r24, r28
    1388:	0c 96       	adiw	r24, 0x0c	; 12
    138a:	ef d8       	rcall	.-3618   	; 0x56a <uxListRemove>
    138c:	80 91 77 12 	lds	r24, 0x1277	; 0x801277 <uxTaskNumber>
    1390:	8f 5f       	subi	r24, 0xFF	; 255
    1392:	80 93 77 12 	sts	0x1277, r24	; 0x801277 <uxTaskNumber>
    1396:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    139a:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    139e:	c8 17       	cp	r28, r24
    13a0:	d9 07       	cpc	r29, r25
    13a2:	51 f4       	brne	.+20     	; 0x13b8 <vTaskDelete+0x60>
    13a4:	b8 01       	movw	r22, r16
    13a6:	8b e8       	ldi	r24, 0x8B	; 139
    13a8:	92 e1       	ldi	r25, 0x12	; 18
    13aa:	8d d8       	rcall	.-3814   	; 0x4c6 <vListInsertEnd>
    13ac:	80 91 8a 12 	lds	r24, 0x128A	; 0x80128a <uxDeletedTasksWaitingCleanUp>
    13b0:	8f 5f       	subi	r24, 0xFF	; 255
    13b2:	80 93 8a 12 	sts	0x128A, r24	; 0x80128a <uxDeletedTasksWaitingCleanUp>
    13b6:	08 c0       	rjmp	.+16     	; 0x13c8 <vTaskDelete+0x70>
    13b8:	80 91 80 12 	lds	r24, 0x1280	; 0x801280 <uxCurrentNumberOfTasks>
    13bc:	81 50       	subi	r24, 0x01	; 1
    13be:	80 93 80 12 	sts	0x1280, r24	; 0x801280 <uxCurrentNumberOfTasks>
    13c2:	ce 01       	movw	r24, r28
    13c4:	b0 dd       	rcall	.-1184   	; 0xf26 <prvDeleteTCB>
    13c6:	93 dd       	rcall	.-1242   	; 0xeee <prvResetNextTaskUnblockTime>
    13c8:	0f 90       	pop	r0
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <xSchedulerRunning>
    13d0:	88 23       	and	r24, r24
    13d2:	41 f0       	breq	.+16     	; 0x13e4 <vTaskDelete+0x8c>
    13d4:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    13d8:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    13dc:	c8 17       	cp	r28, r24
    13de:	d9 07       	cpc	r29, r25
    13e0:	09 f4       	brne	.+2      	; 0x13e4 <vTaskDelete+0x8c>
    13e2:	3f d9       	rcall	.-3458   	; 0x662 <vPortYield>
    13e4:	df 91       	pop	r29
    13e6:	cf 91       	pop	r28
    13e8:	1f 91       	pop	r17
    13ea:	0f 91       	pop	r16
    13ec:	08 95       	ret

000013ee <eTaskGetState>:
    13ee:	20 91 d7 12 	lds	r18, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    13f2:	30 91 d8 12 	lds	r19, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    13f6:	82 17       	cp	r24, r18
    13f8:	93 07       	cpc	r25, r19
    13fa:	09 f4       	brne	.+2      	; 0x13fe <eTaskGetState+0x10>
    13fc:	38 c0       	rjmp	.+112    	; 0x146e <eTaskGetState+0x80>
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	f8 94       	cli
    1402:	0f 92       	push	r0
    1404:	fc 01       	movw	r30, r24
    1406:	22 85       	ldd	r18, Z+10	; 0x0a
    1408:	33 85       	ldd	r19, Z+11	; 0x0b
    140a:	40 91 9f 12 	lds	r20, 0x129F	; 0x80129f <pxDelayedTaskList>
    140e:	50 91 a0 12 	lds	r21, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
    1412:	60 91 9d 12 	lds	r22, 0x129D	; 0x80129d <pxOverflowDelayedTaskList>
    1416:	70 91 9e 12 	lds	r23, 0x129E	; 0x80129e <pxOverflowDelayedTaskList+0x1>
    141a:	0f 90       	pop	r0
    141c:	0f be       	out	0x3f, r0	; 63
    141e:	24 17       	cp	r18, r20
    1420:	35 07       	cpc	r19, r21
    1422:	39 f1       	breq	.+78     	; 0x1472 <eTaskGetState+0x84>
    1424:	26 17       	cp	r18, r22
    1426:	37 07       	cpc	r19, r23
    1428:	31 f1       	breq	.+76     	; 0x1476 <eTaskGetState+0x88>
    142a:	f2 e1       	ldi	r31, 0x12	; 18
    142c:	21 38       	cpi	r18, 0x81	; 129
    142e:	3f 07       	cpc	r19, r31
    1430:	b1 f4       	brne	.+44     	; 0x145e <eTaskGetState+0x70>
    1432:	fc 01       	movw	r30, r24
    1434:	24 89       	ldd	r18, Z+20	; 0x14
    1436:	35 89       	ldd	r19, Z+21	; 0x15
    1438:	23 2b       	or	r18, r19
    143a:	61 f0       	breq	.+24     	; 0x1454 <eTaskGetState+0x66>
    143c:	82 e0       	ldi	r24, 0x02	; 2
    143e:	08 95       	ret
    1440:	fc 01       	movw	r30, r24
    1442:	e2 0f       	add	r30, r18
    1444:	f1 1d       	adc	r31, r1
    1446:	27 fd       	sbrc	r18, 7
    1448:	fa 95       	dec	r31
    144a:	37 a1       	ldd	r19, Z+39	; 0x27
    144c:	31 30       	cpi	r19, 0x01	; 1
    144e:	a9 f0       	breq	.+42     	; 0x147a <eTaskGetState+0x8c>
    1450:	2f 5f       	subi	r18, 0xFF	; 255
    1452:	01 c0       	rjmp	.+2      	; 0x1456 <eTaskGetState+0x68>
    1454:	20 e0       	ldi	r18, 0x00	; 0
    1456:	12 16       	cp	r1, r18
    1458:	9c f7       	brge	.-26     	; 0x1440 <eTaskGetState+0x52>
    145a:	83 e0       	ldi	r24, 0x03	; 3
    145c:	08 95       	ret
    145e:	f2 e1       	ldi	r31, 0x12	; 18
    1460:	2b 38       	cpi	r18, 0x8B	; 139
    1462:	3f 07       	cpc	r19, r31
    1464:	61 f0       	breq	.+24     	; 0x147e <eTaskGetState+0x90>
    1466:	23 2b       	or	r18, r19
    1468:	61 f4       	brne	.+24     	; 0x1482 <eTaskGetState+0x94>
    146a:	84 e0       	ldi	r24, 0x04	; 4
    146c:	08 95       	ret
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	08 95       	ret
    1472:	82 e0       	ldi	r24, 0x02	; 2
    1474:	08 95       	ret
    1476:	82 e0       	ldi	r24, 0x02	; 2
    1478:	08 95       	ret
    147a:	82 e0       	ldi	r24, 0x02	; 2
    147c:	08 95       	ret
    147e:	84 e0       	ldi	r24, 0x04	; 4
    1480:	08 95       	ret
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	08 95       	ret

00001486 <vTaskResume>:
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	cf 93       	push	r28
    148c:	df 93       	push	r29
    148e:	20 91 d7 12 	lds	r18, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1492:	30 91 d8 12 	lds	r19, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1496:	82 17       	cp	r24, r18
    1498:	93 07       	cpc	r25, r19
    149a:	09 f4       	brne	.+2      	; 0x149e <vTaskResume+0x18>
    149c:	52 c0       	rjmp	.+164    	; 0x1542 <vTaskResume+0xbc>
    149e:	00 97       	sbiw	r24, 0x00	; 0
    14a0:	09 f4       	brne	.+2      	; 0x14a4 <vTaskResume+0x1e>
    14a2:	4f c0       	rjmp	.+158    	; 0x1542 <vTaskResume+0xbc>
    14a4:	ec 01       	movw	r28, r24
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	0f 92       	push	r0
    14ac:	09 dd       	rcall	.-1518   	; 0xec0 <prvTaskIsTaskSuspended>
    14ae:	88 23       	and	r24, r24
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <vTaskResume+0x2e>
    14b2:	45 c0       	rjmp	.+138    	; 0x153e <vTaskResume+0xb8>
    14b4:	8e 01       	movw	r16, r28
    14b6:	0e 5f       	subi	r16, 0xFE	; 254
    14b8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ba:	c8 01       	movw	r24, r16
    14bc:	56 d8       	rcall	.-3924   	; 0x56a <uxListRemove>
    14be:	8e 89       	ldd	r24, Y+22	; 0x16
    14c0:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    14c4:	98 17       	cp	r25, r24
    14c6:	10 f4       	brcc	.+4      	; 0x14cc <vTaskResume+0x46>
    14c8:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	fc 01       	movw	r30, r24
    14d0:	ee 0f       	add	r30, r30
    14d2:	ff 1f       	adc	r31, r31
    14d4:	ee 0f       	add	r30, r30
    14d6:	ff 1f       	adc	r31, r31
    14d8:	ee 0f       	add	r30, r30
    14da:	ff 1f       	adc	r31, r31
    14dc:	8e 0f       	add	r24, r30
    14de:	9f 1f       	adc	r25, r31
    14e0:	fc 01       	movw	r30, r24
    14e2:	ed 54       	subi	r30, 0x4D	; 77
    14e4:	fd 4e       	sbci	r31, 0xED	; 237
    14e6:	01 80       	ldd	r0, Z+1	; 0x01
    14e8:	f2 81       	ldd	r31, Z+2	; 0x02
    14ea:	e0 2d       	mov	r30, r0
    14ec:	fd 83       	std	Y+5, r31	; 0x05
    14ee:	ec 83       	std	Y+4, r30	; 0x04
    14f0:	84 81       	ldd	r24, Z+4	; 0x04
    14f2:	95 81       	ldd	r25, Z+5	; 0x05
    14f4:	9f 83       	std	Y+7, r25	; 0x07
    14f6:	8e 83       	std	Y+6, r24	; 0x06
    14f8:	a4 81       	ldd	r26, Z+4	; 0x04
    14fa:	b5 81       	ldd	r27, Z+5	; 0x05
    14fc:	13 96       	adiw	r26, 0x03	; 3
    14fe:	1c 93       	st	X, r17
    1500:	0e 93       	st	-X, r16
    1502:	12 97       	sbiw	r26, 0x02	; 2
    1504:	15 83       	std	Z+5, r17	; 0x05
    1506:	04 83       	std	Z+4, r16	; 0x04
    1508:	ee 89       	ldd	r30, Y+22	; 0x16
    150a:	f0 e0       	ldi	r31, 0x00	; 0
    150c:	cf 01       	movw	r24, r30
    150e:	88 0f       	add	r24, r24
    1510:	99 1f       	adc	r25, r25
    1512:	88 0f       	add	r24, r24
    1514:	99 1f       	adc	r25, r25
    1516:	88 0f       	add	r24, r24
    1518:	99 1f       	adc	r25, r25
    151a:	e8 0f       	add	r30, r24
    151c:	f9 1f       	adc	r31, r25
    151e:	ed 54       	subi	r30, 0x4D	; 77
    1520:	fd 4e       	sbci	r31, 0xED	; 237
    1522:	fb 87       	std	Y+11, r31	; 0x0b
    1524:	ea 87       	std	Y+10, r30	; 0x0a
    1526:	80 81       	ld	r24, Z
    1528:	8f 5f       	subi	r24, 0xFF	; 255
    152a:	80 83       	st	Z, r24
    152c:	9e 89       	ldd	r25, Y+22	; 0x16
    152e:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1532:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1536:	86 89       	ldd	r24, Z+22	; 0x16
    1538:	98 17       	cp	r25, r24
    153a:	08 f0       	brcs	.+2      	; 0x153e <vTaskResume+0xb8>
    153c:	92 d8       	rcall	.-3804   	; 0x662 <vPortYield>
    153e:	0f 90       	pop	r0
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	df 91       	pop	r29
    1544:	cf 91       	pop	r28
    1546:	1f 91       	pop	r17
    1548:	0f 91       	pop	r16
    154a:	08 95       	ret

0000154c <vTaskStartScheduler>:
    154c:	ef 92       	push	r14
    154e:	ff 92       	push	r15
    1550:	0f 93       	push	r16
    1552:	0f 2e       	mov	r0, r31
    1554:	f3 e7       	ldi	r31, 0x73	; 115
    1556:	ef 2e       	mov	r14, r31
    1558:	f2 e1       	ldi	r31, 0x12	; 18
    155a:	ff 2e       	mov	r15, r31
    155c:	f0 2d       	mov	r31, r0
    155e:	00 e0       	ldi	r16, 0x00	; 0
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	40 e0       	ldi	r20, 0x00	; 0
    1566:	51 e0       	ldi	r21, 0x01	; 1
    1568:	67 e0       	ldi	r22, 0x07	; 7
    156a:	72 e0       	ldi	r23, 0x02	; 2
    156c:	8c e7       	ldi	r24, 0x7C	; 124
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	a8 de       	rcall	.-688    	; 0x12c2 <xTaskCreate>
    1572:	81 30       	cpi	r24, 0x01	; 1
    1574:	09 f4       	brne	.+2      	; 0x1578 <vTaskStartScheduler+0x2c>
    1576:	4d d6       	rcall	.+3226   	; 0x2212 <xTimerCreateTimerTask>
    1578:	81 30       	cpi	r24, 0x01	; 1
    157a:	79 f4       	brne	.+30     	; 0x159a <vTaskStartScheduler+0x4e>
    157c:	f8 94       	cli
    157e:	8f ef       	ldi	r24, 0xFF	; 255
    1580:	9f ef       	ldi	r25, 0xFF	; 255
    1582:	90 93 76 12 	sts	0x1276, r25	; 0x801276 <xNextTaskUnblockTime+0x1>
    1586:	80 93 75 12 	sts	0x1275, r24	; 0x801275 <xNextTaskUnblockTime>
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	80 93 7c 12 	sts	0x127C, r24	; 0x80127c <xSchedulerRunning>
    1590:	10 92 7f 12 	sts	0x127F, r1	; 0x80127f <xTickCount+0x1>
    1594:	10 92 7e 12 	sts	0x127E, r1	; 0x80127e <xTickCount>
    1598:	32 d8       	rcall	.-3996   	; 0x5fe <xPortStartScheduler>
    159a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <uxTopUsedPriority>
    159e:	0f 91       	pop	r16
    15a0:	ff 90       	pop	r15
    15a2:	ef 90       	pop	r14
    15a4:	08 95       	ret

000015a6 <vTaskSuspendAll>:
    15a6:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    15aa:	8f 5f       	subi	r24, 0xFF	; 255
    15ac:	80 93 72 12 	sts	0x1272, r24	; 0x801272 <uxSchedulerSuspended>
    15b0:	08 95       	ret

000015b2 <xTaskGetTickCount>:
    15b2:	0f b6       	in	r0, 0x3f	; 63
    15b4:	f8 94       	cli
    15b6:	0f 92       	push	r0
    15b8:	80 91 7e 12 	lds	r24, 0x127E	; 0x80127e <xTickCount>
    15bc:	90 91 7f 12 	lds	r25, 0x127F	; 0x80127f <xTickCount+0x1>
    15c0:	0f 90       	pop	r0
    15c2:	0f be       	out	0x3f, r0	; 63
    15c4:	08 95       	ret

000015c6 <xTaskIncrementTick>:
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    15d2:	81 11       	cpse	r24, r1
    15d4:	00 c1       	rjmp	.+512    	; 0x17d6 <xTaskIncrementTick+0x210>
    15d6:	c0 91 7e 12 	lds	r28, 0x127E	; 0x80127e <xTickCount>
    15da:	d0 91 7f 12 	lds	r29, 0x127F	; 0x80127f <xTickCount+0x1>
    15de:	8e 01       	movw	r16, r28
    15e0:	0f 5f       	subi	r16, 0xFF	; 255
    15e2:	1f 4f       	sbci	r17, 0xFF	; 255
    15e4:	10 93 7f 12 	sts	0x127F, r17	; 0x80127f <xTickCount+0x1>
    15e8:	00 93 7e 12 	sts	0x127E, r16	; 0x80127e <xTickCount>
    15ec:	01 15       	cp	r16, r1
    15ee:	11 05       	cpc	r17, r1
    15f0:	b1 f4       	brne	.+44     	; 0x161e <xTaskIncrementTick+0x58>
    15f2:	80 91 9f 12 	lds	r24, 0x129F	; 0x80129f <pxDelayedTaskList>
    15f6:	90 91 a0 12 	lds	r25, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
    15fa:	20 91 9d 12 	lds	r18, 0x129D	; 0x80129d <pxOverflowDelayedTaskList>
    15fe:	30 91 9e 12 	lds	r19, 0x129E	; 0x80129e <pxOverflowDelayedTaskList+0x1>
    1602:	30 93 a0 12 	sts	0x12A0, r19	; 0x8012a0 <pxDelayedTaskList+0x1>
    1606:	20 93 9f 12 	sts	0x129F, r18	; 0x80129f <pxDelayedTaskList>
    160a:	90 93 9e 12 	sts	0x129E, r25	; 0x80129e <pxOverflowDelayedTaskList+0x1>
    160e:	80 93 9d 12 	sts	0x129D, r24	; 0x80129d <pxOverflowDelayedTaskList>
    1612:	80 91 78 12 	lds	r24, 0x1278	; 0x801278 <xNumOfOverflows>
    1616:	8f 5f       	subi	r24, 0xFF	; 255
    1618:	80 93 78 12 	sts	0x1278, r24	; 0x801278 <xNumOfOverflows>
    161c:	68 dc       	rcall	.-1840   	; 0xeee <prvResetNextTaskUnblockTime>
    161e:	80 91 75 12 	lds	r24, 0x1275	; 0x801275 <xNextTaskUnblockTime>
    1622:	90 91 76 12 	lds	r25, 0x1276	; 0x801276 <xNextTaskUnblockTime+0x1>
    1626:	08 17       	cp	r16, r24
    1628:	19 07       	cpc	r17, r25
    162a:	20 f4       	brcc	.+8      	; 0x1634 <xTaskIncrementTick+0x6e>
    162c:	80 e0       	ldi	r24, 0x00	; 0
    162e:	b8 c0       	rjmp	.+368    	; 0x17a0 <xTaskIncrementTick+0x1da>
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	01 c0       	rjmp	.+2      	; 0x1636 <xTaskIncrementTick+0x70>
    1634:	80 e0       	ldi	r24, 0x00	; 0
    1636:	e0 91 9f 12 	lds	r30, 0x129F	; 0x80129f <pxDelayedTaskList>
    163a:	f0 91 a0 12 	lds	r31, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
    163e:	90 81       	ld	r25, Z
    1640:	91 11       	cpse	r25, r1
    1642:	07 c0       	rjmp	.+14     	; 0x1652 <xTaskIncrementTick+0x8c>
    1644:	2f ef       	ldi	r18, 0xFF	; 255
    1646:	3f ef       	ldi	r19, 0xFF	; 255
    1648:	30 93 76 12 	sts	0x1276, r19	; 0x801276 <xNextTaskUnblockTime+0x1>
    164c:	20 93 75 12 	sts	0x1275, r18	; 0x801275 <xNextTaskUnblockTime>
    1650:	a7 c0       	rjmp	.+334    	; 0x17a0 <xTaskIncrementTick+0x1da>
    1652:	e0 91 9f 12 	lds	r30, 0x129F	; 0x80129f <pxDelayedTaskList>
    1656:	f0 91 a0 12 	lds	r31, 0x12A0	; 0x8012a0 <pxDelayedTaskList+0x1>
    165a:	05 80       	ldd	r0, Z+5	; 0x05
    165c:	f6 81       	ldd	r31, Z+6	; 0x06
    165e:	e0 2d       	mov	r30, r0
    1660:	06 80       	ldd	r0, Z+6	; 0x06
    1662:	f7 81       	ldd	r31, Z+7	; 0x07
    1664:	e0 2d       	mov	r30, r0
    1666:	22 81       	ldd	r18, Z+2	; 0x02
    1668:	33 81       	ldd	r19, Z+3	; 0x03
    166a:	02 17       	cp	r16, r18
    166c:	13 07       	cpc	r17, r19
    166e:	28 f4       	brcc	.+10     	; 0x167a <xTaskIncrementTick+0xb4>
    1670:	30 93 76 12 	sts	0x1276, r19	; 0x801276 <xNextTaskUnblockTime+0x1>
    1674:	20 93 75 12 	sts	0x1275, r18	; 0x801275 <xNextTaskUnblockTime>
    1678:	93 c0       	rjmp	.+294    	; 0x17a0 <xTaskIncrementTick+0x1da>
    167a:	a2 85       	ldd	r26, Z+10	; 0x0a
    167c:	b3 85       	ldd	r27, Z+11	; 0x0b
    167e:	24 81       	ldd	r18, Z+4	; 0x04
    1680:	35 81       	ldd	r19, Z+5	; 0x05
    1682:	46 81       	ldd	r20, Z+6	; 0x06
    1684:	57 81       	ldd	r21, Z+7	; 0x07
    1686:	e9 01       	movw	r28, r18
    1688:	5d 83       	std	Y+5, r21	; 0x05
    168a:	4c 83       	std	Y+4, r20	; 0x04
    168c:	26 81       	ldd	r18, Z+6	; 0x06
    168e:	37 81       	ldd	r19, Z+7	; 0x07
    1690:	44 81       	ldd	r20, Z+4	; 0x04
    1692:	55 81       	ldd	r21, Z+5	; 0x05
    1694:	e9 01       	movw	r28, r18
    1696:	5b 83       	std	Y+3, r21	; 0x03
    1698:	4a 83       	std	Y+2, r20	; 0x02
    169a:	11 96       	adiw	r26, 0x01	; 1
    169c:	2d 91       	ld	r18, X+
    169e:	3c 91       	ld	r19, X
    16a0:	12 97       	sbiw	r26, 0x02	; 2
    16a2:	af 01       	movw	r20, r30
    16a4:	4e 5f       	subi	r20, 0xFE	; 254
    16a6:	5f 4f       	sbci	r21, 0xFF	; 255
    16a8:	24 17       	cp	r18, r20
    16aa:	35 07       	cpc	r19, r21
    16ac:	31 f4       	brne	.+12     	; 0x16ba <xTaskIncrementTick+0xf4>
    16ae:	26 81       	ldd	r18, Z+6	; 0x06
    16b0:	37 81       	ldd	r19, Z+7	; 0x07
    16b2:	12 96       	adiw	r26, 0x02	; 2
    16b4:	3c 93       	st	X, r19
    16b6:	2e 93       	st	-X, r18
    16b8:	11 97       	sbiw	r26, 0x01	; 1
    16ba:	13 86       	std	Z+11, r1	; 0x0b
    16bc:	12 86       	std	Z+10, r1	; 0x0a
    16be:	9c 91       	ld	r25, X
    16c0:	91 50       	subi	r25, 0x01	; 1
    16c2:	9c 93       	st	X, r25
    16c4:	a4 89       	ldd	r26, Z+20	; 0x14
    16c6:	b5 89       	ldd	r27, Z+21	; 0x15
    16c8:	10 97       	sbiw	r26, 0x00	; 0
    16ca:	19 f1       	breq	.+70     	; 0x1712 <xTaskIncrementTick+0x14c>
    16cc:	26 85       	ldd	r18, Z+14	; 0x0e
    16ce:	37 85       	ldd	r19, Z+15	; 0x0f
    16d0:	60 89       	ldd	r22, Z+16	; 0x10
    16d2:	71 89       	ldd	r23, Z+17	; 0x11
    16d4:	e9 01       	movw	r28, r18
    16d6:	7d 83       	std	Y+5, r23	; 0x05
    16d8:	6c 83       	std	Y+4, r22	; 0x04
    16da:	20 89       	ldd	r18, Z+16	; 0x10
    16dc:	31 89       	ldd	r19, Z+17	; 0x11
    16de:	66 85       	ldd	r22, Z+14	; 0x0e
    16e0:	77 85       	ldd	r23, Z+15	; 0x0f
    16e2:	e9 01       	movw	r28, r18
    16e4:	7b 83       	std	Y+3, r23	; 0x03
    16e6:	6a 83       	std	Y+2, r22	; 0x02
    16e8:	11 96       	adiw	r26, 0x01	; 1
    16ea:	6d 91       	ld	r22, X+
    16ec:	7c 91       	ld	r23, X
    16ee:	12 97       	sbiw	r26, 0x02	; 2
    16f0:	9f 01       	movw	r18, r30
    16f2:	24 5f       	subi	r18, 0xF4	; 244
    16f4:	3f 4f       	sbci	r19, 0xFF	; 255
    16f6:	62 17       	cp	r22, r18
    16f8:	73 07       	cpc	r23, r19
    16fa:	31 f4       	brne	.+12     	; 0x1708 <xTaskIncrementTick+0x142>
    16fc:	20 89       	ldd	r18, Z+16	; 0x10
    16fe:	31 89       	ldd	r19, Z+17	; 0x11
    1700:	12 96       	adiw	r26, 0x02	; 2
    1702:	3c 93       	st	X, r19
    1704:	2e 93       	st	-X, r18
    1706:	11 97       	sbiw	r26, 0x01	; 1
    1708:	15 8a       	std	Z+21, r1	; 0x15
    170a:	14 8a       	std	Z+20, r1	; 0x14
    170c:	9c 91       	ld	r25, X
    170e:	91 50       	subi	r25, 0x01	; 1
    1710:	9c 93       	st	X, r25
    1712:	26 89       	ldd	r18, Z+22	; 0x16
    1714:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    1718:	92 17       	cp	r25, r18
    171a:	10 f4       	brcc	.+4      	; 0x1720 <xTaskIncrementTick+0x15a>
    171c:	20 93 7d 12 	sts	0x127D, r18	; 0x80127d <uxTopReadyPriority>
    1720:	30 e0       	ldi	r19, 0x00	; 0
    1722:	d9 01       	movw	r26, r18
    1724:	aa 0f       	add	r26, r26
    1726:	bb 1f       	adc	r27, r27
    1728:	aa 0f       	add	r26, r26
    172a:	bb 1f       	adc	r27, r27
    172c:	aa 0f       	add	r26, r26
    172e:	bb 1f       	adc	r27, r27
    1730:	2a 0f       	add	r18, r26
    1732:	3b 1f       	adc	r19, r27
    1734:	d9 01       	movw	r26, r18
    1736:	ad 54       	subi	r26, 0x4D	; 77
    1738:	bd 4e       	sbci	r27, 0xED	; 237
    173a:	11 96       	adiw	r26, 0x01	; 1
    173c:	0d 90       	ld	r0, X+
    173e:	bc 91       	ld	r27, X
    1740:	a0 2d       	mov	r26, r0
    1742:	b5 83       	std	Z+5, r27	; 0x05
    1744:	a4 83       	std	Z+4, r26	; 0x04
    1746:	14 96       	adiw	r26, 0x04	; 4
    1748:	2d 91       	ld	r18, X+
    174a:	3c 91       	ld	r19, X
    174c:	15 97       	sbiw	r26, 0x05	; 5
    174e:	37 83       	std	Z+7, r19	; 0x07
    1750:	26 83       	std	Z+6, r18	; 0x06
    1752:	14 96       	adiw	r26, 0x04	; 4
    1754:	2d 91       	ld	r18, X+
    1756:	3c 91       	ld	r19, X
    1758:	15 97       	sbiw	r26, 0x05	; 5
    175a:	e9 01       	movw	r28, r18
    175c:	5b 83       	std	Y+3, r21	; 0x03
    175e:	4a 83       	std	Y+2, r20	; 0x02
    1760:	15 96       	adiw	r26, 0x05	; 5
    1762:	5c 93       	st	X, r21
    1764:	4e 93       	st	-X, r20
    1766:	14 97       	sbiw	r26, 0x04	; 4
    1768:	a6 89       	ldd	r26, Z+22	; 0x16
    176a:	b0 e0       	ldi	r27, 0x00	; 0
    176c:	9d 01       	movw	r18, r26
    176e:	22 0f       	add	r18, r18
    1770:	33 1f       	adc	r19, r19
    1772:	22 0f       	add	r18, r18
    1774:	33 1f       	adc	r19, r19
    1776:	22 0f       	add	r18, r18
    1778:	33 1f       	adc	r19, r19
    177a:	a2 0f       	add	r26, r18
    177c:	b3 1f       	adc	r27, r19
    177e:	ad 54       	subi	r26, 0x4D	; 77
    1780:	bd 4e       	sbci	r27, 0xED	; 237
    1782:	b3 87       	std	Z+11, r27	; 0x0b
    1784:	a2 87       	std	Z+10, r26	; 0x0a
    1786:	9c 91       	ld	r25, X
    1788:	9f 5f       	subi	r25, 0xFF	; 255
    178a:	9c 93       	st	X, r25
    178c:	26 89       	ldd	r18, Z+22	; 0x16
    178e:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1792:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1796:	96 89       	ldd	r25, Z+22	; 0x16
    1798:	29 17       	cp	r18, r25
    179a:	08 f0       	brcs	.+2      	; 0x179e <xTaskIncrementTick+0x1d8>
    179c:	49 cf       	rjmp	.-366    	; 0x1630 <xTaskIncrementTick+0x6a>
    179e:	4b cf       	rjmp	.-362    	; 0x1636 <xTaskIncrementTick+0x70>
    17a0:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    17a4:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    17a8:	26 89       	ldd	r18, Z+22	; 0x16
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	f9 01       	movw	r30, r18
    17ae:	ee 0f       	add	r30, r30
    17b0:	ff 1f       	adc	r31, r31
    17b2:	ee 0f       	add	r30, r30
    17b4:	ff 1f       	adc	r31, r31
    17b6:	ee 0f       	add	r30, r30
    17b8:	ff 1f       	adc	r31, r31
    17ba:	2e 0f       	add	r18, r30
    17bc:	3f 1f       	adc	r19, r31
    17be:	f9 01       	movw	r30, r18
    17c0:	ed 54       	subi	r30, 0x4D	; 77
    17c2:	fd 4e       	sbci	r31, 0xED	; 237
    17c4:	90 81       	ld	r25, Z
    17c6:	92 30       	cpi	r25, 0x02	; 2
    17c8:	08 f0       	brcs	.+2      	; 0x17cc <xTaskIncrementTick+0x206>
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	90 91 79 12 	lds	r25, 0x1279	; 0x801279 <xYieldPending>
    17d0:	91 11       	cpse	r25, r1
    17d2:	0c c0       	rjmp	.+24     	; 0x17ec <xTaskIncrementTick+0x226>
    17d4:	0c c0       	rjmp	.+24     	; 0x17ee <xTaskIncrementTick+0x228>
    17d6:	80 91 7a 12 	lds	r24, 0x127A	; 0x80127a <xPendedTicks>
    17da:	90 91 7b 12 	lds	r25, 0x127B	; 0x80127b <xPendedTicks+0x1>
    17de:	01 96       	adiw	r24, 0x01	; 1
    17e0:	90 93 7b 12 	sts	0x127B, r25	; 0x80127b <xPendedTicks+0x1>
    17e4:	80 93 7a 12 	sts	0x127A, r24	; 0x80127a <xPendedTicks>
    17e8:	80 e0       	ldi	r24, 0x00	; 0
    17ea:	01 c0       	rjmp	.+2      	; 0x17ee <xTaskIncrementTick+0x228>
    17ec:	81 e0       	ldi	r24, 0x01	; 1
    17ee:	df 91       	pop	r29
    17f0:	cf 91       	pop	r28
    17f2:	1f 91       	pop	r17
    17f4:	0f 91       	pop	r16
    17f6:	08 95       	ret

000017f8 <xTaskResumeAll>:
    17f8:	cf 93       	push	r28
    17fa:	df 93       	push	r29
    17fc:	0f b6       	in	r0, 0x3f	; 63
    17fe:	f8 94       	cli
    1800:	0f 92       	push	r0
    1802:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    1806:	81 50       	subi	r24, 0x01	; 1
    1808:	80 93 72 12 	sts	0x1272, r24	; 0x801272 <uxSchedulerSuspended>
    180c:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    1810:	81 11       	cpse	r24, r1
    1812:	bd c0       	rjmp	.+378    	; 0x198e <xTaskResumeAll+0x196>
    1814:	80 91 80 12 	lds	r24, 0x1280	; 0x801280 <uxCurrentNumberOfTasks>
    1818:	81 11       	cpse	r24, r1
    181a:	96 c0       	rjmp	.+300    	; 0x1948 <xTaskResumeAll+0x150>
    181c:	bb c0       	rjmp	.+374    	; 0x1994 <xTaskResumeAll+0x19c>
    181e:	e0 91 99 12 	lds	r30, 0x1299	; 0x801299 <xPendingReadyList+0x5>
    1822:	f0 91 9a 12 	lds	r31, 0x129A	; 0x80129a <xPendingReadyList+0x6>
    1826:	06 80       	ldd	r0, Z+6	; 0x06
    1828:	f7 81       	ldd	r31, Z+7	; 0x07
    182a:	e0 2d       	mov	r30, r0
    182c:	a4 89       	ldd	r26, Z+20	; 0x14
    182e:	b5 89       	ldd	r27, Z+21	; 0x15
    1830:	c6 85       	ldd	r28, Z+14	; 0x0e
    1832:	d7 85       	ldd	r29, Z+15	; 0x0f
    1834:	80 89       	ldd	r24, Z+16	; 0x10
    1836:	91 89       	ldd	r25, Z+17	; 0x11
    1838:	9d 83       	std	Y+5, r25	; 0x05
    183a:	8c 83       	std	Y+4, r24	; 0x04
    183c:	c0 89       	ldd	r28, Z+16	; 0x10
    183e:	d1 89       	ldd	r29, Z+17	; 0x11
    1840:	86 85       	ldd	r24, Z+14	; 0x0e
    1842:	97 85       	ldd	r25, Z+15	; 0x0f
    1844:	9b 83       	std	Y+3, r25	; 0x03
    1846:	8a 83       	std	Y+2, r24	; 0x02
    1848:	11 96       	adiw	r26, 0x01	; 1
    184a:	2d 91       	ld	r18, X+
    184c:	3c 91       	ld	r19, X
    184e:	12 97       	sbiw	r26, 0x02	; 2
    1850:	cf 01       	movw	r24, r30
    1852:	0c 96       	adiw	r24, 0x0c	; 12
    1854:	28 17       	cp	r18, r24
    1856:	39 07       	cpc	r19, r25
    1858:	31 f4       	brne	.+12     	; 0x1866 <xTaskResumeAll+0x6e>
    185a:	80 89       	ldd	r24, Z+16	; 0x10
    185c:	91 89       	ldd	r25, Z+17	; 0x11
    185e:	12 96       	adiw	r26, 0x02	; 2
    1860:	9c 93       	st	X, r25
    1862:	8e 93       	st	-X, r24
    1864:	11 97       	sbiw	r26, 0x01	; 1
    1866:	15 8a       	std	Z+21, r1	; 0x15
    1868:	14 8a       	std	Z+20, r1	; 0x14
    186a:	8c 91       	ld	r24, X
    186c:	81 50       	subi	r24, 0x01	; 1
    186e:	8c 93       	st	X, r24
    1870:	a2 85       	ldd	r26, Z+10	; 0x0a
    1872:	b3 85       	ldd	r27, Z+11	; 0x0b
    1874:	c4 81       	ldd	r28, Z+4	; 0x04
    1876:	d5 81       	ldd	r29, Z+5	; 0x05
    1878:	86 81       	ldd	r24, Z+6	; 0x06
    187a:	97 81       	ldd	r25, Z+7	; 0x07
    187c:	9d 83       	std	Y+5, r25	; 0x05
    187e:	8c 83       	std	Y+4, r24	; 0x04
    1880:	c6 81       	ldd	r28, Z+6	; 0x06
    1882:	d7 81       	ldd	r29, Z+7	; 0x07
    1884:	84 81       	ldd	r24, Z+4	; 0x04
    1886:	95 81       	ldd	r25, Z+5	; 0x05
    1888:	9b 83       	std	Y+3, r25	; 0x03
    188a:	8a 83       	std	Y+2, r24	; 0x02
    188c:	11 96       	adiw	r26, 0x01	; 1
    188e:	8d 91       	ld	r24, X+
    1890:	9c 91       	ld	r25, X
    1892:	12 97       	sbiw	r26, 0x02	; 2
    1894:	9f 01       	movw	r18, r30
    1896:	2e 5f       	subi	r18, 0xFE	; 254
    1898:	3f 4f       	sbci	r19, 0xFF	; 255
    189a:	82 17       	cp	r24, r18
    189c:	93 07       	cpc	r25, r19
    189e:	31 f4       	brne	.+12     	; 0x18ac <xTaskResumeAll+0xb4>
    18a0:	86 81       	ldd	r24, Z+6	; 0x06
    18a2:	97 81       	ldd	r25, Z+7	; 0x07
    18a4:	12 96       	adiw	r26, 0x02	; 2
    18a6:	9c 93       	st	X, r25
    18a8:	8e 93       	st	-X, r24
    18aa:	11 97       	sbiw	r26, 0x01	; 1
    18ac:	13 86       	std	Z+11, r1	; 0x0b
    18ae:	12 86       	std	Z+10, r1	; 0x0a
    18b0:	8c 91       	ld	r24, X
    18b2:	81 50       	subi	r24, 0x01	; 1
    18b4:	8c 93       	st	X, r24
    18b6:	86 89       	ldd	r24, Z+22	; 0x16
    18b8:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    18bc:	98 17       	cp	r25, r24
    18be:	10 f4       	brcc	.+4      	; 0x18c4 <xTaskResumeAll+0xcc>
    18c0:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	dc 01       	movw	r26, r24
    18c8:	aa 0f       	add	r26, r26
    18ca:	bb 1f       	adc	r27, r27
    18cc:	aa 0f       	add	r26, r26
    18ce:	bb 1f       	adc	r27, r27
    18d0:	aa 0f       	add	r26, r26
    18d2:	bb 1f       	adc	r27, r27
    18d4:	8a 0f       	add	r24, r26
    18d6:	9b 1f       	adc	r25, r27
    18d8:	dc 01       	movw	r26, r24
    18da:	ad 54       	subi	r26, 0x4D	; 77
    18dc:	bd 4e       	sbci	r27, 0xED	; 237
    18de:	11 96       	adiw	r26, 0x01	; 1
    18e0:	0d 90       	ld	r0, X+
    18e2:	bc 91       	ld	r27, X
    18e4:	a0 2d       	mov	r26, r0
    18e6:	b5 83       	std	Z+5, r27	; 0x05
    18e8:	a4 83       	std	Z+4, r26	; 0x04
    18ea:	14 96       	adiw	r26, 0x04	; 4
    18ec:	8d 91       	ld	r24, X+
    18ee:	9c 91       	ld	r25, X
    18f0:	15 97       	sbiw	r26, 0x05	; 5
    18f2:	97 83       	std	Z+7, r25	; 0x07
    18f4:	86 83       	std	Z+6, r24	; 0x06
    18f6:	14 96       	adiw	r26, 0x04	; 4
    18f8:	cd 91       	ld	r28, X+
    18fa:	dc 91       	ld	r29, X
    18fc:	15 97       	sbiw	r26, 0x05	; 5
    18fe:	3b 83       	std	Y+3, r19	; 0x03
    1900:	2a 83       	std	Y+2, r18	; 0x02
    1902:	15 96       	adiw	r26, 0x05	; 5
    1904:	3c 93       	st	X, r19
    1906:	2e 93       	st	-X, r18
    1908:	14 97       	sbiw	r26, 0x04	; 4
    190a:	a6 89       	ldd	r26, Z+22	; 0x16
    190c:	b0 e0       	ldi	r27, 0x00	; 0
    190e:	cd 01       	movw	r24, r26
    1910:	88 0f       	add	r24, r24
    1912:	99 1f       	adc	r25, r25
    1914:	88 0f       	add	r24, r24
    1916:	99 1f       	adc	r25, r25
    1918:	88 0f       	add	r24, r24
    191a:	99 1f       	adc	r25, r25
    191c:	a8 0f       	add	r26, r24
    191e:	b9 1f       	adc	r27, r25
    1920:	ad 54       	subi	r26, 0x4D	; 77
    1922:	bd 4e       	sbci	r27, 0xED	; 237
    1924:	b3 87       	std	Z+11, r27	; 0x0b
    1926:	a2 87       	std	Z+10, r26	; 0x0a
    1928:	8c 91       	ld	r24, X
    192a:	8f 5f       	subi	r24, 0xFF	; 255
    192c:	8c 93       	st	X, r24
    192e:	96 89       	ldd	r25, Z+22	; 0x16
    1930:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1934:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1938:	56 96       	adiw	r26, 0x16	; 22
    193a:	8c 91       	ld	r24, X
    193c:	98 17       	cp	r25, r24
    193e:	30 f0       	brcs	.+12     	; 0x194c <xTaskResumeAll+0x154>
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	80 93 79 12 	sts	0x1279, r24	; 0x801279 <xYieldPending>
    1946:	02 c0       	rjmp	.+4      	; 0x194c <xTaskResumeAll+0x154>
    1948:	e0 e0       	ldi	r30, 0x00	; 0
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	80 91 94 12 	lds	r24, 0x1294	; 0x801294 <xPendingReadyList>
    1950:	81 11       	cpse	r24, r1
    1952:	65 cf       	rjmp	.-310    	; 0x181e <xTaskResumeAll+0x26>
    1954:	ef 2b       	or	r30, r31
    1956:	09 f0       	breq	.+2      	; 0x195a <xTaskResumeAll+0x162>
    1958:	ca da       	rcall	.-2668   	; 0xeee <prvResetNextTaskUnblockTime>
    195a:	c0 91 7a 12 	lds	r28, 0x127A	; 0x80127a <xPendedTicks>
    195e:	d0 91 7b 12 	lds	r29, 0x127B	; 0x80127b <xPendedTicks+0x1>
    1962:	20 97       	sbiw	r28, 0x00	; 0
    1964:	61 f0       	breq	.+24     	; 0x197e <xTaskResumeAll+0x186>
    1966:	2f de       	rcall	.-930    	; 0x15c6 <xTaskIncrementTick>
    1968:	88 23       	and	r24, r24
    196a:	19 f0       	breq	.+6      	; 0x1972 <xTaskResumeAll+0x17a>
    196c:	81 e0       	ldi	r24, 0x01	; 1
    196e:	80 93 79 12 	sts	0x1279, r24	; 0x801279 <xYieldPending>
    1972:	21 97       	sbiw	r28, 0x01	; 1
    1974:	c1 f7       	brne	.-16     	; 0x1966 <xTaskResumeAll+0x16e>
    1976:	10 92 7b 12 	sts	0x127B, r1	; 0x80127b <xPendedTicks+0x1>
    197a:	10 92 7a 12 	sts	0x127A, r1	; 0x80127a <xPendedTicks>
    197e:	80 91 79 12 	lds	r24, 0x1279	; 0x801279 <xYieldPending>
    1982:	88 23       	and	r24, r24
    1984:	31 f0       	breq	.+12     	; 0x1992 <xTaskResumeAll+0x19a>
    1986:	0e 94 31 03 	call	0x662	; 0x662 <vPortYield>
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	03 c0       	rjmp	.+6      	; 0x1994 <xTaskResumeAll+0x19c>
    198e:	80 e0       	ldi	r24, 0x00	; 0
    1990:	01 c0       	rjmp	.+2      	; 0x1994 <xTaskResumeAll+0x19c>
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	0f 90       	pop	r0
    1996:	0f be       	out	0x3f, r0	; 63
    1998:	df 91       	pop	r29
    199a:	cf 91       	pop	r28
    199c:	08 95       	ret

0000199e <vTaskDelay>:
    199e:	cf 93       	push	r28
    19a0:	df 93       	push	r29
    19a2:	ec 01       	movw	r28, r24
    19a4:	89 2b       	or	r24, r25
    19a6:	31 f0       	breq	.+12     	; 0x19b4 <vTaskDelay+0x16>
    19a8:	fe dd       	rcall	.-1028   	; 0x15a6 <vTaskSuspendAll>
    19aa:	60 e0       	ldi	r22, 0x00	; 0
    19ac:	ce 01       	movw	r24, r28
    19ae:	0b dc       	rcall	.-2026   	; 0x11c6 <prvAddCurrentTaskToDelayedList>
    19b0:	23 df       	rcall	.-442    	; 0x17f8 <xTaskResumeAll>
    19b2:	01 c0       	rjmp	.+2      	; 0x19b6 <vTaskDelay+0x18>
    19b4:	80 e0       	ldi	r24, 0x00	; 0
    19b6:	81 11       	cpse	r24, r1
    19b8:	02 c0       	rjmp	.+4      	; 0x19be <vTaskDelay+0x20>
    19ba:	0e 94 31 03 	call	0x662	; 0x662 <vPortYield>
    19be:	df 91       	pop	r29
    19c0:	cf 91       	pop	r28
    19c2:	08 95       	ret

000019c4 <vTaskSwitchContext>:
    19c4:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    19c8:	88 23       	and	r24, r24
    19ca:	21 f0       	breq	.+8      	; 0x19d4 <vTaskSwitchContext+0x10>
    19cc:	81 e0       	ldi	r24, 0x01	; 1
    19ce:	80 93 79 12 	sts	0x1279, r24	; 0x801279 <xYieldPending>
    19d2:	08 95       	ret
    19d4:	10 92 79 12 	sts	0x1279, r1	; 0x801279 <xYieldPending>
    19d8:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    19dc:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    19e0:	20 81       	ld	r18, Z
    19e2:	31 81       	ldd	r19, Z+1	; 0x01
    19e4:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    19e8:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    19ec:	87 89       	ldd	r24, Z+23	; 0x17
    19ee:	90 8d       	ldd	r25, Z+24	; 0x18
    19f0:	82 17       	cp	r24, r18
    19f2:	93 07       	cpc	r25, r19
    19f4:	58 f0       	brcs	.+22     	; 0x1a0c <vTaskSwitchContext+0x48>
    19f6:	60 91 d7 12 	lds	r22, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    19fa:	70 91 d8 12 	lds	r23, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    19fe:	67 5e       	subi	r22, 0xE7	; 231
    1a00:	7f 4f       	sbci	r23, 0xFF	; 255
    1a02:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1a06:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1a0a:	f8 d5       	rcall	.+3056   	; 0x25fc <vApplicationStackOverflowHook>
    1a0c:	20 91 7d 12 	lds	r18, 0x127D	; 0x80127d <uxTopReadyPriority>
    1a10:	01 c0       	rjmp	.+2      	; 0x1a14 <vTaskSwitchContext+0x50>
    1a12:	21 50       	subi	r18, 0x01	; 1
    1a14:	82 2f       	mov	r24, r18
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	fc 01       	movw	r30, r24
    1a1a:	ee 0f       	add	r30, r30
    1a1c:	ff 1f       	adc	r31, r31
    1a1e:	ee 0f       	add	r30, r30
    1a20:	ff 1f       	adc	r31, r31
    1a22:	ee 0f       	add	r30, r30
    1a24:	ff 1f       	adc	r31, r31
    1a26:	e8 0f       	add	r30, r24
    1a28:	f9 1f       	adc	r31, r25
    1a2a:	ed 54       	subi	r30, 0x4D	; 77
    1a2c:	fd 4e       	sbci	r31, 0xED	; 237
    1a2e:	30 81       	ld	r19, Z
    1a30:	33 23       	and	r19, r19
    1a32:	79 f3       	breq	.-34     	; 0x1a12 <vTaskSwitchContext+0x4e>
    1a34:	ac 01       	movw	r20, r24
    1a36:	44 0f       	add	r20, r20
    1a38:	55 1f       	adc	r21, r21
    1a3a:	44 0f       	add	r20, r20
    1a3c:	55 1f       	adc	r21, r21
    1a3e:	44 0f       	add	r20, r20
    1a40:	55 1f       	adc	r21, r21
    1a42:	48 0f       	add	r20, r24
    1a44:	59 1f       	adc	r21, r25
    1a46:	df 01       	movw	r26, r30
    1a48:	01 80       	ldd	r0, Z+1	; 0x01
    1a4a:	f2 81       	ldd	r31, Z+2	; 0x02
    1a4c:	e0 2d       	mov	r30, r0
    1a4e:	02 80       	ldd	r0, Z+2	; 0x02
    1a50:	f3 81       	ldd	r31, Z+3	; 0x03
    1a52:	e0 2d       	mov	r30, r0
    1a54:	12 96       	adiw	r26, 0x02	; 2
    1a56:	fc 93       	st	X, r31
    1a58:	ee 93       	st	-X, r30
    1a5a:	11 97       	sbiw	r26, 0x01	; 1
    1a5c:	4a 54       	subi	r20, 0x4A	; 74
    1a5e:	5d 4e       	sbci	r21, 0xED	; 237
    1a60:	e4 17       	cp	r30, r20
    1a62:	f5 07       	cpc	r31, r21
    1a64:	29 f4       	brne	.+10     	; 0x1a70 <vTaskSwitchContext+0xac>
    1a66:	42 81       	ldd	r20, Z+2	; 0x02
    1a68:	53 81       	ldd	r21, Z+3	; 0x03
    1a6a:	fd 01       	movw	r30, r26
    1a6c:	52 83       	std	Z+2, r21	; 0x02
    1a6e:	41 83       	std	Z+1, r20	; 0x01
    1a70:	fc 01       	movw	r30, r24
    1a72:	ee 0f       	add	r30, r30
    1a74:	ff 1f       	adc	r31, r31
    1a76:	ee 0f       	add	r30, r30
    1a78:	ff 1f       	adc	r31, r31
    1a7a:	ee 0f       	add	r30, r30
    1a7c:	ff 1f       	adc	r31, r31
    1a7e:	8e 0f       	add	r24, r30
    1a80:	9f 1f       	adc	r25, r31
    1a82:	fc 01       	movw	r30, r24
    1a84:	ed 54       	subi	r30, 0x4D	; 77
    1a86:	fd 4e       	sbci	r31, 0xED	; 237
    1a88:	01 80       	ldd	r0, Z+1	; 0x01
    1a8a:	f2 81       	ldd	r31, Z+2	; 0x02
    1a8c:	e0 2d       	mov	r30, r0
    1a8e:	86 81       	ldd	r24, Z+6	; 0x06
    1a90:	97 81       	ldd	r25, Z+7	; 0x07
    1a92:	90 93 d8 12 	sts	0x12D8, r25	; 0x8012d8 <pxCurrentTCB+0x1>
    1a96:	80 93 d7 12 	sts	0x12D7, r24	; 0x8012d7 <pxCurrentTCB>
    1a9a:	20 93 7d 12 	sts	0x127D, r18	; 0x80127d <uxTopReadyPriority>
    1a9e:	08 95       	ret

00001aa0 <vTaskSuspend>:
    1aa0:	0f 93       	push	r16
    1aa2:	1f 93       	push	r17
    1aa4:	cf 93       	push	r28
    1aa6:	df 93       	push	r29
    1aa8:	ec 01       	movw	r28, r24
    1aaa:	0f b6       	in	r0, 0x3f	; 63
    1aac:	f8 94       	cli
    1aae:	0f 92       	push	r0
    1ab0:	89 2b       	or	r24, r25
    1ab2:	21 f4       	brne	.+8      	; 0x1abc <vTaskSuspend+0x1c>
    1ab4:	c0 91 d7 12 	lds	r28, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1ab8:	d0 91 d8 12 	lds	r29, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1abc:	8e 01       	movw	r16, r28
    1abe:	0e 5f       	subi	r16, 0xFE	; 254
    1ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac2:	c8 01       	movw	r24, r16
    1ac4:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    1ac8:	8c 89       	ldd	r24, Y+20	; 0x14
    1aca:	9d 89       	ldd	r25, Y+21	; 0x15
    1acc:	89 2b       	or	r24, r25
    1ace:	21 f0       	breq	.+8      	; 0x1ad8 <vTaskSuspend+0x38>
    1ad0:	ce 01       	movw	r24, r28
    1ad2:	0c 96       	adiw	r24, 0x0c	; 12
    1ad4:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    1ad8:	b8 01       	movw	r22, r16
    1ada:	81 e8       	ldi	r24, 0x81	; 129
    1adc:	92 e1       	ldi	r25, 0x12	; 18
    1ade:	0e 94 63 02 	call	0x4c6	; 0x4c6 <vListInsertEnd>
    1ae2:	80 e0       	ldi	r24, 0x00	; 0
    1ae4:	0f c0       	rjmp	.+30     	; 0x1b04 <vTaskSuspend+0x64>
    1ae6:	28 2f       	mov	r18, r24
    1ae8:	08 2e       	mov	r0, r24
    1aea:	00 0c       	add	r0, r0
    1aec:	33 0b       	sbc	r19, r19
    1aee:	fe 01       	movw	r30, r28
    1af0:	e2 0f       	add	r30, r18
    1af2:	f3 1f       	adc	r31, r19
    1af4:	97 a1       	ldd	r25, Z+39	; 0x27
    1af6:	91 30       	cpi	r25, 0x01	; 1
    1af8:	21 f4       	brne	.+8      	; 0x1b02 <vTaskSuspend+0x62>
    1afa:	fe 01       	movw	r30, r28
    1afc:	e2 0f       	add	r30, r18
    1afe:	f3 1f       	adc	r31, r19
    1b00:	17 a2       	std	Z+39, r1	; 0x27
    1b02:	8f 5f       	subi	r24, 0xFF	; 255
    1b04:	18 16       	cp	r1, r24
    1b06:	7c f7       	brge	.-34     	; 0x1ae6 <vTaskSuspend+0x46>
    1b08:	0f 90       	pop	r0
    1b0a:	0f be       	out	0x3f, r0	; 63
    1b0c:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <xSchedulerRunning>
    1b10:	88 23       	and	r24, r24
    1b12:	31 f0       	breq	.+12     	; 0x1b20 <vTaskSuspend+0x80>
    1b14:	0f b6       	in	r0, 0x3f	; 63
    1b16:	f8 94       	cli
    1b18:	0f 92       	push	r0
    1b1a:	e9 d9       	rcall	.-3118   	; 0xeee <prvResetNextTaskUnblockTime>
    1b1c:	0f 90       	pop	r0
    1b1e:	0f be       	out	0x3f, r0	; 63
    1b20:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1b24:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1b28:	c8 17       	cp	r28, r24
    1b2a:	d9 07       	cpc	r29, r25
    1b2c:	99 f4       	brne	.+38     	; 0x1b54 <vTaskSuspend+0xb4>
    1b2e:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <xSchedulerRunning>
    1b32:	88 23       	and	r24, r24
    1b34:	19 f0       	breq	.+6      	; 0x1b3c <vTaskSuspend+0x9c>
    1b36:	0e 94 31 03 	call	0x662	; 0x662 <vPortYield>
    1b3a:	0c c0       	rjmp	.+24     	; 0x1b54 <vTaskSuspend+0xb4>
    1b3c:	90 91 81 12 	lds	r25, 0x1281	; 0x801281 <xSuspendedTaskList>
    1b40:	80 91 80 12 	lds	r24, 0x1280	; 0x801280 <uxCurrentNumberOfTasks>
    1b44:	98 13       	cpse	r25, r24
    1b46:	05 c0       	rjmp	.+10     	; 0x1b52 <vTaskSuspend+0xb2>
    1b48:	10 92 d8 12 	sts	0x12D8, r1	; 0x8012d8 <pxCurrentTCB+0x1>
    1b4c:	10 92 d7 12 	sts	0x12D7, r1	; 0x8012d7 <pxCurrentTCB>
    1b50:	01 c0       	rjmp	.+2      	; 0x1b54 <vTaskSuspend+0xb4>
    1b52:	38 df       	rcall	.-400    	; 0x19c4 <vTaskSwitchContext>
    1b54:	df 91       	pop	r29
    1b56:	cf 91       	pop	r28
    1b58:	1f 91       	pop	r17
    1b5a:	0f 91       	pop	r16
    1b5c:	08 95       	ret

00001b5e <vTaskPlaceOnEventList>:
    1b5e:	cf 93       	push	r28
    1b60:	df 93       	push	r29
    1b62:	eb 01       	movw	r28, r22
    1b64:	60 91 d7 12 	lds	r22, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1b68:	70 91 d8 12 	lds	r23, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1b6c:	64 5f       	subi	r22, 0xF4	; 244
    1b6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b70:	0e 94 84 02 	call	0x508	; 0x508 <vListInsert>
    1b74:	61 e0       	ldi	r22, 0x01	; 1
    1b76:	ce 01       	movw	r24, r28
    1b78:	26 db       	rcall	.-2484   	; 0x11c6 <prvAddCurrentTaskToDelayedList>
    1b7a:	df 91       	pop	r29
    1b7c:	cf 91       	pop	r28
    1b7e:	08 95       	ret

00001b80 <vTaskPlaceOnEventListRestricted>:
    1b80:	0f 93       	push	r16
    1b82:	1f 93       	push	r17
    1b84:	cf 93       	push	r28
    1b86:	df 93       	push	r29
    1b88:	fc 01       	movw	r30, r24
    1b8a:	8b 01       	movw	r16, r22
    1b8c:	a1 81       	ldd	r26, Z+1	; 0x01
    1b8e:	b2 81       	ldd	r27, Z+2	; 0x02
    1b90:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1b94:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1b98:	ec 01       	movw	r28, r24
    1b9a:	bf 87       	std	Y+15, r27	; 0x0f
    1b9c:	ae 87       	std	Y+14, r26	; 0x0e
    1b9e:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1ba2:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1ba6:	14 96       	adiw	r26, 0x04	; 4
    1ba8:	2d 91       	ld	r18, X+
    1baa:	3c 91       	ld	r19, X
    1bac:	15 97       	sbiw	r26, 0x05	; 5
    1bae:	ec 01       	movw	r28, r24
    1bb0:	39 8b       	std	Y+17, r19	; 0x11
    1bb2:	28 8b       	std	Y+16, r18	; 0x10
    1bb4:	14 96       	adiw	r26, 0x04	; 4
    1bb6:	8d 91       	ld	r24, X+
    1bb8:	9c 91       	ld	r25, X
    1bba:	15 97       	sbiw	r26, 0x05	; 5
    1bbc:	20 91 d7 12 	lds	r18, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1bc0:	30 91 d8 12 	lds	r19, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1bc4:	24 5f       	subi	r18, 0xF4	; 244
    1bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc8:	ec 01       	movw	r28, r24
    1bca:	3b 83       	std	Y+3, r19	; 0x03
    1bcc:	2a 83       	std	Y+2, r18	; 0x02
    1bce:	20 91 d7 12 	lds	r18, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1bd2:	30 91 d8 12 	lds	r19, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1bd6:	24 5f       	subi	r18, 0xF4	; 244
    1bd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1bda:	15 96       	adiw	r26, 0x05	; 5
    1bdc:	3c 93       	st	X, r19
    1bde:	2e 93       	st	-X, r18
    1be0:	14 97       	sbiw	r26, 0x04	; 4
    1be2:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1be6:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1bea:	55 96       	adiw	r26, 0x15	; 21
    1bec:	fc 93       	st	X, r31
    1bee:	ee 93       	st	-X, r30
    1bf0:	54 97       	sbiw	r26, 0x14	; 20
    1bf2:	90 81       	ld	r25, Z
    1bf4:	9f 5f       	subi	r25, 0xFF	; 255
    1bf6:	90 83       	st	Z, r25
    1bf8:	44 23       	and	r20, r20
    1bfa:	11 f0       	breq	.+4      	; 0x1c00 <vTaskPlaceOnEventListRestricted+0x80>
    1bfc:	0f ef       	ldi	r16, 0xFF	; 255
    1bfe:	1f ef       	ldi	r17, 0xFF	; 255
    1c00:	64 2f       	mov	r22, r20
    1c02:	c8 01       	movw	r24, r16
    1c04:	e0 da       	rcall	.-2624   	; 0x11c6 <prvAddCurrentTaskToDelayedList>
    1c06:	df 91       	pop	r29
    1c08:	cf 91       	pop	r28
    1c0a:	1f 91       	pop	r17
    1c0c:	0f 91       	pop	r16
    1c0e:	08 95       	ret

00001c10 <xTaskRemoveFromEventList>:
    1c10:	cf 93       	push	r28
    1c12:	df 93       	push	r29
    1c14:	dc 01       	movw	r26, r24
    1c16:	15 96       	adiw	r26, 0x05	; 5
    1c18:	ed 91       	ld	r30, X+
    1c1a:	fc 91       	ld	r31, X
    1c1c:	16 97       	sbiw	r26, 0x06	; 6
    1c1e:	06 80       	ldd	r0, Z+6	; 0x06
    1c20:	f7 81       	ldd	r31, Z+7	; 0x07
    1c22:	e0 2d       	mov	r30, r0
    1c24:	a4 89       	ldd	r26, Z+20	; 0x14
    1c26:	b5 89       	ldd	r27, Z+21	; 0x15
    1c28:	c6 85       	ldd	r28, Z+14	; 0x0e
    1c2a:	d7 85       	ldd	r29, Z+15	; 0x0f
    1c2c:	80 89       	ldd	r24, Z+16	; 0x10
    1c2e:	91 89       	ldd	r25, Z+17	; 0x11
    1c30:	9d 83       	std	Y+5, r25	; 0x05
    1c32:	8c 83       	std	Y+4, r24	; 0x04
    1c34:	c0 89       	ldd	r28, Z+16	; 0x10
    1c36:	d1 89       	ldd	r29, Z+17	; 0x11
    1c38:	86 85       	ldd	r24, Z+14	; 0x0e
    1c3a:	97 85       	ldd	r25, Z+15	; 0x0f
    1c3c:	9b 83       	std	Y+3, r25	; 0x03
    1c3e:	8a 83       	std	Y+2, r24	; 0x02
    1c40:	11 96       	adiw	r26, 0x01	; 1
    1c42:	8d 91       	ld	r24, X+
    1c44:	9c 91       	ld	r25, X
    1c46:	12 97       	sbiw	r26, 0x02	; 2
    1c48:	9f 01       	movw	r18, r30
    1c4a:	24 5f       	subi	r18, 0xF4	; 244
    1c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4e:	82 17       	cp	r24, r18
    1c50:	93 07       	cpc	r25, r19
    1c52:	31 f4       	brne	.+12     	; 0x1c60 <xTaskRemoveFromEventList+0x50>
    1c54:	80 89       	ldd	r24, Z+16	; 0x10
    1c56:	91 89       	ldd	r25, Z+17	; 0x11
    1c58:	12 96       	adiw	r26, 0x02	; 2
    1c5a:	9c 93       	st	X, r25
    1c5c:	8e 93       	st	-X, r24
    1c5e:	11 97       	sbiw	r26, 0x01	; 1
    1c60:	15 8a       	std	Z+21, r1	; 0x15
    1c62:	14 8a       	std	Z+20, r1	; 0x14
    1c64:	8c 91       	ld	r24, X
    1c66:	81 50       	subi	r24, 0x01	; 1
    1c68:	8c 93       	st	X, r24
    1c6a:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    1c6e:	81 11       	cpse	r24, r1
    1c70:	60 c0       	rjmp	.+192    	; 0x1d32 <xTaskRemoveFromEventList+0x122>
    1c72:	a2 85       	ldd	r26, Z+10	; 0x0a
    1c74:	b3 85       	ldd	r27, Z+11	; 0x0b
    1c76:	c4 81       	ldd	r28, Z+4	; 0x04
    1c78:	d5 81       	ldd	r29, Z+5	; 0x05
    1c7a:	86 81       	ldd	r24, Z+6	; 0x06
    1c7c:	97 81       	ldd	r25, Z+7	; 0x07
    1c7e:	9d 83       	std	Y+5, r25	; 0x05
    1c80:	8c 83       	std	Y+4, r24	; 0x04
    1c82:	c6 81       	ldd	r28, Z+6	; 0x06
    1c84:	d7 81       	ldd	r29, Z+7	; 0x07
    1c86:	84 81       	ldd	r24, Z+4	; 0x04
    1c88:	95 81       	ldd	r25, Z+5	; 0x05
    1c8a:	9b 83       	std	Y+3, r25	; 0x03
    1c8c:	8a 83       	std	Y+2, r24	; 0x02
    1c8e:	11 96       	adiw	r26, 0x01	; 1
    1c90:	8d 91       	ld	r24, X+
    1c92:	9c 91       	ld	r25, X
    1c94:	12 97       	sbiw	r26, 0x02	; 2
    1c96:	9f 01       	movw	r18, r30
    1c98:	2e 5f       	subi	r18, 0xFE	; 254
    1c9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c9c:	82 17       	cp	r24, r18
    1c9e:	93 07       	cpc	r25, r19
    1ca0:	31 f4       	brne	.+12     	; 0x1cae <xTaskRemoveFromEventList+0x9e>
    1ca2:	86 81       	ldd	r24, Z+6	; 0x06
    1ca4:	97 81       	ldd	r25, Z+7	; 0x07
    1ca6:	12 96       	adiw	r26, 0x02	; 2
    1ca8:	9c 93       	st	X, r25
    1caa:	8e 93       	st	-X, r24
    1cac:	11 97       	sbiw	r26, 0x01	; 1
    1cae:	13 86       	std	Z+11, r1	; 0x0b
    1cb0:	12 86       	std	Z+10, r1	; 0x0a
    1cb2:	8c 91       	ld	r24, X
    1cb4:	81 50       	subi	r24, 0x01	; 1
    1cb6:	8c 93       	st	X, r24
    1cb8:	86 89       	ldd	r24, Z+22	; 0x16
    1cba:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    1cbe:	98 17       	cp	r25, r24
    1cc0:	10 f4       	brcc	.+4      	; 0x1cc6 <xTaskRemoveFromEventList+0xb6>
    1cc2:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	dc 01       	movw	r26, r24
    1cca:	aa 0f       	add	r26, r26
    1ccc:	bb 1f       	adc	r27, r27
    1cce:	aa 0f       	add	r26, r26
    1cd0:	bb 1f       	adc	r27, r27
    1cd2:	aa 0f       	add	r26, r26
    1cd4:	bb 1f       	adc	r27, r27
    1cd6:	8a 0f       	add	r24, r26
    1cd8:	9b 1f       	adc	r25, r27
    1cda:	dc 01       	movw	r26, r24
    1cdc:	ad 54       	subi	r26, 0x4D	; 77
    1cde:	bd 4e       	sbci	r27, 0xED	; 237
    1ce0:	11 96       	adiw	r26, 0x01	; 1
    1ce2:	0d 90       	ld	r0, X+
    1ce4:	bc 91       	ld	r27, X
    1ce6:	a0 2d       	mov	r26, r0
    1ce8:	b5 83       	std	Z+5, r27	; 0x05
    1cea:	a4 83       	std	Z+4, r26	; 0x04
    1cec:	14 96       	adiw	r26, 0x04	; 4
    1cee:	8d 91       	ld	r24, X+
    1cf0:	9c 91       	ld	r25, X
    1cf2:	15 97       	sbiw	r26, 0x05	; 5
    1cf4:	97 83       	std	Z+7, r25	; 0x07
    1cf6:	86 83       	std	Z+6, r24	; 0x06
    1cf8:	14 96       	adiw	r26, 0x04	; 4
    1cfa:	cd 91       	ld	r28, X+
    1cfc:	dc 91       	ld	r29, X
    1cfe:	15 97       	sbiw	r26, 0x05	; 5
    1d00:	3b 83       	std	Y+3, r19	; 0x03
    1d02:	2a 83       	std	Y+2, r18	; 0x02
    1d04:	15 96       	adiw	r26, 0x05	; 5
    1d06:	3c 93       	st	X, r19
    1d08:	2e 93       	st	-X, r18
    1d0a:	14 97       	sbiw	r26, 0x04	; 4
    1d0c:	a6 89       	ldd	r26, Z+22	; 0x16
    1d0e:	b0 e0       	ldi	r27, 0x00	; 0
    1d10:	cd 01       	movw	r24, r26
    1d12:	88 0f       	add	r24, r24
    1d14:	99 1f       	adc	r25, r25
    1d16:	88 0f       	add	r24, r24
    1d18:	99 1f       	adc	r25, r25
    1d1a:	88 0f       	add	r24, r24
    1d1c:	99 1f       	adc	r25, r25
    1d1e:	a8 0f       	add	r26, r24
    1d20:	b9 1f       	adc	r27, r25
    1d22:	ad 54       	subi	r26, 0x4D	; 77
    1d24:	bd 4e       	sbci	r27, 0xED	; 237
    1d26:	b3 87       	std	Z+11, r27	; 0x0b
    1d28:	a2 87       	std	Z+10, r26	; 0x0a
    1d2a:	8c 91       	ld	r24, X
    1d2c:	8f 5f       	subi	r24, 0xFF	; 255
    1d2e:	8c 93       	st	X, r24
    1d30:	1c c0       	rjmp	.+56     	; 0x1d6a <xTaskRemoveFromEventList+0x15a>
    1d32:	44 e9       	ldi	r20, 0x94	; 148
    1d34:	52 e1       	ldi	r21, 0x12	; 18
    1d36:	da 01       	movw	r26, r20
    1d38:	11 96       	adiw	r26, 0x01	; 1
    1d3a:	cd 91       	ld	r28, X+
    1d3c:	dc 91       	ld	r29, X
    1d3e:	12 97       	sbiw	r26, 0x02	; 2
    1d40:	d7 87       	std	Z+15, r29	; 0x0f
    1d42:	c6 87       	std	Z+14, r28	; 0x0e
    1d44:	8c 81       	ldd	r24, Y+4	; 0x04
    1d46:	9d 81       	ldd	r25, Y+5	; 0x05
    1d48:	91 8b       	std	Z+17, r25	; 0x11
    1d4a:	80 8b       	std	Z+16, r24	; 0x10
    1d4c:	8c 81       	ldd	r24, Y+4	; 0x04
    1d4e:	9d 81       	ldd	r25, Y+5	; 0x05
    1d50:	dc 01       	movw	r26, r24
    1d52:	13 96       	adiw	r26, 0x03	; 3
    1d54:	3c 93       	st	X, r19
    1d56:	2e 93       	st	-X, r18
    1d58:	12 97       	sbiw	r26, 0x02	; 2
    1d5a:	3d 83       	std	Y+5, r19	; 0x05
    1d5c:	2c 83       	std	Y+4, r18	; 0x04
    1d5e:	55 8b       	std	Z+21, r21	; 0x15
    1d60:	44 8b       	std	Z+20, r20	; 0x14
    1d62:	da 01       	movw	r26, r20
    1d64:	8c 91       	ld	r24, X
    1d66:	8f 5f       	subi	r24, 0xFF	; 255
    1d68:	8c 93       	st	X, r24
    1d6a:	96 89       	ldd	r25, Z+22	; 0x16
    1d6c:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1d70:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1d74:	86 89       	ldd	r24, Z+22	; 0x16
    1d76:	89 17       	cp	r24, r25
    1d78:	20 f4       	brcc	.+8      	; 0x1d82 <xTaskRemoveFromEventList+0x172>
    1d7a:	81 e0       	ldi	r24, 0x01	; 1
    1d7c:	80 93 79 12 	sts	0x1279, r24	; 0x801279 <xYieldPending>
    1d80:	01 c0       	rjmp	.+2      	; 0x1d84 <xTaskRemoveFromEventList+0x174>
    1d82:	80 e0       	ldi	r24, 0x00	; 0
    1d84:	df 91       	pop	r29
    1d86:	cf 91       	pop	r28
    1d88:	08 95       	ret

00001d8a <vTaskInternalSetTimeOutState>:
    1d8a:	20 91 78 12 	lds	r18, 0x1278	; 0x801278 <xNumOfOverflows>
    1d8e:	fc 01       	movw	r30, r24
    1d90:	20 83       	st	Z, r18
    1d92:	20 91 7e 12 	lds	r18, 0x127E	; 0x80127e <xTickCount>
    1d96:	30 91 7f 12 	lds	r19, 0x127F	; 0x80127f <xTickCount+0x1>
    1d9a:	32 83       	std	Z+2, r19	; 0x02
    1d9c:	21 83       	std	Z+1, r18	; 0x01
    1d9e:	08 95       	ret

00001da0 <xTaskCheckForTimeOut>:
    1da0:	1f 93       	push	r17
    1da2:	cf 93       	push	r28
    1da4:	df 93       	push	r29
    1da6:	0f b6       	in	r0, 0x3f	; 63
    1da8:	f8 94       	cli
    1daa:	0f 92       	push	r0
    1dac:	e0 91 7e 12 	lds	r30, 0x127E	; 0x80127e <xTickCount>
    1db0:	f0 91 7f 12 	lds	r31, 0x127F	; 0x80127f <xTickCount+0x1>
    1db4:	dc 01       	movw	r26, r24
    1db6:	11 96       	adiw	r26, 0x01	; 1
    1db8:	4d 91       	ld	r20, X+
    1dba:	5c 91       	ld	r21, X
    1dbc:	12 97       	sbiw	r26, 0x02	; 2
    1dbe:	df 01       	movw	r26, r30
    1dc0:	a4 1b       	sub	r26, r20
    1dc2:	b5 0b       	sbc	r27, r21
    1dc4:	eb 01       	movw	r28, r22
    1dc6:	28 81       	ld	r18, Y
    1dc8:	39 81       	ldd	r19, Y+1	; 0x01
    1dca:	2f 3f       	cpi	r18, 0xFF	; 255
    1dcc:	df ef       	ldi	r29, 0xFF	; 255
    1dce:	3d 07       	cpc	r19, r29
    1dd0:	f1 f0       	breq	.+60     	; 0x1e0e <xTaskCheckForTimeOut+0x6e>
    1dd2:	ec 01       	movw	r28, r24
    1dd4:	18 81       	ld	r17, Y
    1dd6:	c0 91 78 12 	lds	r28, 0x1278	; 0x801278 <xNumOfOverflows>
    1dda:	1c 17       	cp	r17, r28
    1ddc:	41 f0       	breq	.+16     	; 0x1dee <xTaskCheckForTimeOut+0x4e>
    1dde:	e4 17       	cp	r30, r20
    1de0:	f5 07       	cpc	r31, r21
    1de2:	28 f0       	brcs	.+10     	; 0x1dee <xTaskCheckForTimeOut+0x4e>
    1de4:	fb 01       	movw	r30, r22
    1de6:	11 82       	std	Z+1, r1	; 0x01
    1de8:	10 82       	st	Z, r1
    1dea:	81 e0       	ldi	r24, 0x01	; 1
    1dec:	11 c0       	rjmp	.+34     	; 0x1e10 <xTaskCheckForTimeOut+0x70>
    1dee:	a2 17       	cp	r26, r18
    1df0:	b3 07       	cpc	r27, r19
    1df2:	40 f4       	brcc	.+16     	; 0x1e04 <xTaskCheckForTimeOut+0x64>
    1df4:	fb 01       	movw	r30, r22
    1df6:	2a 1b       	sub	r18, r26
    1df8:	3b 0b       	sbc	r19, r27
    1dfa:	31 83       	std	Z+1, r19	; 0x01
    1dfc:	20 83       	st	Z, r18
    1dfe:	c5 df       	rcall	.-118    	; 0x1d8a <vTaskInternalSetTimeOutState>
    1e00:	80 e0       	ldi	r24, 0x00	; 0
    1e02:	06 c0       	rjmp	.+12     	; 0x1e10 <xTaskCheckForTimeOut+0x70>
    1e04:	db 01       	movw	r26, r22
    1e06:	1d 92       	st	X+, r1
    1e08:	1c 92       	st	X, r1
    1e0a:	81 e0       	ldi	r24, 0x01	; 1
    1e0c:	01 c0       	rjmp	.+2      	; 0x1e10 <xTaskCheckForTimeOut+0x70>
    1e0e:	80 e0       	ldi	r24, 0x00	; 0
    1e10:	0f 90       	pop	r0
    1e12:	0f be       	out	0x3f, r0	; 63
    1e14:	df 91       	pop	r29
    1e16:	cf 91       	pop	r28
    1e18:	1f 91       	pop	r17
    1e1a:	08 95       	ret

00001e1c <vTaskMissedYield>:
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	80 93 79 12 	sts	0x1279, r24	; 0x801279 <xYieldPending>
    1e22:	08 95       	ret

00001e24 <xTaskGetSchedulerState>:
    1e24:	80 91 7c 12 	lds	r24, 0x127C	; 0x80127c <xSchedulerRunning>
    1e28:	88 23       	and	r24, r24
    1e2a:	31 f0       	breq	.+12     	; 0x1e38 <xTaskGetSchedulerState+0x14>
    1e2c:	80 91 72 12 	lds	r24, 0x1272	; 0x801272 <uxSchedulerSuspended>
    1e30:	81 11       	cpse	r24, r1
    1e32:	04 c0       	rjmp	.+8      	; 0x1e3c <xTaskGetSchedulerState+0x18>
    1e34:	82 e0       	ldi	r24, 0x02	; 2
    1e36:	08 95       	ret
    1e38:	81 e0       	ldi	r24, 0x01	; 1
    1e3a:	08 95       	ret
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	08 95       	ret

00001e40 <xTaskPriorityInherit>:
    1e40:	0f 93       	push	r16
    1e42:	1f 93       	push	r17
    1e44:	cf 93       	push	r28
    1e46:	df 93       	push	r29
    1e48:	fc 01       	movw	r30, r24
    1e4a:	89 2b       	or	r24, r25
    1e4c:	09 f4       	brne	.+2      	; 0x1e50 <xTaskPriorityInherit+0x10>
    1e4e:	84 c0       	rjmp	.+264    	; 0x1f58 <xTaskPriorityInherit+0x118>
    1e50:	26 89       	ldd	r18, Z+22	; 0x16
    1e52:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1e56:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1e5a:	56 96       	adiw	r26, 0x16	; 22
    1e5c:	8c 91       	ld	r24, X
    1e5e:	28 17       	cp	r18, r24
    1e60:	08 f0       	brcs	.+2      	; 0x1e64 <xTaskPriorityInherit+0x24>
    1e62:	70 c0       	rjmp	.+224    	; 0x1f44 <xTaskPriorityInherit+0x104>
    1e64:	84 85       	ldd	r24, Z+12	; 0x0c
    1e66:	95 85       	ldd	r25, Z+13	; 0x0d
    1e68:	99 23       	and	r25, r25
    1e6a:	64 f0       	brlt	.+24     	; 0x1e84 <xTaskPriorityInherit+0x44>
    1e6c:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1e70:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1e74:	56 96       	adiw	r26, 0x16	; 22
    1e76:	3c 91       	ld	r19, X
    1e78:	84 e0       	ldi	r24, 0x04	; 4
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	83 1b       	sub	r24, r19
    1e7e:	91 09       	sbc	r25, r1
    1e80:	95 87       	std	Z+13, r25	; 0x0d
    1e82:	84 87       	std	Z+12, r24	; 0x0c
    1e84:	82 85       	ldd	r24, Z+10	; 0x0a
    1e86:	93 85       	ldd	r25, Z+11	; 0x0b
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	a9 01       	movw	r20, r18
    1e8c:	44 0f       	add	r20, r20
    1e8e:	55 1f       	adc	r21, r21
    1e90:	44 0f       	add	r20, r20
    1e92:	55 1f       	adc	r21, r21
    1e94:	44 0f       	add	r20, r20
    1e96:	55 1f       	adc	r21, r21
    1e98:	24 0f       	add	r18, r20
    1e9a:	35 1f       	adc	r19, r21
    1e9c:	2d 54       	subi	r18, 0x4D	; 77
    1e9e:	3d 4e       	sbci	r19, 0xED	; 237
    1ea0:	82 17       	cp	r24, r18
    1ea2:	93 07       	cpc	r25, r19
    1ea4:	09 f0       	breq	.+2      	; 0x1ea8 <xTaskPriorityInherit+0x68>
    1ea6:	45 c0       	rjmp	.+138    	; 0x1f32 <xTaskPriorityInherit+0xf2>
    1ea8:	ef 01       	movw	r28, r30
    1eaa:	8f 01       	movw	r16, r30
    1eac:	0e 5f       	subi	r16, 0xFE	; 254
    1eae:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb0:	c8 01       	movw	r24, r16
    1eb2:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    1eb6:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1eba:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1ebe:	86 89       	ldd	r24, Z+22	; 0x16
    1ec0:	8e 8b       	std	Y+22, r24	; 0x16
    1ec2:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    1ec6:	98 17       	cp	r25, r24
    1ec8:	10 f4       	brcc	.+4      	; 0x1ece <xTaskPriorityInherit+0x8e>
    1eca:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	fc 01       	movw	r30, r24
    1ed2:	ee 0f       	add	r30, r30
    1ed4:	ff 1f       	adc	r31, r31
    1ed6:	ee 0f       	add	r30, r30
    1ed8:	ff 1f       	adc	r31, r31
    1eda:	ee 0f       	add	r30, r30
    1edc:	ff 1f       	adc	r31, r31
    1ede:	8e 0f       	add	r24, r30
    1ee0:	9f 1f       	adc	r25, r31
    1ee2:	fc 01       	movw	r30, r24
    1ee4:	ed 54       	subi	r30, 0x4D	; 77
    1ee6:	fd 4e       	sbci	r31, 0xED	; 237
    1ee8:	01 80       	ldd	r0, Z+1	; 0x01
    1eea:	f2 81       	ldd	r31, Z+2	; 0x02
    1eec:	e0 2d       	mov	r30, r0
    1eee:	fd 83       	std	Y+5, r31	; 0x05
    1ef0:	ec 83       	std	Y+4, r30	; 0x04
    1ef2:	84 81       	ldd	r24, Z+4	; 0x04
    1ef4:	95 81       	ldd	r25, Z+5	; 0x05
    1ef6:	9f 83       	std	Y+7, r25	; 0x07
    1ef8:	8e 83       	std	Y+6, r24	; 0x06
    1efa:	a4 81       	ldd	r26, Z+4	; 0x04
    1efc:	b5 81       	ldd	r27, Z+5	; 0x05
    1efe:	13 96       	adiw	r26, 0x03	; 3
    1f00:	1c 93       	st	X, r17
    1f02:	0e 93       	st	-X, r16
    1f04:	12 97       	sbiw	r26, 0x02	; 2
    1f06:	15 83       	std	Z+5, r17	; 0x05
    1f08:	04 83       	std	Z+4, r16	; 0x04
    1f0a:	8e 89       	ldd	r24, Y+22	; 0x16
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	fc 01       	movw	r30, r24
    1f10:	ee 0f       	add	r30, r30
    1f12:	ff 1f       	adc	r31, r31
    1f14:	ee 0f       	add	r30, r30
    1f16:	ff 1f       	adc	r31, r31
    1f18:	ee 0f       	add	r30, r30
    1f1a:	ff 1f       	adc	r31, r31
    1f1c:	e8 0f       	add	r30, r24
    1f1e:	f9 1f       	adc	r31, r25
    1f20:	ed 54       	subi	r30, 0x4D	; 77
    1f22:	fd 4e       	sbci	r31, 0xED	; 237
    1f24:	fb 87       	std	Y+11, r31	; 0x0b
    1f26:	ea 87       	std	Y+10, r30	; 0x0a
    1f28:	80 81       	ld	r24, Z
    1f2a:	8f 5f       	subi	r24, 0xFF	; 255
    1f2c:	80 83       	st	Z, r24
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	16 c0       	rjmp	.+44     	; 0x1f5e <xTaskPriorityInherit+0x11e>
    1f32:	a0 91 d7 12 	lds	r26, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1f36:	b0 91 d8 12 	lds	r27, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1f3a:	56 96       	adiw	r26, 0x16	; 22
    1f3c:	8c 91       	ld	r24, X
    1f3e:	86 8b       	std	Z+22, r24	; 0x16
    1f40:	81 e0       	ldi	r24, 0x01	; 1
    1f42:	0d c0       	rjmp	.+26     	; 0x1f5e <xTaskPriorityInherit+0x11e>
    1f44:	91 a1       	ldd	r25, Z+33	; 0x21
    1f46:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    1f4a:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    1f4e:	86 89       	ldd	r24, Z+22	; 0x16
    1f50:	98 17       	cp	r25, r24
    1f52:	20 f0       	brcs	.+8      	; 0x1f5c <xTaskPriorityInherit+0x11c>
    1f54:	80 e0       	ldi	r24, 0x00	; 0
    1f56:	03 c0       	rjmp	.+6      	; 0x1f5e <xTaskPriorityInherit+0x11e>
    1f58:	80 e0       	ldi	r24, 0x00	; 0
    1f5a:	01 c0       	rjmp	.+2      	; 0x1f5e <xTaskPriorityInherit+0x11e>
    1f5c:	81 e0       	ldi	r24, 0x01	; 1
    1f5e:	df 91       	pop	r29
    1f60:	cf 91       	pop	r28
    1f62:	1f 91       	pop	r17
    1f64:	0f 91       	pop	r16
    1f66:	08 95       	ret

00001f68 <xTaskPriorityDisinherit>:
    1f68:	0f 93       	push	r16
    1f6a:	1f 93       	push	r17
    1f6c:	cf 93       	push	r28
    1f6e:	df 93       	push	r29
    1f70:	fc 01       	movw	r30, r24
    1f72:	89 2b       	or	r24, r25
    1f74:	09 f4       	brne	.+2      	; 0x1f78 <xTaskPriorityDisinherit+0x10>
    1f76:	51 c0       	rjmp	.+162    	; 0x201a <__DATA_REGION_LENGTH__+0x1a>
    1f78:	82 a1       	ldd	r24, Z+34	; 0x22
    1f7a:	81 50       	subi	r24, 0x01	; 1
    1f7c:	82 a3       	std	Z+34, r24	; 0x22
    1f7e:	26 89       	ldd	r18, Z+22	; 0x16
    1f80:	91 a1       	ldd	r25, Z+33	; 0x21
    1f82:	29 17       	cp	r18, r25
    1f84:	09 f4       	brne	.+2      	; 0x1f88 <xTaskPriorityDisinherit+0x20>
    1f86:	4b c0       	rjmp	.+150    	; 0x201e <__DATA_REGION_LENGTH__+0x1e>
    1f88:	81 11       	cpse	r24, r1
    1f8a:	4b c0       	rjmp	.+150    	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    1f8c:	ef 01       	movw	r28, r30
    1f8e:	8f 01       	movw	r16, r30
    1f90:	0e 5f       	subi	r16, 0xFE	; 254
    1f92:	1f 4f       	sbci	r17, 0xFF	; 255
    1f94:	c8 01       	movw	r24, r16
    1f96:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    1f9a:	89 a1       	ldd	r24, Y+33	; 0x21
    1f9c:	8e 8b       	std	Y+22, r24	; 0x16
    1f9e:	24 e0       	ldi	r18, 0x04	; 4
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	28 1b       	sub	r18, r24
    1fa4:	31 09       	sbc	r19, r1
    1fa6:	3d 87       	std	Y+13, r19	; 0x0d
    1fa8:	2c 87       	std	Y+12, r18	; 0x0c
    1faa:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    1fae:	98 17       	cp	r25, r24
    1fb0:	10 f4       	brcc	.+4      	; 0x1fb6 <xTaskPriorityDisinherit+0x4e>
    1fb2:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	fc 01       	movw	r30, r24
    1fba:	ee 0f       	add	r30, r30
    1fbc:	ff 1f       	adc	r31, r31
    1fbe:	ee 0f       	add	r30, r30
    1fc0:	ff 1f       	adc	r31, r31
    1fc2:	ee 0f       	add	r30, r30
    1fc4:	ff 1f       	adc	r31, r31
    1fc6:	8e 0f       	add	r24, r30
    1fc8:	9f 1f       	adc	r25, r31
    1fca:	fc 01       	movw	r30, r24
    1fcc:	ed 54       	subi	r30, 0x4D	; 77
    1fce:	fd 4e       	sbci	r31, 0xED	; 237
    1fd0:	01 80       	ldd	r0, Z+1	; 0x01
    1fd2:	f2 81       	ldd	r31, Z+2	; 0x02
    1fd4:	e0 2d       	mov	r30, r0
    1fd6:	fd 83       	std	Y+5, r31	; 0x05
    1fd8:	ec 83       	std	Y+4, r30	; 0x04
    1fda:	84 81       	ldd	r24, Z+4	; 0x04
    1fdc:	95 81       	ldd	r25, Z+5	; 0x05
    1fde:	9f 83       	std	Y+7, r25	; 0x07
    1fe0:	8e 83       	std	Y+6, r24	; 0x06
    1fe2:	a4 81       	ldd	r26, Z+4	; 0x04
    1fe4:	b5 81       	ldd	r27, Z+5	; 0x05
    1fe6:	13 96       	adiw	r26, 0x03	; 3
    1fe8:	1c 93       	st	X, r17
    1fea:	0e 93       	st	-X, r16
    1fec:	12 97       	sbiw	r26, 0x02	; 2
    1fee:	15 83       	std	Z+5, r17	; 0x05
    1ff0:	04 83       	std	Z+4, r16	; 0x04
    1ff2:	ee 89       	ldd	r30, Y+22	; 0x16
    1ff4:	f0 e0       	ldi	r31, 0x00	; 0
    1ff6:	cf 01       	movw	r24, r30
    1ff8:	88 0f       	add	r24, r24
    1ffa:	99 1f       	adc	r25, r25
    1ffc:	88 0f       	add	r24, r24
    1ffe:	99 1f       	adc	r25, r25
    2000:	88 0f       	add	r24, r24
    2002:	99 1f       	adc	r25, r25
    2004:	e8 0f       	add	r30, r24
    2006:	f9 1f       	adc	r31, r25
    2008:	ed 54       	subi	r30, 0x4D	; 77
    200a:	fd 4e       	sbci	r31, 0xED	; 237
    200c:	fb 87       	std	Y+11, r31	; 0x0b
    200e:	ea 87       	std	Y+10, r30	; 0x0a
    2010:	80 81       	ld	r24, Z
    2012:	8f 5f       	subi	r24, 0xFF	; 255
    2014:	80 83       	st	Z, r24
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	05 c0       	rjmp	.+10     	; 0x2024 <__DATA_REGION_LENGTH__+0x24>
    201a:	80 e0       	ldi	r24, 0x00	; 0
    201c:	03 c0       	rjmp	.+6      	; 0x2024 <__DATA_REGION_LENGTH__+0x24>
    201e:	80 e0       	ldi	r24, 0x00	; 0
    2020:	01 c0       	rjmp	.+2      	; 0x2024 <__DATA_REGION_LENGTH__+0x24>
    2022:	80 e0       	ldi	r24, 0x00	; 0
    2024:	df 91       	pop	r29
    2026:	cf 91       	pop	r28
    2028:	1f 91       	pop	r17
    202a:	0f 91       	pop	r16
    202c:	08 95       	ret

0000202e <vTaskPriorityDisinheritAfterTimeout>:
    202e:	0f 93       	push	r16
    2030:	1f 93       	push	r17
    2032:	cf 93       	push	r28
    2034:	df 93       	push	r29
    2036:	fc 01       	movw	r30, r24
    2038:	89 2b       	or	r24, r25
    203a:	09 f4       	brne	.+2      	; 0x203e <vTaskPriorityDisinheritAfterTimeout+0x10>
    203c:	66 c0       	rjmp	.+204    	; 0x210a <vTaskPriorityDisinheritAfterTimeout+0xdc>
    203e:	91 a1       	ldd	r25, Z+33	; 0x21
    2040:	96 17       	cp	r25, r22
    2042:	08 f4       	brcc	.+2      	; 0x2046 <vTaskPriorityDisinheritAfterTimeout+0x18>
    2044:	96 2f       	mov	r25, r22
    2046:	86 89       	ldd	r24, Z+22	; 0x16
    2048:	98 17       	cp	r25, r24
    204a:	09 f4       	brne	.+2      	; 0x204e <vTaskPriorityDisinheritAfterTimeout+0x20>
    204c:	5e c0       	rjmp	.+188    	; 0x210a <vTaskPriorityDisinheritAfterTimeout+0xdc>
    204e:	22 a1       	ldd	r18, Z+34	; 0x22
    2050:	21 30       	cpi	r18, 0x01	; 1
    2052:	09 f0       	breq	.+2      	; 0x2056 <vTaskPriorityDisinheritAfterTimeout+0x28>
    2054:	5a c0       	rjmp	.+180    	; 0x210a <vTaskPriorityDisinheritAfterTimeout+0xdc>
    2056:	96 8b       	std	Z+22, r25	; 0x16
    2058:	24 85       	ldd	r18, Z+12	; 0x0c
    205a:	35 85       	ldd	r19, Z+13	; 0x0d
    205c:	33 23       	and	r19, r19
    205e:	34 f0       	brlt	.+12     	; 0x206c <vTaskPriorityDisinheritAfterTimeout+0x3e>
    2060:	24 e0       	ldi	r18, 0x04	; 4
    2062:	30 e0       	ldi	r19, 0x00	; 0
    2064:	29 1b       	sub	r18, r25
    2066:	31 09       	sbc	r19, r1
    2068:	35 87       	std	Z+13, r19	; 0x0d
    206a:	24 87       	std	Z+12, r18	; 0x0c
    206c:	22 85       	ldd	r18, Z+10	; 0x0a
    206e:	33 85       	ldd	r19, Z+11	; 0x0b
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	ac 01       	movw	r20, r24
    2074:	44 0f       	add	r20, r20
    2076:	55 1f       	adc	r21, r21
    2078:	44 0f       	add	r20, r20
    207a:	55 1f       	adc	r21, r21
    207c:	44 0f       	add	r20, r20
    207e:	55 1f       	adc	r21, r21
    2080:	84 0f       	add	r24, r20
    2082:	95 1f       	adc	r25, r21
    2084:	8d 54       	subi	r24, 0x4D	; 77
    2086:	9d 4e       	sbci	r25, 0xED	; 237
    2088:	28 17       	cp	r18, r24
    208a:	39 07       	cpc	r19, r25
    208c:	f1 f5       	brne	.+124    	; 0x210a <vTaskPriorityDisinheritAfterTimeout+0xdc>
    208e:	ef 01       	movw	r28, r30
    2090:	8f 01       	movw	r16, r30
    2092:	0e 5f       	subi	r16, 0xFE	; 254
    2094:	1f 4f       	sbci	r17, 0xFF	; 255
    2096:	c8 01       	movw	r24, r16
    2098:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    209c:	8e 89       	ldd	r24, Y+22	; 0x16
    209e:	90 91 7d 12 	lds	r25, 0x127D	; 0x80127d <uxTopReadyPriority>
    20a2:	98 17       	cp	r25, r24
    20a4:	10 f4       	brcc	.+4      	; 0x20aa <vTaskPriorityDisinheritAfterTimeout+0x7c>
    20a6:	80 93 7d 12 	sts	0x127D, r24	; 0x80127d <uxTopReadyPriority>
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	fc 01       	movw	r30, r24
    20ae:	ee 0f       	add	r30, r30
    20b0:	ff 1f       	adc	r31, r31
    20b2:	ee 0f       	add	r30, r30
    20b4:	ff 1f       	adc	r31, r31
    20b6:	ee 0f       	add	r30, r30
    20b8:	ff 1f       	adc	r31, r31
    20ba:	8e 0f       	add	r24, r30
    20bc:	9f 1f       	adc	r25, r31
    20be:	fc 01       	movw	r30, r24
    20c0:	ed 54       	subi	r30, 0x4D	; 77
    20c2:	fd 4e       	sbci	r31, 0xED	; 237
    20c4:	01 80       	ldd	r0, Z+1	; 0x01
    20c6:	f2 81       	ldd	r31, Z+2	; 0x02
    20c8:	e0 2d       	mov	r30, r0
    20ca:	fd 83       	std	Y+5, r31	; 0x05
    20cc:	ec 83       	std	Y+4, r30	; 0x04
    20ce:	84 81       	ldd	r24, Z+4	; 0x04
    20d0:	95 81       	ldd	r25, Z+5	; 0x05
    20d2:	9f 83       	std	Y+7, r25	; 0x07
    20d4:	8e 83       	std	Y+6, r24	; 0x06
    20d6:	a4 81       	ldd	r26, Z+4	; 0x04
    20d8:	b5 81       	ldd	r27, Z+5	; 0x05
    20da:	13 96       	adiw	r26, 0x03	; 3
    20dc:	1c 93       	st	X, r17
    20de:	0e 93       	st	-X, r16
    20e0:	12 97       	sbiw	r26, 0x02	; 2
    20e2:	15 83       	std	Z+5, r17	; 0x05
    20e4:	04 83       	std	Z+4, r16	; 0x04
    20e6:	8e 89       	ldd	r24, Y+22	; 0x16
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	fc 01       	movw	r30, r24
    20ec:	ee 0f       	add	r30, r30
    20ee:	ff 1f       	adc	r31, r31
    20f0:	ee 0f       	add	r30, r30
    20f2:	ff 1f       	adc	r31, r31
    20f4:	ee 0f       	add	r30, r30
    20f6:	ff 1f       	adc	r31, r31
    20f8:	e8 0f       	add	r30, r24
    20fa:	f9 1f       	adc	r31, r25
    20fc:	ed 54       	subi	r30, 0x4D	; 77
    20fe:	fd 4e       	sbci	r31, 0xED	; 237
    2100:	fb 87       	std	Y+11, r31	; 0x0b
    2102:	ea 87       	std	Y+10, r30	; 0x0a
    2104:	80 81       	ld	r24, Z
    2106:	8f 5f       	subi	r24, 0xFF	; 255
    2108:	80 83       	st	Z, r24
    210a:	df 91       	pop	r29
    210c:	cf 91       	pop	r28
    210e:	1f 91       	pop	r17
    2110:	0f 91       	pop	r16
    2112:	08 95       	ret

00002114 <pvTaskIncrementMutexHeldCount>:
    2114:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    2118:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    211c:	89 2b       	or	r24, r25
    211e:	39 f0       	breq	.+14     	; 0x212e <pvTaskIncrementMutexHeldCount+0x1a>
    2120:	e0 91 d7 12 	lds	r30, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    2124:	f0 91 d8 12 	lds	r31, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    2128:	82 a1       	ldd	r24, Z+34	; 0x22
    212a:	8f 5f       	subi	r24, 0xFF	; 255
    212c:	82 a3       	std	Z+34, r24	; 0x22
    212e:	80 91 d7 12 	lds	r24, 0x12D7	; 0x8012d7 <pxCurrentTCB>
    2132:	90 91 d8 12 	lds	r25, 0x12D8	; 0x8012d8 <pxCurrentTCB+0x1>
    2136:	08 95       	ret

00002138 <prvGetNextExpireTime>:
    2138:	dc 01       	movw	r26, r24
    213a:	e0 91 e1 12 	lds	r30, 0x12E1	; 0x8012e1 <pxCurrentTimerList>
    213e:	f0 91 e2 12 	lds	r31, 0x12E2	; 0x8012e2 <pxCurrentTimerList+0x1>
    2142:	80 81       	ld	r24, Z
    2144:	91 e0       	ldi	r25, 0x01	; 1
    2146:	81 11       	cpse	r24, r1
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	9c 93       	st	X, r25
    214c:	91 11       	cpse	r25, r1
    214e:	06 c0       	rjmp	.+12     	; 0x215c <prvGetNextExpireTime+0x24>
    2150:	05 80       	ldd	r0, Z+5	; 0x05
    2152:	f6 81       	ldd	r31, Z+6	; 0x06
    2154:	e0 2d       	mov	r30, r0
    2156:	80 81       	ld	r24, Z
    2158:	91 81       	ldd	r25, Z+1	; 0x01
    215a:	08 95       	ret
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	08 95       	ret

00002162 <prvInsertTimerInActiveList>:
    2162:	fc 01       	movw	r30, r24
    2164:	73 83       	std	Z+3, r23	; 0x03
    2166:	62 83       	std	Z+2, r22	; 0x02
    2168:	91 87       	std	Z+9, r25	; 0x09
    216a:	80 87       	std	Z+8, r24	; 0x08
    216c:	46 17       	cp	r20, r22
    216e:	57 07       	cpc	r21, r23
    2170:	90 f0       	brcs	.+36     	; 0x2196 <prvInsertTimerInActiveList+0x34>
    2172:	42 1b       	sub	r20, r18
    2174:	53 0b       	sbc	r21, r19
    2176:	84 85       	ldd	r24, Z+12	; 0x0c
    2178:	95 85       	ldd	r25, Z+13	; 0x0d
    217a:	48 17       	cp	r20, r24
    217c:	59 07       	cpc	r21, r25
    217e:	e0 f4       	brcc	.+56     	; 0x21b8 <prvInsertTimerInActiveList+0x56>
    2180:	bf 01       	movw	r22, r30
    2182:	6e 5f       	subi	r22, 0xFE	; 254
    2184:	7f 4f       	sbci	r23, 0xFF	; 255
    2186:	80 91 df 12 	lds	r24, 0x12DF	; 0x8012df <pxOverflowTimerList>
    218a:	90 91 e0 12 	lds	r25, 0x12E0	; 0x8012e0 <pxOverflowTimerList+0x1>
    218e:	0e 94 84 02 	call	0x508	; 0x508 <vListInsert>
    2192:	80 e0       	ldi	r24, 0x00	; 0
    2194:	08 95       	ret
    2196:	42 17       	cp	r20, r18
    2198:	53 07       	cpc	r21, r19
    219a:	18 f4       	brcc	.+6      	; 0x21a2 <prvInsertTimerInActiveList+0x40>
    219c:	62 17       	cp	r22, r18
    219e:	73 07       	cpc	r23, r19
    21a0:	68 f4       	brcc	.+26     	; 0x21bc <prvInsertTimerInActiveList+0x5a>
    21a2:	bf 01       	movw	r22, r30
    21a4:	6e 5f       	subi	r22, 0xFE	; 254
    21a6:	7f 4f       	sbci	r23, 0xFF	; 255
    21a8:	80 91 e1 12 	lds	r24, 0x12E1	; 0x8012e1 <pxCurrentTimerList>
    21ac:	90 91 e2 12 	lds	r25, 0x12E2	; 0x8012e2 <pxCurrentTimerList+0x1>
    21b0:	0e 94 84 02 	call	0x508	; 0x508 <vListInsert>
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	08 95       	ret
    21b8:	81 e0       	ldi	r24, 0x01	; 1
    21ba:	08 95       	ret
    21bc:	81 e0       	ldi	r24, 0x01	; 1
    21be:	08 95       	ret

000021c0 <prvCheckForValidListAndQueue>:
    21c0:	0f b6       	in	r0, 0x3f	; 63
    21c2:	f8 94       	cli
    21c4:	0f 92       	push	r0
    21c6:	80 91 dd 12 	lds	r24, 0x12DD	; 0x8012dd <xTimerQueue>
    21ca:	90 91 de 12 	lds	r25, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    21ce:	89 2b       	or	r24, r25
    21d0:	e9 f4       	brne	.+58     	; 0x220c <__stack+0xd>
    21d2:	8c ee       	ldi	r24, 0xEC	; 236
    21d4:	92 e1       	ldi	r25, 0x12	; 18
    21d6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <vListInitialise>
    21da:	83 ee       	ldi	r24, 0xE3	; 227
    21dc:	92 e1       	ldi	r25, 0x12	; 18
    21de:	0e 94 51 02 	call	0x4a2	; 0x4a2 <vListInitialise>
    21e2:	8c ee       	ldi	r24, 0xEC	; 236
    21e4:	92 e1       	ldi	r25, 0x12	; 18
    21e6:	90 93 e2 12 	sts	0x12E2, r25	; 0x8012e2 <pxCurrentTimerList+0x1>
    21ea:	80 93 e1 12 	sts	0x12E1, r24	; 0x8012e1 <pxCurrentTimerList>
    21ee:	83 ee       	ldi	r24, 0xE3	; 227
    21f0:	92 e1       	ldi	r25, 0x12	; 18
    21f2:	90 93 e0 12 	sts	0x12E0, r25	; 0x8012e0 <pxOverflowTimerList+0x1>
    21f6:	80 93 df 12 	sts	0x12DF, r24	; 0x8012df <pxOverflowTimerList>
    21fa:	40 e0       	ldi	r20, 0x00	; 0
    21fc:	65 e0       	ldi	r22, 0x05	; 5
    21fe:	8a e0       	ldi	r24, 0x0A	; 10
    2200:	0e 94 25 05 	call	0xa4a	; 0xa4a <xQueueGenericCreate>
    2204:	90 93 de 12 	sts	0x12DE, r25	; 0x8012de <xTimerQueue+0x1>
    2208:	80 93 dd 12 	sts	0x12DD, r24	; 0x8012dd <xTimerQueue>
    220c:	0f 90       	pop	r0
    220e:	0f be       	out	0x3f, r0	; 63
    2210:	08 95       	ret

00002212 <xTimerCreateTimerTask>:
    2212:	ef 92       	push	r14
    2214:	ff 92       	push	r15
    2216:	0f 93       	push	r16
    2218:	d3 df       	rcall	.-90     	; 0x21c0 <prvCheckForValidListAndQueue>
    221a:	80 91 dd 12 	lds	r24, 0x12DD	; 0x8012dd <xTimerQueue>
    221e:	90 91 de 12 	lds	r25, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    2222:	89 2b       	or	r24, r25
    2224:	89 f0       	breq	.+34     	; 0x2248 <xTimerCreateTimerTask+0x36>
    2226:	0f 2e       	mov	r0, r31
    2228:	fb ed       	ldi	r31, 0xDB	; 219
    222a:	ef 2e       	mov	r14, r31
    222c:	f2 e1       	ldi	r31, 0x12	; 18
    222e:	ff 2e       	mov	r15, r31
    2230:	f0 2d       	mov	r31, r0
    2232:	03 e0       	ldi	r16, 0x03	; 3
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	45 e5       	ldi	r20, 0x55	; 85
    223a:	50 e0       	ldi	r21, 0x00	; 0
    223c:	6c e0       	ldi	r22, 0x0C	; 12
    223e:	72 e0       	ldi	r23, 0x02	; 2
    2240:	84 e8       	ldi	r24, 0x84	; 132
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	3e d8       	rcall	.-3972   	; 0x12c2 <xTaskCreate>
    2246:	01 c0       	rjmp	.+2      	; 0x224a <xTimerCreateTimerTask+0x38>
    2248:	80 e0       	ldi	r24, 0x00	; 0
    224a:	0f 91       	pop	r16
    224c:	ff 90       	pop	r15
    224e:	ef 90       	pop	r14
    2250:	08 95       	ret

00002252 <xTimerGenericCommand>:
    2252:	0f 93       	push	r16
    2254:	1f 93       	push	r17
    2256:	cf 93       	push	r28
    2258:	df 93       	push	r29
    225a:	00 d0       	rcall	.+0      	; 0x225c <xTimerGenericCommand+0xa>
    225c:	1f 92       	push	r1
    225e:	1f 92       	push	r1
    2260:	cd b7       	in	r28, 0x3d	; 61
    2262:	de b7       	in	r29, 0x3e	; 62
    2264:	e0 91 dd 12 	lds	r30, 0x12DD	; 0x8012dd <xTimerQueue>
    2268:	f0 91 de 12 	lds	r31, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    226c:	30 97       	sbiw	r30, 0x00	; 0
    226e:	69 f1       	breq	.+90     	; 0x22ca <xTimerGenericCommand+0x78>
    2270:	d9 01       	movw	r26, r18
    2272:	69 83       	std	Y+1, r22	; 0x01
    2274:	5b 83       	std	Y+3, r21	; 0x03
    2276:	4a 83       	std	Y+2, r20	; 0x02
    2278:	9d 83       	std	Y+5, r25	; 0x05
    227a:	8c 83       	std	Y+4, r24	; 0x04
    227c:	66 30       	cpi	r22, 0x06	; 6
    227e:	e4 f4       	brge	.+56     	; 0x22b8 <xTimerGenericCommand+0x66>
    2280:	d1 dd       	rcall	.-1118   	; 0x1e24 <xTaskGetSchedulerState>
    2282:	82 30       	cpi	r24, 0x02	; 2
    2284:	61 f4       	brne	.+24     	; 0x229e <xTimerGenericCommand+0x4c>
    2286:	20 e0       	ldi	r18, 0x00	; 0
    2288:	a8 01       	movw	r20, r16
    228a:	be 01       	movw	r22, r28
    228c:	6f 5f       	subi	r22, 0xFF	; 255
    228e:	7f 4f       	sbci	r23, 0xFF	; 255
    2290:	80 91 dd 12 	lds	r24, 0x12DD	; 0x8012dd <xTimerQueue>
    2294:	90 91 de 12 	lds	r25, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    2298:	0e 94 48 05 	call	0xa90	; 0xa90 <xQueueGenericSend>
    229c:	17 c0       	rjmp	.+46     	; 0x22cc <xTimerGenericCommand+0x7a>
    229e:	20 e0       	ldi	r18, 0x00	; 0
    22a0:	40 e0       	ldi	r20, 0x00	; 0
    22a2:	50 e0       	ldi	r21, 0x00	; 0
    22a4:	be 01       	movw	r22, r28
    22a6:	6f 5f       	subi	r22, 0xFF	; 255
    22a8:	7f 4f       	sbci	r23, 0xFF	; 255
    22aa:	80 91 dd 12 	lds	r24, 0x12DD	; 0x8012dd <xTimerQueue>
    22ae:	90 91 de 12 	lds	r25, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    22b2:	0e 94 48 05 	call	0xa90	; 0xa90 <xQueueGenericSend>
    22b6:	0a c0       	rjmp	.+20     	; 0x22cc <xTimerGenericCommand+0x7a>
    22b8:	20 e0       	ldi	r18, 0x00	; 0
    22ba:	ad 01       	movw	r20, r26
    22bc:	be 01       	movw	r22, r28
    22be:	6f 5f       	subi	r22, 0xFF	; 255
    22c0:	7f 4f       	sbci	r23, 0xFF	; 255
    22c2:	cf 01       	movw	r24, r30
    22c4:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <xQueueGenericSendFromISR>
    22c8:	01 c0       	rjmp	.+2      	; 0x22cc <xTimerGenericCommand+0x7a>
    22ca:	80 e0       	ldi	r24, 0x00	; 0
    22cc:	0f 90       	pop	r0
    22ce:	0f 90       	pop	r0
    22d0:	0f 90       	pop	r0
    22d2:	0f 90       	pop	r0
    22d4:	0f 90       	pop	r0
    22d6:	df 91       	pop	r29
    22d8:	cf 91       	pop	r28
    22da:	1f 91       	pop	r17
    22dc:	0f 91       	pop	r16
    22de:	08 95       	ret

000022e0 <prvSwitchTimerLists>:
    22e0:	ef 92       	push	r14
    22e2:	ff 92       	push	r15
    22e4:	0f 93       	push	r16
    22e6:	1f 93       	push	r17
    22e8:	cf 93       	push	r28
    22ea:	df 93       	push	r29
    22ec:	2f c0       	rjmp	.+94     	; 0x234c <prvSwitchTimerLists+0x6c>
    22ee:	05 80       	ldd	r0, Z+5	; 0x05
    22f0:	f6 81       	ldd	r31, Z+6	; 0x06
    22f2:	e0 2d       	mov	r30, r0
    22f4:	e0 80       	ld	r14, Z
    22f6:	f1 80       	ldd	r15, Z+1	; 0x01
    22f8:	c6 81       	ldd	r28, Z+6	; 0x06
    22fa:	d7 81       	ldd	r29, Z+7	; 0x07
    22fc:	8e 01       	movw	r16, r28
    22fe:	0e 5f       	subi	r16, 0xFE	; 254
    2300:	1f 4f       	sbci	r17, 0xFF	; 255
    2302:	c8 01       	movw	r24, r16
    2304:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    2308:	e8 89       	ldd	r30, Y+16	; 0x10
    230a:	f9 89       	ldd	r31, Y+17	; 0x11
    230c:	ce 01       	movw	r24, r28
    230e:	19 95       	eicall
    2310:	8a 89       	ldd	r24, Y+18	; 0x12
    2312:	82 ff       	sbrs	r24, 2
    2314:	1b c0       	rjmp	.+54     	; 0x234c <prvSwitchTimerLists+0x6c>
    2316:	8c 85       	ldd	r24, Y+12	; 0x0c
    2318:	9d 85       	ldd	r25, Y+13	; 0x0d
    231a:	8e 0d       	add	r24, r14
    231c:	9f 1d       	adc	r25, r15
    231e:	e8 16       	cp	r14, r24
    2320:	f9 06       	cpc	r15, r25
    2322:	60 f4       	brcc	.+24     	; 0x233c <prvSwitchTimerLists+0x5c>
    2324:	9b 83       	std	Y+3, r25	; 0x03
    2326:	8a 83       	std	Y+2, r24	; 0x02
    2328:	d9 87       	std	Y+9, r29	; 0x09
    232a:	c8 87       	std	Y+8, r28	; 0x08
    232c:	b8 01       	movw	r22, r16
    232e:	80 91 e1 12 	lds	r24, 0x12E1	; 0x8012e1 <pxCurrentTimerList>
    2332:	90 91 e2 12 	lds	r25, 0x12E2	; 0x8012e2 <pxCurrentTimerList+0x1>
    2336:	0e 94 84 02 	call	0x508	; 0x508 <vListInsert>
    233a:	08 c0       	rjmp	.+16     	; 0x234c <prvSwitchTimerLists+0x6c>
    233c:	00 e0       	ldi	r16, 0x00	; 0
    233e:	10 e0       	ldi	r17, 0x00	; 0
    2340:	20 e0       	ldi	r18, 0x00	; 0
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	a7 01       	movw	r20, r14
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	ce 01       	movw	r24, r28
    234a:	83 df       	rcall	.-250    	; 0x2252 <xTimerGenericCommand>
    234c:	e0 91 e1 12 	lds	r30, 0x12E1	; 0x8012e1 <pxCurrentTimerList>
    2350:	f0 91 e2 12 	lds	r31, 0x12E2	; 0x8012e2 <pxCurrentTimerList+0x1>
    2354:	80 81       	ld	r24, Z
    2356:	81 11       	cpse	r24, r1
    2358:	ca cf       	rjmp	.-108    	; 0x22ee <prvSwitchTimerLists+0xe>
    235a:	80 91 df 12 	lds	r24, 0x12DF	; 0x8012df <pxOverflowTimerList>
    235e:	90 91 e0 12 	lds	r25, 0x12E0	; 0x8012e0 <pxOverflowTimerList+0x1>
    2362:	90 93 e2 12 	sts	0x12E2, r25	; 0x8012e2 <pxCurrentTimerList+0x1>
    2366:	80 93 e1 12 	sts	0x12E1, r24	; 0x8012e1 <pxCurrentTimerList>
    236a:	f0 93 e0 12 	sts	0x12E0, r31	; 0x8012e0 <pxOverflowTimerList+0x1>
    236e:	e0 93 df 12 	sts	0x12DF, r30	; 0x8012df <pxOverflowTimerList>
    2372:	df 91       	pop	r29
    2374:	cf 91       	pop	r28
    2376:	1f 91       	pop	r17
    2378:	0f 91       	pop	r16
    237a:	ff 90       	pop	r15
    237c:	ef 90       	pop	r14
    237e:	08 95       	ret

00002380 <prvSampleTimeNow>:
    2380:	0f 93       	push	r16
    2382:	1f 93       	push	r17
    2384:	cf 93       	push	r28
    2386:	df 93       	push	r29
    2388:	8c 01       	movw	r16, r24
    238a:	13 d9       	rcall	.-3546   	; 0x15b2 <xTaskGetTickCount>
    238c:	ec 01       	movw	r28, r24
    238e:	80 91 d9 12 	lds	r24, 0x12D9	; 0x8012d9 <xLastTime.2436>
    2392:	90 91 da 12 	lds	r25, 0x12DA	; 0x8012da <xLastTime.2436+0x1>
    2396:	c8 17       	cp	r28, r24
    2398:	d9 07       	cpc	r29, r25
    239a:	28 f4       	brcc	.+10     	; 0x23a6 <prvSampleTimeNow+0x26>
    239c:	a1 df       	rcall	.-190    	; 0x22e0 <prvSwitchTimerLists>
    239e:	81 e0       	ldi	r24, 0x01	; 1
    23a0:	f8 01       	movw	r30, r16
    23a2:	80 83       	st	Z, r24
    23a4:	02 c0       	rjmp	.+4      	; 0x23aa <prvSampleTimeNow+0x2a>
    23a6:	f8 01       	movw	r30, r16
    23a8:	10 82       	st	Z, r1
    23aa:	d0 93 da 12 	sts	0x12DA, r29	; 0x8012da <xLastTime.2436+0x1>
    23ae:	c0 93 d9 12 	sts	0x12D9, r28	; 0x8012d9 <xLastTime.2436>
    23b2:	ce 01       	movw	r24, r28
    23b4:	df 91       	pop	r29
    23b6:	cf 91       	pop	r28
    23b8:	1f 91       	pop	r17
    23ba:	0f 91       	pop	r16
    23bc:	08 95       	ret

000023be <prvProcessExpiredTimer>:
    23be:	ef 92       	push	r14
    23c0:	ff 92       	push	r15
    23c2:	0f 93       	push	r16
    23c4:	1f 93       	push	r17
    23c6:	cf 93       	push	r28
    23c8:	df 93       	push	r29
    23ca:	7c 01       	movw	r14, r24
    23cc:	8b 01       	movw	r16, r22
    23ce:	e0 91 e1 12 	lds	r30, 0x12E1	; 0x8012e1 <pxCurrentTimerList>
    23d2:	f0 91 e2 12 	lds	r31, 0x12E2	; 0x8012e2 <pxCurrentTimerList+0x1>
    23d6:	05 80       	ldd	r0, Z+5	; 0x05
    23d8:	f6 81       	ldd	r31, Z+6	; 0x06
    23da:	e0 2d       	mov	r30, r0
    23dc:	c6 81       	ldd	r28, Z+6	; 0x06
    23de:	d7 81       	ldd	r29, Z+7	; 0x07
    23e0:	ce 01       	movw	r24, r28
    23e2:	02 96       	adiw	r24, 0x02	; 2
    23e4:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    23e8:	8a 89       	ldd	r24, Y+18	; 0x12
    23ea:	82 ff       	sbrs	r24, 2
    23ec:	13 c0       	rjmp	.+38     	; 0x2414 <prvProcessExpiredTimer+0x56>
    23ee:	6c 85       	ldd	r22, Y+12	; 0x0c
    23f0:	7d 85       	ldd	r23, Y+13	; 0x0d
    23f2:	6e 0d       	add	r22, r14
    23f4:	7f 1d       	adc	r23, r15
    23f6:	97 01       	movw	r18, r14
    23f8:	a8 01       	movw	r20, r16
    23fa:	ce 01       	movw	r24, r28
    23fc:	b2 de       	rcall	.-668    	; 0x2162 <prvInsertTimerInActiveList>
    23fe:	88 23       	and	r24, r24
    2400:	59 f0       	breq	.+22     	; 0x2418 <prvProcessExpiredTimer+0x5a>
    2402:	00 e0       	ldi	r16, 0x00	; 0
    2404:	10 e0       	ldi	r17, 0x00	; 0
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	a7 01       	movw	r20, r14
    240c:	60 e0       	ldi	r22, 0x00	; 0
    240e:	ce 01       	movw	r24, r28
    2410:	20 df       	rcall	.-448    	; 0x2252 <xTimerGenericCommand>
    2412:	02 c0       	rjmp	.+4      	; 0x2418 <prvProcessExpiredTimer+0x5a>
    2414:	8e 7f       	andi	r24, 0xFE	; 254
    2416:	8a 8b       	std	Y+18, r24	; 0x12
    2418:	e8 89       	ldd	r30, Y+16	; 0x10
    241a:	f9 89       	ldd	r31, Y+17	; 0x11
    241c:	ce 01       	movw	r24, r28
    241e:	19 95       	eicall
    2420:	df 91       	pop	r29
    2422:	cf 91       	pop	r28
    2424:	1f 91       	pop	r17
    2426:	0f 91       	pop	r16
    2428:	ff 90       	pop	r15
    242a:	ef 90       	pop	r14
    242c:	08 95       	ret

0000242e <prvProcessTimerOrBlockTask>:
    242e:	cf 92       	push	r12
    2430:	df 92       	push	r13
    2432:	ef 92       	push	r14
    2434:	ff 92       	push	r15
    2436:	1f 93       	push	r17
    2438:	cf 93       	push	r28
    243a:	df 93       	push	r29
    243c:	1f 92       	push	r1
    243e:	cd b7       	in	r28, 0x3d	; 61
    2440:	de b7       	in	r29, 0x3e	; 62
    2442:	7c 01       	movw	r14, r24
    2444:	16 2f       	mov	r17, r22
    2446:	af d8       	rcall	.-3746   	; 0x15a6 <vTaskSuspendAll>
    2448:	ce 01       	movw	r24, r28
    244a:	01 96       	adiw	r24, 0x01	; 1
    244c:	99 df       	rcall	.-206    	; 0x2380 <prvSampleTimeNow>
    244e:	6c 01       	movw	r12, r24
    2450:	89 81       	ldd	r24, Y+1	; 0x01
    2452:	81 11       	cpse	r24, r1
    2454:	24 c0       	rjmp	.+72     	; 0x249e <prvProcessTimerOrBlockTask+0x70>
    2456:	11 11       	cpse	r17, r1
    2458:	08 c0       	rjmp	.+16     	; 0x246a <prvProcessTimerOrBlockTask+0x3c>
    245a:	ce 14       	cp	r12, r14
    245c:	df 04       	cpc	r13, r15
    245e:	28 f0       	brcs	.+10     	; 0x246a <prvProcessTimerOrBlockTask+0x3c>
    2460:	cb d9       	rcall	.-3178   	; 0x17f8 <xTaskResumeAll>
    2462:	b6 01       	movw	r22, r12
    2464:	c7 01       	movw	r24, r14
    2466:	ab df       	rcall	.-170    	; 0x23be <prvProcessExpiredTimer>
    2468:	1b c0       	rjmp	.+54     	; 0x24a0 <prvProcessTimerOrBlockTask+0x72>
    246a:	11 23       	and	r17, r17
    246c:	41 f0       	breq	.+16     	; 0x247e <prvProcessTimerOrBlockTask+0x50>
    246e:	e0 91 df 12 	lds	r30, 0x12DF	; 0x8012df <pxOverflowTimerList>
    2472:	f0 91 e0 12 	lds	r31, 0x12E0	; 0x8012e0 <pxOverflowTimerList+0x1>
    2476:	80 81       	ld	r24, Z
    2478:	11 e0       	ldi	r17, 0x01	; 1
    247a:	81 11       	cpse	r24, r1
    247c:	10 e0       	ldi	r17, 0x00	; 0
    247e:	b7 01       	movw	r22, r14
    2480:	6c 19       	sub	r22, r12
    2482:	7d 09       	sbc	r23, r13
    2484:	41 2f       	mov	r20, r17
    2486:	80 91 dd 12 	lds	r24, 0x12DD	; 0x8012dd <xTimerQueue>
    248a:	90 91 de 12 	lds	r25, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    248e:	0e 94 45 07 	call	0xe8a	; 0xe8a <vQueueWaitForMessageRestricted>
    2492:	b2 d9       	rcall	.-3228   	; 0x17f8 <xTaskResumeAll>
    2494:	81 11       	cpse	r24, r1
    2496:	04 c0       	rjmp	.+8      	; 0x24a0 <prvProcessTimerOrBlockTask+0x72>
    2498:	0e 94 31 03 	call	0x662	; 0x662 <vPortYield>
    249c:	01 c0       	rjmp	.+2      	; 0x24a0 <prvProcessTimerOrBlockTask+0x72>
    249e:	ac d9       	rcall	.-3240   	; 0x17f8 <xTaskResumeAll>
    24a0:	0f 90       	pop	r0
    24a2:	df 91       	pop	r29
    24a4:	cf 91       	pop	r28
    24a6:	1f 91       	pop	r17
    24a8:	ff 90       	pop	r15
    24aa:	ef 90       	pop	r14
    24ac:	df 90       	pop	r13
    24ae:	cf 90       	pop	r12
    24b0:	08 95       	ret

000024b2 <prvProcessReceivedCommands>:
    24b2:	ef 92       	push	r14
    24b4:	ff 92       	push	r15
    24b6:	0f 93       	push	r16
    24b8:	1f 93       	push	r17
    24ba:	cf 93       	push	r28
    24bc:	df 93       	push	r29
    24be:	00 d0       	rcall	.+0      	; 0x24c0 <prvProcessReceivedCommands+0xe>
    24c0:	00 d0       	rcall	.+0      	; 0x24c2 <prvProcessReceivedCommands+0x10>
    24c2:	cd b7       	in	r28, 0x3d	; 61
    24c4:	de b7       	in	r29, 0x3e	; 62
    24c6:	6c c0       	rjmp	.+216    	; 0x25a0 <prvProcessReceivedCommands+0xee>
    24c8:	89 81       	ldd	r24, Y+1	; 0x01
    24ca:	88 23       	and	r24, r24
    24cc:	0c f4       	brge	.+2      	; 0x24d0 <prvProcessReceivedCommands+0x1e>
    24ce:	68 c0       	rjmp	.+208    	; 0x25a0 <prvProcessReceivedCommands+0xee>
    24d0:	ec 80       	ldd	r14, Y+4	; 0x04
    24d2:	fd 80       	ldd	r15, Y+5	; 0x05
    24d4:	d7 01       	movw	r26, r14
    24d6:	1a 96       	adiw	r26, 0x0a	; 10
    24d8:	8d 91       	ld	r24, X+
    24da:	9c 91       	ld	r25, X
    24dc:	1b 97       	sbiw	r26, 0x0b	; 11
    24de:	89 2b       	or	r24, r25
    24e0:	21 f0       	breq	.+8      	; 0x24ea <prvProcessReceivedCommands+0x38>
    24e2:	c7 01       	movw	r24, r14
    24e4:	02 96       	adiw	r24, 0x02	; 2
    24e6:	0e 94 b5 02 	call	0x56a	; 0x56a <uxListRemove>
    24ea:	ce 01       	movw	r24, r28
    24ec:	06 96       	adiw	r24, 0x06	; 6
    24ee:	48 df       	rcall	.-368    	; 0x2380 <prvSampleTimeNow>
    24f0:	ac 01       	movw	r20, r24
    24f2:	e9 81       	ldd	r30, Y+1	; 0x01
    24f4:	0e 2e       	mov	r0, r30
    24f6:	00 0c       	add	r0, r0
    24f8:	ff 0b       	sbc	r31, r31
    24fa:	ea 30       	cpi	r30, 0x0A	; 10
    24fc:	f1 05       	cpc	r31, r1
    24fe:	08 f0       	brcs	.+2      	; 0x2502 <prvProcessReceivedCommands+0x50>
    2500:	4f c0       	rjmp	.+158    	; 0x25a0 <prvProcessReceivedCommands+0xee>
    2502:	88 27       	eor	r24, r24
    2504:	ee 58       	subi	r30, 0x8E	; 142
    2506:	ff 4f       	sbci	r31, 0xFF	; 255
    2508:	8f 4f       	sbci	r24, 0xFF	; 255
    250a:	0c 94 3e 20 	jmp	0x407c	; 0x407c <__tablejump2__>
    250e:	f7 01       	movw	r30, r14
    2510:	82 89       	ldd	r24, Z+18	; 0x12
    2512:	81 60       	ori	r24, 0x01	; 1
    2514:	82 8b       	std	Z+18, r24	; 0x12
    2516:	2a 81       	ldd	r18, Y+2	; 0x02
    2518:	3b 81       	ldd	r19, Y+3	; 0x03
    251a:	64 85       	ldd	r22, Z+12	; 0x0c
    251c:	75 85       	ldd	r23, Z+13	; 0x0d
    251e:	62 0f       	add	r22, r18
    2520:	73 1f       	adc	r23, r19
    2522:	c7 01       	movw	r24, r14
    2524:	1e de       	rcall	.-964    	; 0x2162 <prvInsertTimerInActiveList>
    2526:	88 23       	and	r24, r24
    2528:	d9 f1       	breq	.+118    	; 0x25a0 <prvProcessReceivedCommands+0xee>
    252a:	d7 01       	movw	r26, r14
    252c:	50 96       	adiw	r26, 0x10	; 16
    252e:	ed 91       	ld	r30, X+
    2530:	fc 91       	ld	r31, X
    2532:	51 97       	sbiw	r26, 0x11	; 17
    2534:	c7 01       	movw	r24, r14
    2536:	19 95       	eicall
    2538:	f7 01       	movw	r30, r14
    253a:	82 89       	ldd	r24, Z+18	; 0x12
    253c:	82 ff       	sbrs	r24, 2
    253e:	30 c0       	rjmp	.+96     	; 0x25a0 <prvProcessReceivedCommands+0xee>
    2540:	4a 81       	ldd	r20, Y+2	; 0x02
    2542:	5b 81       	ldd	r21, Y+3	; 0x03
    2544:	84 85       	ldd	r24, Z+12	; 0x0c
    2546:	95 85       	ldd	r25, Z+13	; 0x0d
    2548:	48 0f       	add	r20, r24
    254a:	59 1f       	adc	r21, r25
    254c:	00 e0       	ldi	r16, 0x00	; 0
    254e:	10 e0       	ldi	r17, 0x00	; 0
    2550:	20 e0       	ldi	r18, 0x00	; 0
    2552:	30 e0       	ldi	r19, 0x00	; 0
    2554:	60 e0       	ldi	r22, 0x00	; 0
    2556:	c7 01       	movw	r24, r14
    2558:	7c de       	rcall	.-776    	; 0x2252 <xTimerGenericCommand>
    255a:	22 c0       	rjmp	.+68     	; 0x25a0 <prvProcessReceivedCommands+0xee>
    255c:	d7 01       	movw	r26, r14
    255e:	52 96       	adiw	r26, 0x12	; 18
    2560:	8c 91       	ld	r24, X
    2562:	52 97       	sbiw	r26, 0x12	; 18
    2564:	8e 7f       	andi	r24, 0xFE	; 254
    2566:	52 96       	adiw	r26, 0x12	; 18
    2568:	8c 93       	st	X, r24
    256a:	1a c0       	rjmp	.+52     	; 0x25a0 <prvProcessReceivedCommands+0xee>
    256c:	f7 01       	movw	r30, r14
    256e:	82 89       	ldd	r24, Z+18	; 0x12
    2570:	81 60       	ori	r24, 0x01	; 1
    2572:	82 8b       	std	Z+18, r24	; 0x12
    2574:	6a 81       	ldd	r22, Y+2	; 0x02
    2576:	7b 81       	ldd	r23, Y+3	; 0x03
    2578:	75 87       	std	Z+13, r23	; 0x0d
    257a:	64 87       	std	Z+12, r22	; 0x0c
    257c:	64 0f       	add	r22, r20
    257e:	75 1f       	adc	r23, r21
    2580:	9a 01       	movw	r18, r20
    2582:	c7 01       	movw	r24, r14
    2584:	ee dd       	rcall	.-1060   	; 0x2162 <prvInsertTimerInActiveList>
    2586:	0c c0       	rjmp	.+24     	; 0x25a0 <prvProcessReceivedCommands+0xee>
    2588:	d7 01       	movw	r26, r14
    258a:	52 96       	adiw	r26, 0x12	; 18
    258c:	8c 91       	ld	r24, X
    258e:	81 fd       	sbrc	r24, 1
    2590:	04 c0       	rjmp	.+8      	; 0x259a <prvProcessReceivedCommands+0xe8>
    2592:	c7 01       	movw	r24, r14
    2594:	0e 94 14 02 	call	0x428	; 0x428 <vPortFree>
    2598:	03 c0       	rjmp	.+6      	; 0x25a0 <prvProcessReceivedCommands+0xee>
    259a:	8e 7f       	andi	r24, 0xFE	; 254
    259c:	f7 01       	movw	r30, r14
    259e:	82 8b       	std	Z+18, r24	; 0x12
    25a0:	40 e0       	ldi	r20, 0x00	; 0
    25a2:	50 e0       	ldi	r21, 0x00	; 0
    25a4:	be 01       	movw	r22, r28
    25a6:	6f 5f       	subi	r22, 0xFF	; 255
    25a8:	7f 4f       	sbci	r23, 0xFF	; 255
    25aa:	80 91 dd 12 	lds	r24, 0x12DD	; 0x8012dd <xTimerQueue>
    25ae:	90 91 de 12 	lds	r25, 0x12DE	; 0x8012de <xTimerQueue+0x1>
    25b2:	0e 94 23 06 	call	0xc46	; 0xc46 <xQueueReceive>
    25b6:	81 11       	cpse	r24, r1
    25b8:	87 cf       	rjmp	.-242    	; 0x24c8 <prvProcessReceivedCommands+0x16>
    25ba:	26 96       	adiw	r28, 0x06	; 6
    25bc:	0f b6       	in	r0, 0x3f	; 63
    25be:	f8 94       	cli
    25c0:	de bf       	out	0x3e, r29	; 62
    25c2:	0f be       	out	0x3f, r0	; 63
    25c4:	cd bf       	out	0x3d, r28	; 61
    25c6:	df 91       	pop	r29
    25c8:	cf 91       	pop	r28
    25ca:	1f 91       	pop	r17
    25cc:	0f 91       	pop	r16
    25ce:	ff 90       	pop	r15
    25d0:	ef 90       	pop	r14
    25d2:	08 95       	ret

000025d4 <_Z15prvSetMainLedOnv>:
    25d4:	84 b1       	in	r24, 0x04	; 4
    25d6:	80 68       	ori	r24, 0x80	; 128
    25d8:	84 b9       	out	0x04, r24	; 4
    25da:	85 b1       	in	r24, 0x05	; 5
    25dc:	80 68       	ori	r24, 0x80	; 128
    25de:	85 b9       	out	0x05, r24	; 5
    25e0:	08 95       	ret

000025e2 <_Z15prvBlinkMainLedv>:
    25e2:	83 b1       	in	r24, 0x03	; 3
    25e4:	80 68       	ori	r24, 0x80	; 128
    25e6:	83 b9       	out	0x03, r24	; 3
    25e8:	08 95       	ret

000025ea <vApplicationMallocFailedHook>:
    25ea:	f4 df       	rcall	.-24     	; 0x25d4 <_Z15prvSetMainLedOnv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    25ec:	83 ed       	ldi	r24, 0xD3	; 211
    25ee:	90 e3       	ldi	r25, 0x30	; 48
    25f0:	01 97       	sbiw	r24, 0x01	; 1
    25f2:	f1 f7       	brne	.-4      	; 0x25f0 <vApplicationMallocFailedHook+0x6>
    25f4:	00 c0       	rjmp	.+0      	; 0x25f6 <vApplicationMallocFailedHook+0xc>
    25f6:	00 00       	nop
    25f8:	f4 df       	rcall	.-24     	; 0x25e2 <_Z15prvBlinkMainLedv>
    25fa:	f8 cf       	rjmp	.-16     	; 0x25ec <vApplicationMallocFailedHook+0x2>

000025fc <vApplicationStackOverflowHook>:
    25fc:	eb df       	rcall	.-42     	; 0x25d4 <_Z15prvSetMainLedOnv>
    25fe:	2f e7       	ldi	r18, 0x7F	; 127
    2600:	8a e1       	ldi	r24, 0x1A	; 26
    2602:	96 e0       	ldi	r25, 0x06	; 6
    2604:	21 50       	subi	r18, 0x01	; 1
    2606:	80 40       	sbci	r24, 0x00	; 0
    2608:	90 40       	sbci	r25, 0x00	; 0
    260a:	e1 f7       	brne	.-8      	; 0x2604 <vApplicationStackOverflowHook+0x8>
    260c:	00 c0       	rjmp	.+0      	; 0x260e <vApplicationStackOverflowHook+0x12>
    260e:	00 00       	nop
    2610:	e8 df       	rcall	.-48     	; 0x25e2 <_Z15prvBlinkMainLedv>
    2612:	f5 cf       	rjmp	.-22     	; 0x25fe <vApplicationStackOverflowHook+0x2>

00002614 <_Z4initv>:


void init()
{

DDRE |= 1;
    2614:	8d b1       	in	r24, 0x0d	; 13
    2616:	81 60       	ori	r24, 0x01	; 1
    2618:	8d b9       	out	0x0d, r24	; 13
DDRH |= 1 << 3 | 1 << 4 | 1 << 5;
    261a:	e1 e0       	ldi	r30, 0x01	; 1
    261c:	f1 e0       	ldi	r31, 0x01	; 1
    261e:	80 81       	ld	r24, Z
    2620:	88 63       	ori	r24, 0x38	; 56
    2622:	80 83       	st	Z, r24
DDRB |= 0b11110000;
    2624:	84 b1       	in	r24, 0x04	; 4
    2626:	80 6f       	ori	r24, 0xF0	; 240
    2628:	84 b9       	out	0x04, r24	; 4

/************************/
/* Nastavitev Timerja */

TCCR0A = 0;
    262a:	14 bc       	out	0x24, r1	; 36
TCCR0B = 0;
    262c:	15 bc       	out	0x25, r1	; 37
TCNT0 = 0;
    262e:	16 bc       	out	0x26, r1	; 38
TCCR0A = (1 << WGM01);
    2630:	82 e0       	ldi	r24, 0x02	; 2
    2632:	84 bd       	out	0x24, r24	; 36
OCR0A = 250;
    2634:	9a ef       	ldi	r25, 0xFA	; 250
    2636:	97 bd       	out	0x27, r25	; 39
TIMSK0 = (1 << OCIE0A);
    2638:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
TCCR0B = (1 << CS01) || (1 << CS00);
    263c:	81 e0       	ldi	r24, 0x01	; 1
    263e:	85 bd       	out	0x25, r24	; 37



/************************/
ADMUX = (1 << REFS0) | (1 << 0b00000011) | (1 << ADLAR); //Nastavi referenco za napetost
    2640:	88 e6       	ldi	r24, 0x68	; 104
    2642:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
ADCSRA |= (1 << ADEN);                                   //Vklop adc in zacetek konverzije
    2646:	ea e7       	ldi	r30, 0x7A	; 122
    2648:	f0 e0       	ldi	r31, 0x00	; 0
    264a:	80 81       	ld	r24, Z
    264c:	80 68       	ori	r24, 0x80	; 128
    264e:	80 83       	st	Z, r24
ADCSRA |= (1 << ADSC);
    2650:	80 81       	ld	r24, Z
    2652:	80 64       	ori	r24, 0x40	; 64
    2654:	80 83       	st	Z, r24
DIDR0 = 0b11111111; // Izklop digitalnih registrov od 0 to 7
    2656:	8f ef       	ldi	r24, 0xFF	; 255
    2658:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7c007e>
DIDR1 = 0b11111100; //Isto samo za ostale
    265c:	8c ef       	ldi	r24, 0xFC	; 252
    265e:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <__TEXT_REGION_LENGTH__+0x7c007f>
    2662:	08 95       	ret

00002664 <__vector_21>:
}


ISR (TIMER0_COMPA_vect){
    2664:	1f 92       	push	r1
    2666:	0f 92       	push	r0
    2668:	0f b6       	in	r0, 0x3f	; 63
    266a:	0f 92       	push	r0
    266c:	11 24       	eor	r1, r1
    266e:	0b b6       	in	r0, 0x3b	; 59
    2670:	0f 92       	push	r0
    2672:	8f 93       	push	r24
    2674:	9f 93       	push	r25
    2676:	af 93       	push	r26
    2678:	bf 93       	push	r27
    267a:	ef 93       	push	r30
    267c:	ff 93       	push	r31
Hardware.timeFROMboot +=1; //Belezi cas od zagona krmilnika (Timer 0)
    267e:	ec e9       	ldi	r30, 0x9C	; 156
    2680:	f3 e1       	ldi	r31, 0x13	; 19
    2682:	84 89       	ldd	r24, Z+20	; 0x14
    2684:	95 89       	ldd	r25, Z+21	; 0x15
    2686:	a6 89       	ldd	r26, Z+22	; 0x16
    2688:	b7 89       	ldd	r27, Z+23	; 0x17
    268a:	01 96       	adiw	r24, 0x01	; 1
    268c:	a1 1d       	adc	r26, r1
    268e:	b1 1d       	adc	r27, r1
    2690:	84 8b       	std	Z+20, r24	; 0x14
    2692:	95 8b       	std	Z+21, r25	; 0x15
    2694:	a6 8b       	std	Z+22, r26	; 0x16
    2696:	b7 8b       	std	Z+23, r27	; 0x17
TCNT0 = 0;				   //Reset timerja, drugace bodo zamiki enaki overflowu casu
    2698:	16 bc       	out	0x26, r1	; 38
}
    269a:	ff 91       	pop	r31
    269c:	ef 91       	pop	r30
    269e:	bf 91       	pop	r27
    26a0:	af 91       	pop	r26
    26a2:	9f 91       	pop	r25
    26a4:	8f 91       	pop	r24
    26a6:	0f 90       	pop	r0
    26a8:	0b be       	out	0x3b, r0	; 59
    26aa:	0f 90       	pop	r0
    26ac:	0f be       	out	0x3f, r0	; 63
    26ae:	0f 90       	pop	r0
    26b0:	1f 90       	pop	r1
    26b2:	18 95       	reti

000026b4 <main>:


int main()
{
    26b4:	ef 92       	push	r14
    26b6:	ff 92       	push	r15
    26b8:	0f 93       	push	r16

init();
    26ba:	ac df       	rcall	.-168    	; 0x2614 <_Z4initv>
writeOUTPUT(4, 'B', 1); // PULL up
    26bc:	41 e0       	ldi	r20, 0x01	; 1
    26be:	62 e4       	ldi	r22, 0x42	; 66
    26c0:	84 e0       	ldi	r24, 0x04	; 4
    26c2:	0e 94 7c 1b 	call	0x36f8	; 0x36f8 <_Z11writeOUTPUThcb>
EEPROM.pisi(0,battery_eeprom_addr);
    26c6:	41 e0       	ldi	r20, 0x01	; 1
    26c8:	50 e0       	ldi	r21, 0x00	; 0
    26ca:	60 e0       	ldi	r22, 0x00	; 0
    26cc:	8c e3       	ldi	r24, 0x3C	; 60
    26ce:	93 e1       	ldi	r25, 0x13	; 19
    26d0:	b5 d7       	rcall	.+3946   	; 0x363c <_ZN8EEPROM_t4pisiEhj>
Hardware.POLKONC = EEPROM.beri(battery_eeprom_addr);
    26d2:	61 e0       	ldi	r22, 0x01	; 1
    26d4:	70 e0       	ldi	r23, 0x00	; 0
    26d6:	8c e3       	ldi	r24, 0x3C	; 60
    26d8:	93 e1       	ldi	r25, 0x13	; 19
    26da:	c9 d7       	rcall	.+3986   	; 0x366e <_ZN8EEPROM_t4beriEj>
    26dc:	91 e0       	ldi	r25, 0x01	; 1
    26de:	81 11       	cpse	r24, r1
    26e0:	01 c0       	rjmp	.+2      	; 0x26e4 <main+0x30>
    26e2:	90 e0       	ldi	r25, 0x00	; 0
    26e4:	90 93 a6 13 	sts	0x13A6, r25	; 0x8013a6 <Hardware+0xa>
voltage_SEM = xSemaphoreCreateMutex();
    26e8:	81 e0       	ldi	r24, 0x01	; 1
    26ea:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <xQueueCreateMutex>
    26ee:	90 93 f6 12 	sts	0x12F6, r25	; 0x8012f6 <voltage_SEM+0x1>
    26f2:	80 93 f5 12 	sts	0x12F5, r24	; 0x8012f5 <voltage_SEM>
xSemaphoreGive(voltage_SEM); /*   (GIVE = ostali lahko vzamejo dostop, TAKE = task ostalim taskom vzame dostop do semaforja)  */
    26f6:	20 e0       	ldi	r18, 0x00	; 0
    26f8:	40 e0       	ldi	r20, 0x00	; 0
    26fa:	50 e0       	ldi	r21, 0x00	; 0
    26fc:	60 e0       	ldi	r22, 0x00	; 0
    26fe:	70 e0       	ldi	r23, 0x00	; 0
    2700:	0e 94 48 05 	call	0xa90	; 0xa90 <xQueueGenericSend>

xTaskCreate(core, "_core", 256, NULL, tskIDLE_PRIORITY, &core_control);
    2704:	0f 2e       	mov	r0, r31
    2706:	f1 e0       	ldi	r31, 0x01	; 1
    2708:	ef 2e       	mov	r14, r31
    270a:	f3 e1       	ldi	r31, 0x13	; 19
    270c:	ff 2e       	mov	r15, r31
    270e:	f0 2d       	mov	r31, r0
    2710:	00 e0       	ldi	r16, 0x00	; 0
    2712:	20 e0       	ldi	r18, 0x00	; 0
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	40 e0       	ldi	r20, 0x00	; 0
    2718:	51 e0       	ldi	r21, 0x01	; 1
    271a:	64 e1       	ldi	r22, 0x14	; 20
    271c:	72 e0       	ldi	r23, 0x02	; 2
    271e:	8c e9       	ldi	r24, 0x9C	; 156
    2720:	98 e1       	ldi	r25, 0x18	; 24
    2722:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
xTaskCreate(events, "Events task", 256, NULL, 3, &event_control);
    2726:	0f 2e       	mov	r0, r31
    2728:	ff ef       	ldi	r31, 0xFF	; 255
    272a:	ef 2e       	mov	r14, r31
    272c:	f2 e1       	ldi	r31, 0x12	; 18
    272e:	ff 2e       	mov	r15, r31
    2730:	f0 2d       	mov	r31, r0
    2732:	03 e0       	ldi	r16, 0x03	; 3
    2734:	20 e0       	ldi	r18, 0x00	; 0
    2736:	30 e0       	ldi	r19, 0x00	; 0
    2738:	40 e0       	ldi	r20, 0x00	; 0
    273a:	51 e0       	ldi	r21, 0x01	; 1
    273c:	6a e1       	ldi	r22, 0x1A	; 26
    273e:	72 e0       	ldi	r23, 0x02	; 2
    2740:	8c ed       	ldi	r24, 0xDC	; 220
    2742:	99 e1       	ldi	r25, 0x19	; 25
    2744:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
xTaskCreate(zaslon, "LVCHRG", 256, NULL, tskIDLE_PRIORITY, &zaslon_control);
    2748:	0f 2e       	mov	r0, r31
    274a:	fb ef       	ldi	r31, 0xFB	; 251
    274c:	ef 2e       	mov	r14, r31
    274e:	f2 e1       	ldi	r31, 0x12	; 18
    2750:	ff 2e       	mov	r15, r31
    2752:	f0 2d       	mov	r31, r0
    2754:	00 e0       	ldi	r16, 0x00	; 0
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	40 e0       	ldi	r20, 0x00	; 0
    275c:	51 e0       	ldi	r21, 0x01	; 1
    275e:	66 e2       	ldi	r22, 0x26	; 38
    2760:	72 e0       	ldi	r23, 0x02	; 2
    2762:	85 e0       	ldi	r24, 0x05	; 5
    2764:	9d e1       	ldi	r25, 0x1D	; 29
    2766:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
xTaskCreate(thermal, "therm", 256, NULL, 1, &thermal_control);
    276a:	0f 2e       	mov	r0, r31
    276c:	f7 ef       	ldi	r31, 0xF7	; 247
    276e:	ef 2e       	mov	r14, r31
    2770:	f2 e1       	ldi	r31, 0x12	; 18
    2772:	ff 2e       	mov	r15, r31
    2774:	f0 2d       	mov	r31, r0
    2776:	01 e0       	ldi	r16, 0x01	; 1
    2778:	20 e0       	ldi	r18, 0x00	; 0
    277a:	30 e0       	ldi	r19, 0x00	; 0
    277c:	40 e0       	ldi	r20, 0x00	; 0
    277e:	51 e0       	ldi	r21, 0x01	; 1
    2780:	6d e2       	ldi	r22, 0x2D	; 45
    2782:	72 e0       	ldi	r23, 0x02	; 2
    2784:	8e e6       	ldi	r24, 0x6E	; 110
    2786:	9d e1       	ldi	r25, 0x1D	; 29
    2788:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
xTaskCreate(polnjenje, "CHRG", 256, NULL, tskIDLE_PRIORITY, &chrg_control);
    278c:	0f 2e       	mov	r0, r31
    278e:	f9 ef       	ldi	r31, 0xF9	; 249
    2790:	ef 2e       	mov	r14, r31
    2792:	f2 e1       	ldi	r31, 0x12	; 18
    2794:	ff 2e       	mov	r15, r31
    2796:	f0 2d       	mov	r31, r0
    2798:	00 e0       	ldi	r16, 0x00	; 0
    279a:	20 e0       	ldi	r18, 0x00	; 0
    279c:	30 e0       	ldi	r19, 0x00	; 0
    279e:	40 e0       	ldi	r20, 0x00	; 0
    27a0:	51 e0       	ldi	r21, 0x01	; 1
    27a2:	68 e2       	ldi	r22, 0x28	; 40
    27a4:	72 e0       	ldi	r23, 0x02	; 2
    27a6:	8a e9       	ldi	r24, 0x9A	; 154
    27a8:	9c e1       	ldi	r25, 0x1C	; 28
    27aa:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
xTaskCreate(audio_visual, "AUSYS", 256, NULL, 2, &audio_system_control);
    27ae:	0f 2e       	mov	r0, r31
    27b0:	fd ef       	ldi	r31, 0xFD	; 253
    27b2:	ef 2e       	mov	r14, r31
    27b4:	f2 e1       	ldi	r31, 0x12	; 18
    27b6:	ff 2e       	mov	r15, r31
    27b8:	f0 2d       	mov	r31, r0
    27ba:	02 e0       	ldi	r16, 0x02	; 2
    27bc:	20 e0       	ldi	r18, 0x00	; 0
    27be:	30 e0       	ldi	r19, 0x00	; 0
    27c0:	40 e0       	ldi	r20, 0x00	; 0
    27c2:	51 e0       	ldi	r21, 0x01	; 1
    27c4:	63 e3       	ldi	r22, 0x33	; 51
    27c6:	72 e0       	ldi	r23, 0x02	; 2
    27c8:	80 ef       	ldi	r24, 0xF0	; 240
    27ca:	93 e1       	ldi	r25, 0x13	; 19
    27cc:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>

vTaskStartScheduler();
    27d0:	0e 94 a6 0a 	call	0x154c	; 0x154c <vTaskStartScheduler>
return 0;
}
    27d4:	80 e0       	ldi	r24, 0x00	; 0
    27d6:	90 e0       	ldi	r25, 0x00	; 0
    27d8:	0f 91       	pop	r16
    27da:	ff 90       	pop	r15
    27dc:	ef 90       	pop	r14
    27de:	08 95       	ret

000027e0 <_Z12audio_visualPv>:
castimer mic_sim_timer;

void audio_visual(void *p) //Funkcija avdio-vizualnega sistema
{
    bool mikrofon_detect = false;
    uint16_t povprecna_glasnost = 0;
    27e0:	c1 2c       	mov	r12, r1
    27e2:	d1 2c       	mov	r13, r1

    while (true)
    {
       
        int checkPVP = AVG_Volume_Meri(); // Izmeri povprecje
    27e4:	cc d0       	rcall	.+408    	; 0x297e <_Z15AVG_Volume_Meriv>
        povprecna_glasnost = checkPVP != 0 ? checkPVP : povprecna_glasnost;
    27e6:	00 97       	sbiw	r24, 0x00	; 0
    27e8:	09 f0       	breq	.+2      	; 0x27ec <_Z12audio_visualPv+0xc>
    27ea:	6c 01       	movw	r12, r24
        mikrofon_detect = readANALOG(mic_pin) >= (povprecna_glasnost + 80) && povprecna_glasnost != 0 ? true : false;
    27ec:	80 e0       	ldi	r24, 0x00	; 0
    27ee:	e4 d7       	rcall	.+4040   	; 0x37b8 <_Z10readANALOGh>
    27f0:	96 01       	movw	r18, r12
    27f2:	20 5b       	subi	r18, 0xB0	; 176
    27f4:	3f 4f       	sbci	r19, 0xFF	; 255
    27f6:	82 17       	cp	r24, r18
    27f8:	93 07       	cpc	r25, r19
    27fa:	28 f0       	brcs	.+10     	; 0x2806 <_Z12audio_visualPv+0x26>
    27fc:	c1 14       	cp	r12, r1
    27fe:	d1 04       	cpc	r13, r1
    2800:	21 f4       	brne	.+8      	; 0x280a <_Z12audio_visualPv+0x2a>
    2802:	c0 e0       	ldi	r28, 0x00	; 0
    2804:	03 c0       	rjmp	.+6      	; 0x280c <_Z12audio_visualPv+0x2c>
    2806:	c0 e0       	ldi	r28, 0x00	; 0
    2808:	01 c0       	rjmp	.+2      	; 0x280c <_Z12audio_visualPv+0x2c>
    280a:	c1 e0       	ldi	r28, 0x01	; 1
     

        if (Timers.lucke_filter_time.vrednost() > 100 && mikrofon_detect ) // AUDIO_M machine
    280c:	84 e7       	ldi	r24, 0x74	; 116
    280e:	93 e1       	ldi	r25, 0x13	; 19
    2810:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    2814:	65 36       	cpi	r22, 0x65	; 101
    2816:	71 05       	cpc	r23, r1
    2818:	81 05       	cpc	r24, r1
    281a:	91 05       	cpc	r25, r1
    281c:	18 f0       	brcs	.+6      	; 0x2824 <_Z12audio_visualPv+0x44>
    281e:	c1 11       	cpse	r28, r1
    2820:	03 c0       	rjmp	.+6      	; 0x2828 <_Z12audio_visualPv+0x48>
    2822:	03 c0       	rjmp	.+6      	; 0x282a <_Z12audio_visualPv+0x4a>
    2824:	c0 e0       	ldi	r28, 0x00	; 0
    2826:	01 c0       	rjmp	.+2      	; 0x282a <_Z12audio_visualPv+0x4a>
    2828:	c1 e0       	ldi	r28, 0x01	; 1
    282a:	cc 23       	and	r28, r28
    282c:	09 f4       	brne	.+2      	; 0x2830 <_Z12audio_visualPv+0x50>
    282e:	a3 c0       	rjmp	.+326    	; 0x2976 <_Z12audio_visualPv+0x196>
        {
            Timers.lucke_filter_time.ponastavi();
    2830:	84 e7       	ldi	r24, 0x74	; 116
    2832:	93 e1       	ldi	r25, 0x13	; 19
    2834:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
            static uint8_t barva_selekt = 0;
			barva_selekt += 1 % LENGHT; 
    2838:	80 91 03 13 	lds	r24, 0x1303	; 0x801303 <_ZZ12audio_visualPvE12barva_selekt>
    283c:	8f 5f       	subi	r24, 0xFF	; 255
    283e:	80 93 03 13 	sts	0x1303, r24	; 0x801303 <_ZZ12audio_visualPvE12barva_selekt>
            switch (trenutni_audio_mode)
    2842:	80 91 65 13 	lds	r24, 0x1365	; 0x801365 <AUSYS_vars>
    2846:	90 91 66 13 	lds	r25, 0x1366	; 0x801366 <AUSYS_vars+0x1>
    284a:	81 30       	cpi	r24, 0x01	; 1
    284c:	91 05       	cpc	r25, r1
    284e:	c9 f1       	breq	.+114    	; 0x28c2 <_Z12audio_visualPv+0xe2>
    2850:	40 f0       	brcs	.+16     	; 0x2862 <_Z12audio_visualPv+0x82>
    2852:	82 30       	cpi	r24, 0x02	; 2
    2854:	91 05       	cpc	r25, r1
    2856:	09 f4       	brne	.+2      	; 0x285a <_Z12audio_visualPv+0x7a>
    2858:	55 c0       	rjmp	.+170    	; 0x2904 <_Z12audio_visualPv+0x124>
    285a:	04 97       	sbiw	r24, 0x04	; 4
    285c:	09 f4       	brne	.+2      	; 0x2860 <_Z12audio_visualPv+0x80>
    285e:	73 c0       	rjmp	.+230    	; 0x2946 <_Z12audio_visualPv+0x166>
    2860:	8a c0       	rjmp	.+276    	; 0x2976 <_Z12audio_visualPv+0x196>
            {

            case NORMAL_FADE: //Prizig in fade izklop
			    deleteTask(fade_control);                        
    2862:	80 91 08 13 	lds	r24, 0x1308	; 0x801308 <fade_control>
    2866:	90 91 09 13 	lds	r25, 0x1309	; 0x801309 <fade_control+0x1>
    286a:	00 97       	sbiw	r24, 0x00	; 0
    286c:	49 f0       	breq	.+18     	; 0x2880 <_Z12audio_visualPv+0xa0>
    286e:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    2872:	10 92 09 13 	sts	0x1309, r1	; 0x801309 <fade_control+0x1>
    2876:	10 92 08 13 	sts	0x1308, r1	; 0x801308 <fade_control>
    287a:	81 e0       	ldi	r24, 0x01	; 1
    287c:	90 e0       	ldi	r25, 0x00	; 0
    287e:	8f d8       	rcall	.-3810   	; 0x199e <vTaskDelay>
                cr_fade_tsk(fade_task, "Normal Fade", barva_selekt, fade_control);
    2880:	80 91 08 13 	lds	r24, 0x1308	; 0x801308 <fade_control>
    2884:	90 91 09 13 	lds	r25, 0x1309	; 0x801309 <fade_control+0x1>
    2888:	00 97       	sbiw	r24, 0x00	; 0
    288a:	49 f0       	breq	.+18     	; 0x289e <_Z12audio_visualPv+0xbe>
    288c:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    2890:	10 92 09 13 	sts	0x1309, r1	; 0x801309 <fade_control+0x1>
    2894:	10 92 08 13 	sts	0x1308, r1	; 0x801308 <fade_control>
    2898:	81 e0       	ldi	r24, 0x01	; 1
    289a:	90 e0       	ldi	r25, 0x00	; 0
    289c:	80 d8       	rcall	.-3840   	; 0x199e <vTaskDelay>
    289e:	0f 2e       	mov	r0, r31
    28a0:	f8 e0       	ldi	r31, 0x08	; 8
    28a2:	ef 2e       	mov	r14, r31
    28a4:	f3 e1       	ldi	r31, 0x13	; 19
    28a6:	ff 2e       	mov	r15, r31
    28a8:	f0 2d       	mov	r31, r0
    28aa:	03 e0       	ldi	r16, 0x03	; 3
    28ac:	23 e0       	ldi	r18, 0x03	; 3
    28ae:	33 e1       	ldi	r19, 0x13	; 19
    28b0:	40 e8       	ldi	r20, 0x80	; 128
    28b2:	50 e0       	ldi	r21, 0x00	; 0
    28b4:	69 e3       	ldi	r22, 0x39	; 57
    28b6:	72 e0       	ldi	r23, 0x02	; 2
    28b8:	80 eb       	ldi	r24, 0xB0	; 176
    28ba:	97 e1       	ldi	r25, 0x17	; 23
    28bc:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
                break;
    28c0:	5a c0       	rjmp	.+180    	; 0x2976 <_Z12audio_visualPv+0x196>

            case COLOR_FADE: //Prehod iz trenutne barve v zeljeno
                cr_fade_tsk(Color_Fade_task, "Color shift", barva_selekt, color_fade_control);
    28c2:	80 91 06 13 	lds	r24, 0x1306	; 0x801306 <color_fade_control>
    28c6:	90 91 07 13 	lds	r25, 0x1307	; 0x801307 <color_fade_control+0x1>
    28ca:	00 97       	sbiw	r24, 0x00	; 0
    28cc:	49 f0       	breq	.+18     	; 0x28e0 <_Z12audio_visualPv+0x100>
    28ce:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    28d2:	10 92 07 13 	sts	0x1307, r1	; 0x801307 <color_fade_control+0x1>
    28d6:	10 92 06 13 	sts	0x1306, r1	; 0x801306 <color_fade_control>
    28da:	81 e0       	ldi	r24, 0x01	; 1
    28dc:	90 e0       	ldi	r25, 0x00	; 0
    28de:	5f d8       	rcall	.-3906   	; 0x199e <vTaskDelay>
    28e0:	0f 2e       	mov	r0, r31
    28e2:	f6 e0       	ldi	r31, 0x06	; 6
    28e4:	ef 2e       	mov	r14, r31
    28e6:	f3 e1       	ldi	r31, 0x13	; 19
    28e8:	ff 2e       	mov	r15, r31
    28ea:	f0 2d       	mov	r31, r0
    28ec:	03 e0       	ldi	r16, 0x03	; 3
    28ee:	23 e0       	ldi	r18, 0x03	; 3
    28f0:	33 e1       	ldi	r19, 0x13	; 19
    28f2:	40 e8       	ldi	r20, 0x80	; 128
    28f4:	50 e0       	ldi	r21, 0x00	; 0
    28f6:	65 e4       	ldi	r22, 0x45	; 69
    28f8:	72 e0       	ldi	r23, 0x02	; 2
    28fa:	89 ef       	ldi	r24, 0xF9	; 249
    28fc:	97 e1       	ldi	r25, 0x17	; 23
    28fe:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
                break;
    2902:	39 c0       	rjmp	.+114    	; 0x2976 <_Z12audio_visualPv+0x196>

            case Fade_Breathe: //Dihalni nacin
                cr_fade_tsk(Fade_Breathe_Task, "Breathe Fade", barva_selekt, Breathe_control);
    2904:	80 91 04 13 	lds	r24, 0x1304	; 0x801304 <Breathe_control>
    2908:	90 91 05 13 	lds	r25, 0x1305	; 0x801305 <Breathe_control+0x1>
    290c:	00 97       	sbiw	r24, 0x00	; 0
    290e:	49 f0       	breq	.+18     	; 0x2922 <_Z12audio_visualPv+0x142>
    2910:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    2914:	10 92 05 13 	sts	0x1305, r1	; 0x801305 <Breathe_control+0x1>
    2918:	10 92 04 13 	sts	0x1304, r1	; 0x801304 <Breathe_control>
    291c:	81 e0       	ldi	r24, 0x01	; 1
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	3e d8       	rcall	.-3972   	; 0x199e <vTaskDelay>
    2922:	0f 2e       	mov	r0, r31
    2924:	f4 e0       	ldi	r31, 0x04	; 4
    2926:	ef 2e       	mov	r14, r31
    2928:	f3 e1       	ldi	r31, 0x13	; 19
    292a:	ff 2e       	mov	r15, r31
    292c:	f0 2d       	mov	r31, r0
    292e:	03 e0       	ldi	r16, 0x03	; 3
    2930:	23 e0       	ldi	r18, 0x03	; 3
    2932:	33 e1       	ldi	r19, 0x13	; 19
    2934:	40 e8       	ldi	r20, 0x80	; 128
    2936:	50 e0       	ldi	r21, 0x00	; 0
    2938:	61 e5       	ldi	r22, 0x51	; 81
    293a:	72 e0       	ldi	r23, 0x02	; 2
    293c:	8f e0       	ldi	r24, 0x0F	; 15
    293e:	98 e1       	ldi	r25, 0x18	; 24
    2940:	0e 94 61 09 	call	0x12c2	; 0x12c2 <xTaskCreate>
                break;
    2944:	18 c0       	rjmp	.+48     	; 0x2976 <_Z12audio_visualPv+0x196>

            case OFF_A:
                holdTASK(audio_system_control); //Ne rabi hoditi v task ce je izkljucen
    2946:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    294a:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    294e:	0e 94 f7 09 	call	0x13ee	; 0x13ee <eTaskGetState>
    2952:	83 30       	cpi	r24, 0x03	; 3
    2954:	41 f0       	breq	.+16     	; 0x2966 <_Z12audio_visualPv+0x186>
    2956:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    295a:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    295e:	89 2b       	or	r24, r25
    2960:	19 f4       	brne	.+6      	; 0x2968 <_Z12audio_visualPv+0x188>
    2962:	c0 e0       	ldi	r28, 0x00	; 0
    2964:	01 c0       	rjmp	.+2      	; 0x2968 <_Z12audio_visualPv+0x188>
    2966:	c0 e0       	ldi	r28, 0x00	; 0
    2968:	cc 23       	and	r28, r28
    296a:	29 f0       	breq	.+10     	; 0x2976 <_Z12audio_visualPv+0x196>
    296c:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    2970:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
                break;
            }
        }

        vTaskDelay(1);
    2974:	95 d8       	rcall	.-3798   	; 0x1aa0 <vTaskSuspend>
    2976:	81 e0       	ldi	r24, 0x01	; 1
    2978:	90 e0       	ldi	r25, 0x00	; 0
    297a:	11 d8       	rcall	.-4062   	; 0x199e <vTaskDelay>
void audio_visual(void *p) //Funkcija avdio-vizualnega sistema
{
    bool mikrofon_detect = false;
    uint16_t povprecna_glasnost = 0;

    while (true)
    297c:	33 cf       	rjmp	.-410    	; 0x27e4 <_Z12audio_visualPv+0x4>

0000297e <_Z15AVG_Volume_Meriv>:
    static unsigned long vsota_branj = 0;
    static unsigned short st_branj = 0;
    static unsigned short max_izmerjeno = 0;


    unsigned short tr_vrednost = readANALOG(mic_pin);
    297e:	80 e0       	ldi	r24, 0x00	; 0
    2980:	1b d7       	rcall	.+3638   	; 0x37b8 <_Z10readANALOGh>
    if (tr_vrednost > max_izmerjeno)
    2982:	20 91 10 13 	lds	r18, 0x1310	; 0x801310 <_ZZ15AVG_Volume_MerivE13max_izmerjeno>
    2986:	30 91 11 13 	lds	r19, 0x1311	; 0x801311 <_ZZ15AVG_Volume_MerivE13max_izmerjeno+0x1>
    298a:	28 17       	cp	r18, r24
    298c:	39 07       	cpc	r19, r25
    298e:	20 f4       	brcc	.+8      	; 0x2998 <_Z15AVG_Volume_Meriv+0x1a>
        max_izmerjeno = tr_vrednost;
    2990:	90 93 11 13 	sts	0x1311, r25	; 0x801311 <_ZZ15AVG_Volume_MerivE13max_izmerjeno+0x1>
    2994:	80 93 10 13 	sts	0x1310, r24	; 0x801310 <_ZZ15AVG_Volume_MerivE13max_izmerjeno>

    if (Timers.average_v_timer.vrednost() >= 20)
    2998:	8d e8       	ldi	r24, 0x8D	; 141
    299a:	93 e1       	ldi	r25, 0x13	; 19
    299c:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    29a0:	64 31       	cpi	r22, 0x14	; 20
    29a2:	71 05       	cpc	r23, r1
    29a4:	81 05       	cpc	r24, r1
    29a6:	91 05       	cpc	r25, r1
    29a8:	48 f1       	brcs	.+82     	; 0x29fc <_Z15AVG_Volume_Meriv+0x7e>
    {
        vsota_branj += max_izmerjeno;
    29aa:	20 91 10 13 	lds	r18, 0x1310	; 0x801310 <_ZZ15AVG_Volume_MerivE13max_izmerjeno>
    29ae:	30 91 11 13 	lds	r19, 0x1311	; 0x801311 <_ZZ15AVG_Volume_MerivE13max_izmerjeno+0x1>
    29b2:	80 91 0c 13 	lds	r24, 0x130C	; 0x80130c <_ZZ15AVG_Volume_MerivE11vsota_branj>
    29b6:	90 91 0d 13 	lds	r25, 0x130D	; 0x80130d <_ZZ15AVG_Volume_MerivE11vsota_branj+0x1>
    29ba:	a0 91 0e 13 	lds	r26, 0x130E	; 0x80130e <_ZZ15AVG_Volume_MerivE11vsota_branj+0x2>
    29be:	b0 91 0f 13 	lds	r27, 0x130F	; 0x80130f <_ZZ15AVG_Volume_MerivE11vsota_branj+0x3>
    29c2:	82 0f       	add	r24, r18
    29c4:	93 1f       	adc	r25, r19
    29c6:	a1 1d       	adc	r26, r1
    29c8:	b1 1d       	adc	r27, r1
    29ca:	80 93 0c 13 	sts	0x130C, r24	; 0x80130c <_ZZ15AVG_Volume_MerivE11vsota_branj>
    29ce:	90 93 0d 13 	sts	0x130D, r25	; 0x80130d <_ZZ15AVG_Volume_MerivE11vsota_branj+0x1>
    29d2:	a0 93 0e 13 	sts	0x130E, r26	; 0x80130e <_ZZ15AVG_Volume_MerivE11vsota_branj+0x2>
    29d6:	b0 93 0f 13 	sts	0x130F, r27	; 0x80130f <_ZZ15AVG_Volume_MerivE11vsota_branj+0x3>
        st_branj++;
    29da:	80 91 0a 13 	lds	r24, 0x130A	; 0x80130a <_ZZ15AVG_Volume_MerivE8st_branj>
    29de:	90 91 0b 13 	lds	r25, 0x130B	; 0x80130b <_ZZ15AVG_Volume_MerivE8st_branj+0x1>
    29e2:	01 96       	adiw	r24, 0x01	; 1
    29e4:	90 93 0b 13 	sts	0x130B, r25	; 0x80130b <_ZZ15AVG_Volume_MerivE8st_branj+0x1>
    29e8:	80 93 0a 13 	sts	0x130A, r24	; 0x80130a <_ZZ15AVG_Volume_MerivE8st_branj>
        max_izmerjeno = 0;
    29ec:	10 92 11 13 	sts	0x1311, r1	; 0x801311 <_ZZ15AVG_Volume_MerivE13max_izmerjeno+0x1>
    29f0:	10 92 10 13 	sts	0x1310, r1	; 0x801310 <_ZZ15AVG_Volume_MerivE13max_izmerjeno>
        Timers.average_v_timer.ponastavi();
    29f4:	8d e8       	ldi	r24, 0x8D	; 141
    29f6:	93 e1       	ldi	r25, 0x13	; 19
    29f8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    }

    if (st_branj >= 50)
    29fc:	20 91 0a 13 	lds	r18, 0x130A	; 0x80130a <_ZZ15AVG_Volume_MerivE8st_branj>
    2a00:	30 91 0b 13 	lds	r19, 0x130B	; 0x80130b <_ZZ15AVG_Volume_MerivE8st_branj+0x1>
    2a04:	22 33       	cpi	r18, 0x32	; 50
    2a06:	31 05       	cpc	r19, r1
    2a08:	f0 f0       	brcs	.+60     	; 0x2a46 <_Z15AVG_Volume_Meriv+0xc8>
    {
        uint16_t tmp = vsota_branj / st_branj;
    2a0a:	40 e0       	ldi	r20, 0x00	; 0
    2a0c:	50 e0       	ldi	r21, 0x00	; 0
    2a0e:	60 91 0c 13 	lds	r22, 0x130C	; 0x80130c <_ZZ15AVG_Volume_MerivE11vsota_branj>
    2a12:	70 91 0d 13 	lds	r23, 0x130D	; 0x80130d <_ZZ15AVG_Volume_MerivE11vsota_branj+0x1>
    2a16:	80 91 0e 13 	lds	r24, 0x130E	; 0x80130e <_ZZ15AVG_Volume_MerivE11vsota_branj+0x2>
    2a1a:	90 91 0f 13 	lds	r25, 0x130F	; 0x80130f <_ZZ15AVG_Volume_MerivE11vsota_branj+0x3>
    2a1e:	0e 94 1c 20 	call	0x4038	; 0x4038 <__udivmodsi4>
        vsota_branj = 0;
    2a22:	10 92 0c 13 	sts	0x130C, r1	; 0x80130c <_ZZ15AVG_Volume_MerivE11vsota_branj>
    2a26:	10 92 0d 13 	sts	0x130D, r1	; 0x80130d <_ZZ15AVG_Volume_MerivE11vsota_branj+0x1>
    2a2a:	10 92 0e 13 	sts	0x130E, r1	; 0x80130e <_ZZ15AVG_Volume_MerivE11vsota_branj+0x2>
    2a2e:	10 92 0f 13 	sts	0x130F, r1	; 0x80130f <_ZZ15AVG_Volume_MerivE11vsota_branj+0x3>
        st_branj = 0;
    2a32:	10 92 0b 13 	sts	0x130B, r1	; 0x80130b <_ZZ15AVG_Volume_MerivE8st_branj+0x1>
    2a36:	10 92 0a 13 	sts	0x130A, r1	; 0x80130a <_ZZ15AVG_Volume_MerivE8st_branj>
        max_izmerjeno = 0;
    2a3a:	10 92 11 13 	sts	0x1311, r1	; 0x801311 <_ZZ15AVG_Volume_MerivE13max_izmerjeno+0x1>
    2a3e:	10 92 10 13 	sts	0x1310, r1	; 0x801310 <_ZZ15AVG_Volume_MerivE13max_izmerjeno>
        return tmp;
    2a42:	c9 01       	movw	r24, r18
    2a44:	08 95       	ret
    }
    return 0;
    2a46:	80 e0       	ldi	r24, 0x00	; 0
    2a48:	90 e0       	ldi	r25, 0x00	; 0
}
    2a4a:	08 95       	ret

00002a4c <_Z24deleteALL_subAUDIO_tasksv>:
    holdTASK(Breathe_control);
}

void deleteALL_subAUDIO_tasks()
{
    deleteTask(fade_control);
    2a4c:	80 91 08 13 	lds	r24, 0x1308	; 0x801308 <fade_control>
    2a50:	90 91 09 13 	lds	r25, 0x1309	; 0x801309 <fade_control+0x1>
    2a54:	00 97       	sbiw	r24, 0x00	; 0
    2a56:	51 f0       	breq	.+20     	; 0x2a6c <_Z24deleteALL_subAUDIO_tasksv+0x20>
    2a58:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    2a5c:	10 92 09 13 	sts	0x1309, r1	; 0x801309 <fade_control+0x1>
    2a60:	10 92 08 13 	sts	0x1308, r1	; 0x801308 <fade_control>
    2a64:	81 e0       	ldi	r24, 0x01	; 1
    2a66:	90 e0       	ldi	r25, 0x00	; 0
    2a68:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    deleteTask(color_fade_control);
    2a6c:	80 91 06 13 	lds	r24, 0x1306	; 0x801306 <color_fade_control>
    2a70:	90 91 07 13 	lds	r25, 0x1307	; 0x801307 <color_fade_control+0x1>
    2a74:	00 97       	sbiw	r24, 0x00	; 0
    2a76:	51 f0       	breq	.+20     	; 0x2a8c <_Z24deleteALL_subAUDIO_tasksv+0x40>
    2a78:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    2a7c:	10 92 07 13 	sts	0x1307, r1	; 0x801307 <color_fade_control+0x1>
    2a80:	10 92 06 13 	sts	0x1306, r1	; 0x801306 <color_fade_control>
    2a84:	81 e0       	ldi	r24, 0x01	; 1
    2a86:	90 e0       	ldi	r25, 0x00	; 0
    2a88:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    deleteTask(Breathe_control);
    2a8c:	80 91 04 13 	lds	r24, 0x1304	; 0x801304 <Breathe_control>
    2a90:	90 91 05 13 	lds	r25, 0x1305	; 0x801305 <Breathe_control+0x1>
    2a94:	00 97       	sbiw	r24, 0x00	; 0
    2a96:	51 f0       	breq	.+20     	; 0x2aac <_Z24deleteALL_subAUDIO_tasksv+0x60>
    2a98:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
    2a9c:	10 92 05 13 	sts	0x1305, r1	; 0x801305 <Breathe_control+0x1>
    2aa0:	10 92 04 13 	sts	0x1304, r1	; 0x801304 <Breathe_control>
    2aa4:	81 e0       	ldi	r24, 0x01	; 1
    2aa6:	90 e0       	ldi	r25, 0x00	; 0
    2aa8:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    delay_FRTOS(15);
    2aac:	80 e0       	ldi	r24, 0x00	; 0
    2aae:	90 e0       	ldi	r25, 0x00	; 0
    2ab0:	0c 94 cf 0c 	jmp	0x199e	; 0x199e <vTaskDelay>
    2ab4:	08 95       	ret

00002ab6 <_Z9writeTRAKv>:
}

void writeTRAK()
{
    2ab6:	cf 92       	push	r12
    2ab8:	df 92       	push	r13
    2aba:	ef 92       	push	r14
    2abc:	ff 92       	push	r15
    2abe:	cf 93       	push	r28
    2ac0:	df 93       	push	r29
    writePWM(r_trak, 'B', (float)tr_r * (float)tr_bright / 255.00);
    2ac2:	c5 e6       	ldi	r28, 0x65	; 101
    2ac4:	d3 e1       	ldi	r29, 0x13	; 19
    2ac6:	6a 81       	ldd	r22, Y+2	; 0x02
    2ac8:	7b 81       	ldd	r23, Y+3	; 0x03
    2aca:	07 2e       	mov	r0, r23
    2acc:	00 0c       	add	r0, r0
    2ace:	88 0b       	sbc	r24, r24
    2ad0:	99 0b       	sbc	r25, r25
    2ad2:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <__floatsisf>
    2ad6:	6b 01       	movw	r12, r22
    2ad8:	7c 01       	movw	r14, r24
    2ada:	68 85       	ldd	r22, Y+8	; 0x08
    2adc:	79 85       	ldd	r23, Y+9	; 0x09
    2ade:	07 2e       	mov	r0, r23
    2ae0:	00 0c       	add	r0, r0
    2ae2:	88 0b       	sbc	r24, r24
    2ae4:	99 0b       	sbc	r25, r25
    2ae6:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <__floatsisf>
    2aea:	9b 01       	movw	r18, r22
    2aec:	ac 01       	movw	r20, r24
    2aee:	c7 01       	movw	r24, r14
    2af0:	b6 01       	movw	r22, r12
    2af2:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsf3>
    2af6:	20 e0       	ldi	r18, 0x00	; 0
    2af8:	30 e0       	ldi	r19, 0x00	; 0
    2afa:	4f e7       	ldi	r20, 0x7F	; 127
    2afc:	53 e4       	ldi	r21, 0x43	; 67
    2afe:	0e 94 5c 1e 	call	0x3cb8	; 0x3cb8 <__divsf3>
    2b02:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <__fixunssfsi>
    2b06:	46 2f       	mov	r20, r22
    2b08:	62 e4       	ldi	r22, 0x42	; 66
    2b0a:	84 e0       	ldi	r24, 0x04	; 4
    2b0c:	67 d6       	rcall	.+3278   	; 0x37dc <_Z8writePWMhch>
    writePWM(z_trak, 'B', (float)tr_z * (float)tr_bright / 255.00);
    2b0e:	6c 81       	ldd	r22, Y+4	; 0x04
    2b10:	7d 81       	ldd	r23, Y+5	; 0x05
    2b12:	07 2e       	mov	r0, r23
    2b14:	00 0c       	add	r0, r0
    2b16:	88 0b       	sbc	r24, r24
    2b18:	99 0b       	sbc	r25, r25
    2b1a:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <__floatsisf>
    2b1e:	6b 01       	movw	r12, r22
    2b20:	7c 01       	movw	r14, r24
    2b22:	68 85       	ldd	r22, Y+8	; 0x08
    2b24:	79 85       	ldd	r23, Y+9	; 0x09
    2b26:	07 2e       	mov	r0, r23
    2b28:	00 0c       	add	r0, r0
    2b2a:	88 0b       	sbc	r24, r24
    2b2c:	99 0b       	sbc	r25, r25
    2b2e:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <__floatsisf>
    2b32:	9b 01       	movw	r18, r22
    2b34:	ac 01       	movw	r20, r24
    2b36:	c7 01       	movw	r24, r14
    2b38:	b6 01       	movw	r22, r12
    2b3a:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsf3>
    2b3e:	20 e0       	ldi	r18, 0x00	; 0
    2b40:	30 e0       	ldi	r19, 0x00	; 0
    2b42:	4f e7       	ldi	r20, 0x7F	; 127
    2b44:	53 e4       	ldi	r21, 0x43	; 67
    2b46:	0e 94 5c 1e 	call	0x3cb8	; 0x3cb8 <__divsf3>
    2b4a:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <__fixunssfsi>
    2b4e:	46 2f       	mov	r20, r22
    2b50:	62 e4       	ldi	r22, 0x42	; 66
    2b52:	85 e0       	ldi	r24, 0x05	; 5
    2b54:	43 d6       	rcall	.+3206   	; 0x37dc <_Z8writePWMhch>
    writePWM(m_trak, 'B', (float)tr_m * (float)tr_bright / 255.00);
    2b56:	6e 81       	ldd	r22, Y+6	; 0x06
    2b58:	7f 81       	ldd	r23, Y+7	; 0x07
    2b5a:	07 2e       	mov	r0, r23
    2b5c:	00 0c       	add	r0, r0
    2b5e:	88 0b       	sbc	r24, r24
    2b60:	99 0b       	sbc	r25, r25
    2b62:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <__floatsisf>
    2b66:	6b 01       	movw	r12, r22
    2b68:	7c 01       	movw	r14, r24
    2b6a:	68 85       	ldd	r22, Y+8	; 0x08
    2b6c:	79 85       	ldd	r23, Y+9	; 0x09
    2b6e:	07 2e       	mov	r0, r23
    2b70:	00 0c       	add	r0, r0
    2b72:	88 0b       	sbc	r24, r24
    2b74:	99 0b       	sbc	r25, r25
    2b76:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <__floatsisf>
    2b7a:	9b 01       	movw	r18, r22
    2b7c:	ac 01       	movw	r20, r24
    2b7e:	c7 01       	movw	r24, r14
    2b80:	b6 01       	movw	r22, r12
    2b82:	0e 94 82 1f 	call	0x3f04	; 0x3f04 <__mulsf3>
    2b86:	20 e0       	ldi	r18, 0x00	; 0
    2b88:	30 e0       	ldi	r19, 0x00	; 0
    2b8a:	4f e7       	ldi	r20, 0x7F	; 127
    2b8c:	53 e4       	ldi	r21, 0x43	; 67
    2b8e:	0e 94 5c 1e 	call	0x3cb8	; 0x3cb8 <__divsf3>
    2b92:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <__fixunssfsi>
    2b96:	46 2f       	mov	r20, r22
    2b98:	62 e4       	ldi	r22, 0x42	; 66
    2b9a:	86 e0       	ldi	r24, 0x06	; 6
    2b9c:	1f d6       	rcall	.+3134   	; 0x37dc <_Z8writePWMhch>
}
    2b9e:	df 91       	pop	r29
    2ba0:	cf 91       	pop	r28
    2ba2:	ff 90       	pop	r15
    2ba4:	ef 90       	pop	r14
    2ba6:	df 90       	pop	r13
    2ba8:	cf 90       	pop	r12
    2baa:	08 95       	ret

00002bac <_Z11flash_stripv>:

void flash_strip() //Utripanje (Izhod iz scroll stata / menjava mikrofona)
{
    2bac:	cf 93       	push	r28
	free(AUSYS_vars.TR_BARVA);
    2bae:	87 e6       	ldi	r24, 0x67	; 103
    2bb0:	93 e1       	ldi	r25, 0x13	; 19
    2bb2:	0e 94 01 21 	call	0x4202	; 0x4202 <free>
	memcpy(AUSYS_vars.TR_BARVA, mozne_barve.barvni_ptr[BELA], 3);
    2bb6:	a0 91 55 13 	lds	r26, 0x1355	; 0x801355 <mozne_barve+0x18>
    2bba:	b0 91 56 13 	lds	r27, 0x1356	; 0x801356 <mozne_barve+0x19>
    2bbe:	e7 e6       	ldi	r30, 0x67	; 103
    2bc0:	f3 e1       	ldi	r31, 0x13	; 19
    2bc2:	8d 91       	ld	r24, X+
    2bc4:	9c 91       	ld	r25, X
    2bc6:	11 97       	sbiw	r26, 0x01	; 1
    2bc8:	91 83       	std	Z+1, r25	; 0x01
    2bca:	80 83       	st	Z, r24
    2bcc:	12 96       	adiw	r26, 0x02	; 2
    2bce:	8c 91       	ld	r24, X
    2bd0:	82 83       	std	Z+2, r24	; 0x02
    for (uint8_t i = 0; i < 5; i++)
    2bd2:	c0 e0       	ldi	r28, 0x00	; 0
    2bd4:	c5 30       	cpi	r28, 0x05	; 5
    2bd6:	10 f5       	brcc	.+68     	; 0x2c1c <_Z11flash_stripv+0x70>
    {
        writeOUTPUT(r_trak,'B', 0);
    2bd8:	40 e0       	ldi	r20, 0x00	; 0
    2bda:	62 e4       	ldi	r22, 0x42	; 66
    2bdc:	84 e0       	ldi	r24, 0x04	; 4
    2bde:	8c d5       	rcall	.+2840   	; 0x36f8 <_Z11writeOUTPUThcb>
        writeOUTPUT(z_trak,'B', 0);
    2be0:	40 e0       	ldi	r20, 0x00	; 0
    2be2:	62 e4       	ldi	r22, 0x42	; 66
    2be4:	85 e0       	ldi	r24, 0x05	; 5
    2be6:	88 d5       	rcall	.+2832   	; 0x36f8 <_Z11writeOUTPUThcb>
        writeOUTPUT(m_trak,'B', 0);
    2be8:	40 e0       	ldi	r20, 0x00	; 0
    2bea:	62 e4       	ldi	r22, 0x42	; 66
    2bec:	86 e0       	ldi	r24, 0x06	; 6
    2bee:	84 d5       	rcall	.+2824   	; 0x36f8 <_Z11writeOUTPUThcb>
        delay_FRTOS(125);
    2bf0:	87 e0       	ldi	r24, 0x07	; 7
    2bf2:	90 e0       	ldi	r25, 0x00	; 0
    2bf4:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
        writeOUTPUT(r_trak,'B', 1);
    2bf8:	41 e0       	ldi	r20, 0x01	; 1
    2bfa:	62 e4       	ldi	r22, 0x42	; 66
    2bfc:	84 e0       	ldi	r24, 0x04	; 4
    2bfe:	7c d5       	rcall	.+2808   	; 0x36f8 <_Z11writeOUTPUThcb>
        writeOUTPUT(z_trak,'B', 1);
    2c00:	41 e0       	ldi	r20, 0x01	; 1
    2c02:	62 e4       	ldi	r22, 0x42	; 66
    2c04:	85 e0       	ldi	r24, 0x05	; 5
    2c06:	78 d5       	rcall	.+2800   	; 0x36f8 <_Z11writeOUTPUThcb>
        writeOUTPUT(m_trak,'B', 1);
    2c08:	41 e0       	ldi	r20, 0x01	; 1
    2c0a:	62 e4       	ldi	r22, 0x42	; 66
    2c0c:	86 e0       	ldi	r24, 0x06	; 6
    2c0e:	74 d5       	rcall	.+2792   	; 0x36f8 <_Z11writeOUTPUThcb>
    2c10:	87 e0       	ldi	r24, 0x07	; 7
        delay_FRTOS(125);
    2c12:	90 e0       	ldi	r25, 0x00	; 0
    2c14:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    2c18:	cf 5f       	subi	r28, 0xFF	; 255

void flash_strip() //Utripanje (Izhod iz scroll stata / menjava mikrofona)
{
	free(AUSYS_vars.TR_BARVA);
	memcpy(AUSYS_vars.TR_BARVA, mozne_barve.barvni_ptr[BELA], 3);
    for (uint8_t i = 0; i < 5; i++)
    2c1a:	dc cf       	rjmp	.-72     	; 0x2bd4 <_Z11flash_stripv+0x28>
    2c1c:	cf 91       	pop	r28
        writeOUTPUT(r_trak,'B', 1);
        writeOUTPUT(z_trak,'B', 1);
        writeOUTPUT(m_trak,'B', 1);
        delay_FRTOS(125);
    }
}
    2c1e:	08 95       	ret

00002c20 <_Z16color_fade_functPh>:
    2c20:	cf 92       	push	r12

void color_fade_funct(uint8_t *BARVA)
{
    2c22:	df 92       	push	r13
    2c24:	ff 92       	push	r15
    2c26:	0f 93       	push	r16
    2c28:	1f 93       	push	r17
    2c2a:	cf 93       	push	r28
    2c2c:	df 93       	push	r29
    2c2e:	ec 01       	movw	r28, r24
    while (tr_r != mozne_barve.barvni_ptr[*BARVA][0] || tr_z != mozne_barve.barvni_ptr[*BARVA][1] || tr_m != mozne_barve.barvni_ptr[*BARVA][2]) //Trenutna razlicna od zeljene
    2c30:	00 91 67 13 	lds	r16, 0x1367	; 0x801367 <AUSYS_vars+0x2>
    2c34:	10 91 68 13 	lds	r17, 0x1368	; 0x801368 <AUSYS_vars+0x3>
    2c38:	e8 81       	ld	r30, Y
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	3c 96       	adiw	r30, 0x0c	; 12
    2c3e:	ee 0f       	add	r30, r30
    2c40:	ff 1f       	adc	r31, r31
    2c42:	e3 5c       	subi	r30, 0xC3	; 195
    2c44:	fc 4e       	sbci	r31, 0xEC	; 236
    2c46:	01 90       	ld	r0, Z+
    2c48:	f0 81       	ld	r31, Z
    2c4a:	e0 2d       	mov	r30, r0
    2c4c:	80 81       	ld	r24, Z
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	08 17       	cp	r16, r24
    2c52:	19 07       	cpc	r17, r25
    2c54:	99 f4       	brne	.+38     	; 0x2c7c <_Z16color_fade_functPh+0x5c>
    2c56:	40 91 69 13 	lds	r20, 0x1369	; 0x801369 <AUSYS_vars+0x4>
    2c5a:	50 91 6a 13 	lds	r21, 0x136A	; 0x80136a <AUSYS_vars+0x5>
    2c5e:	21 81       	ldd	r18, Z+1	; 0x01
    2c60:	30 e0       	ldi	r19, 0x00	; 0
    2c62:	42 17       	cp	r20, r18
    2c64:	53 07       	cpc	r21, r19
    2c66:	51 f4       	brne	.+20     	; 0x2c7c <_Z16color_fade_functPh+0x5c>
    2c68:	40 91 6b 13 	lds	r20, 0x136B	; 0x80136b <AUSYS_vars+0x6>
    2c6c:	50 91 6c 13 	lds	r21, 0x136C	; 0x80136c <AUSYS_vars+0x7>
    2c70:	22 81       	ldd	r18, Z+2	; 0x02
    2c72:	30 e0       	ldi	r19, 0x00	; 0
    2c74:	42 17       	cp	r20, r18
    2c76:	53 07       	cpc	r21, r19
    2c78:	09 f4       	brne	.+2      	; 0x2c7c <_Z16color_fade_functPh+0x5c>
    2c7a:	ee c0       	rjmp	.+476    	; 0x2e58 <_Z16color_fade_functPh+0x238>
    {
        char smer[3] = {0, 0, 0};
        mozne_barve.barvni_ptr[*BARVA][0] >= tr_r ? smer[0] = 1 : smer[0] = -1;
    2c7c:	80 17       	cp	r24, r16
    2c7e:	91 07       	cpc	r25, r17
    2c80:	14 f0       	brlt	.+4      	; 0x2c86 <_Z16color_fade_functPh+0x66>
    2c82:	41 e0       	ldi	r20, 0x01	; 1
    2c84:	01 c0       	rjmp	.+2      	; 0x2c88 <_Z16color_fade_functPh+0x68>
    2c86:	4f ef       	ldi	r20, 0xFF	; 255
        mozne_barve.barvni_ptr[*BARVA][1] >= tr_z ? smer[1] = 1 : smer[1] = -1;
    2c88:	81 81       	ldd	r24, Z+1	; 0x01
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	c0 90 69 13 	lds	r12, 0x1369	; 0x801369 <AUSYS_vars+0x4>
    2c90:	d0 90 6a 13 	lds	r13, 0x136A	; 0x80136a <AUSYS_vars+0x5>
    2c94:	8c 15       	cp	r24, r12
    2c96:	9d 05       	cpc	r25, r13
    2c98:	14 f0       	brlt	.+4      	; 0x2c9e <_Z16color_fade_functPh+0x7e>
    2c9a:	21 e0       	ldi	r18, 0x01	; 1
    2c9c:	01 c0       	rjmp	.+2      	; 0x2ca0 <_Z16color_fade_functPh+0x80>
    2c9e:	2f ef       	ldi	r18, 0xFF	; 255
        mozne_barve.barvni_ptr[*BARVA][2] >= tr_m ? smer[2] = 1 : smer[2] = -1;
    2ca0:	82 81       	ldd	r24, Z+2	; 0x02
    2ca2:	90 e0       	ldi	r25, 0x00	; 0
    2ca4:	a0 91 6b 13 	lds	r26, 0x136B	; 0x80136b <AUSYS_vars+0x6>
    2ca8:	b0 91 6c 13 	lds	r27, 0x136C	; 0x80136c <AUSYS_vars+0x7>
    2cac:	8a 17       	cp	r24, r26
    2cae:	9b 07       	cpc	r25, r27
    2cb0:	14 f0       	brlt	.+4      	; 0x2cb6 <_Z16color_fade_functPh+0x96>
    2cb2:	91 e0       	ldi	r25, 0x01	; 1
    2cb4:	01 c0       	rjmp	.+2      	; 0x2cb8 <_Z16color_fade_functPh+0x98>
    2cb6:	9f ef       	ldi	r25, 0xFF	; 255

        tr_r = tr_r + (10 * smer[0]);
    2cb8:	f4 2e       	mov	r15, r20
    2cba:	04 2e       	mov	r0, r20
    2cbc:	00 0c       	add	r0, r0
    2cbe:	55 0b       	sbc	r21, r21
    2cc0:	ba 01       	movw	r22, r20
    2cc2:	66 0f       	add	r22, r22
    2cc4:	77 1f       	adc	r23, r23
    2cc6:	44 0f       	add	r20, r20
    2cc8:	55 1f       	adc	r21, r21
    2cca:	44 0f       	add	r20, r20
    2ccc:	55 1f       	adc	r21, r21
    2cce:	44 0f       	add	r20, r20
    2cd0:	55 1f       	adc	r21, r21
    2cd2:	64 0f       	add	r22, r20
    2cd4:	75 1f       	adc	r23, r21
    2cd6:	60 0f       	add	r22, r16
    2cd8:	71 1f       	adc	r23, r17
    2cda:	e5 e6       	ldi	r30, 0x65	; 101
    2cdc:	f3 e1       	ldi	r31, 0x13	; 19
    2cde:	73 83       	std	Z+3, r23	; 0x03
    2ce0:	62 83       	std	Z+2, r22	; 0x02
        tr_z = tr_z + (10 * smer[1]);
    2ce2:	12 2f       	mov	r17, r18
    2ce4:	02 2e       	mov	r0, r18
    2ce6:	00 0c       	add	r0, r0
    2ce8:	33 0b       	sbc	r19, r19
    2cea:	a9 01       	movw	r20, r18
    2cec:	44 0f       	add	r20, r20
    2cee:	55 1f       	adc	r21, r21
    2cf0:	22 0f       	add	r18, r18
    2cf2:	33 1f       	adc	r19, r19
    2cf4:	22 0f       	add	r18, r18
    2cf6:	33 1f       	adc	r19, r19
    2cf8:	22 0f       	add	r18, r18
    2cfa:	33 1f       	adc	r19, r19
    2cfc:	24 0f       	add	r18, r20
    2cfe:	35 1f       	adc	r19, r21
    2d00:	a6 01       	movw	r20, r12
    2d02:	42 0f       	add	r20, r18
    2d04:	53 1f       	adc	r21, r19
    2d06:	55 83       	std	Z+5, r21	; 0x05
    2d08:	44 83       	std	Z+4, r20	; 0x04
        tr_m = tr_m + (10 * smer[2]);
    2d0a:	09 2f       	mov	r16, r25
    2d0c:	89 2f       	mov	r24, r25
    2d0e:	99 0f       	add	r25, r25
    2d10:	99 0b       	sbc	r25, r25
    2d12:	6c 01       	movw	r12, r24
    2d14:	cc 0c       	add	r12, r12
    2d16:	dd 1c       	adc	r13, r13
    2d18:	9c 01       	movw	r18, r24
    2d1a:	22 0f       	add	r18, r18
    2d1c:	33 1f       	adc	r19, r19
    2d1e:	22 0f       	add	r18, r18
    2d20:	33 1f       	adc	r19, r19
    2d22:	22 0f       	add	r18, r18
    2d24:	33 1f       	adc	r19, r19
    2d26:	c6 01       	movw	r24, r12
    2d28:	82 0f       	add	r24, r18
    2d2a:	93 1f       	adc	r25, r19
    2d2c:	8a 0f       	add	r24, r26
    2d2e:	9b 1f       	adc	r25, r27
    2d30:	97 83       	std	Z+7, r25	; 0x07
    2d32:	86 83       	std	Z+6, r24	; 0x06

        //Preveri prenihaj:

        smer[0] == 1 && tr_r > mozne_barve.barvni_ptr[*BARVA][0] ? tr_r = mozne_barve.barvni_ptr[*BARVA][0] : NULL; //Ce je bila trenutna barva pod zeljeno ali na zeljeni in je zdaj trenudna nad zeljeno, se nastavi na zeljeno (prenihaj)
    2d34:	21 e0       	ldi	r18, 0x01	; 1
    2d36:	f2 12       	cpse	r15, r18
    2d38:	13 c0       	rjmp	.+38     	; 0x2d60 <_Z16color_fade_functPh+0x140>
    2d3a:	e8 81       	ld	r30, Y
    2d3c:	f0 e0       	ldi	r31, 0x00	; 0
    2d3e:	3c 96       	adiw	r30, 0x0c	; 12
    2d40:	ee 0f       	add	r30, r30
    2d42:	ff 1f       	adc	r31, r31
    2d44:	e3 5c       	subi	r30, 0xC3	; 195
    2d46:	fc 4e       	sbci	r31, 0xEC	; 236
    2d48:	01 90       	ld	r0, Z+
    2d4a:	f0 81       	ld	r31, Z
    2d4c:	e0 2d       	mov	r30, r0
    2d4e:	20 81       	ld	r18, Z
    2d50:	30 e0       	ldi	r19, 0x00	; 0
    2d52:	26 17       	cp	r18, r22
    2d54:	37 07       	cpc	r19, r23
    2d56:	24 f4       	brge	.+8      	; 0x2d60 <_Z16color_fade_functPh+0x140>
    2d58:	30 93 68 13 	sts	0x1368, r19	; 0x801368 <AUSYS_vars+0x3>
    2d5c:	20 93 67 13 	sts	0x1367, r18	; 0x801367 <AUSYS_vars+0x2>
        smer[1] == 1 && tr_z > mozne_barve.barvni_ptr[*BARVA][1] ? tr_z = mozne_barve.barvni_ptr[*BARVA][1] : NULL;
    2d60:	11 30       	cpi	r17, 0x01	; 1
    2d62:	99 f4       	brne	.+38     	; 0x2d8a <_Z16color_fade_functPh+0x16a>
    2d64:	e8 81       	ld	r30, Y
    2d66:	f0 e0       	ldi	r31, 0x00	; 0
    2d68:	3c 96       	adiw	r30, 0x0c	; 12
    2d6a:	ee 0f       	add	r30, r30
    2d6c:	ff 1f       	adc	r31, r31
    2d6e:	e3 5c       	subi	r30, 0xC3	; 195
    2d70:	fc 4e       	sbci	r31, 0xEC	; 236
    2d72:	01 90       	ld	r0, Z+
    2d74:	f0 81       	ld	r31, Z
    2d76:	e0 2d       	mov	r30, r0
    2d78:	21 81       	ldd	r18, Z+1	; 0x01
    2d7a:	30 e0       	ldi	r19, 0x00	; 0
    2d7c:	24 17       	cp	r18, r20
    2d7e:	35 07       	cpc	r19, r21
    2d80:	24 f4       	brge	.+8      	; 0x2d8a <_Z16color_fade_functPh+0x16a>
    2d82:	30 93 6a 13 	sts	0x136A, r19	; 0x80136a <AUSYS_vars+0x5>
    2d86:	20 93 69 13 	sts	0x1369, r18	; 0x801369 <AUSYS_vars+0x4>
        smer[2] == 1 && tr_m > mozne_barve.barvni_ptr[*BARVA][2] ? tr_m = mozne_barve.barvni_ptr[*BARVA][2] : NULL;
    2d8a:	01 30       	cpi	r16, 0x01	; 1
    2d8c:	99 f4       	brne	.+38     	; 0x2db4 <_Z16color_fade_functPh+0x194>
    2d8e:	e8 81       	ld	r30, Y
    2d90:	f0 e0       	ldi	r31, 0x00	; 0
    2d92:	3c 96       	adiw	r30, 0x0c	; 12
    2d94:	ee 0f       	add	r30, r30
    2d96:	ff 1f       	adc	r31, r31
    2d98:	e3 5c       	subi	r30, 0xC3	; 195
    2d9a:	fc 4e       	sbci	r31, 0xEC	; 236
    2d9c:	01 90       	ld	r0, Z+
    2d9e:	f0 81       	ld	r31, Z
    2da0:	e0 2d       	mov	r30, r0
    2da2:	22 81       	ldd	r18, Z+2	; 0x02
    2da4:	30 e0       	ldi	r19, 0x00	; 0
    2da6:	28 17       	cp	r18, r24
    2da8:	39 07       	cpc	r19, r25
    2daa:	24 f4       	brge	.+8      	; 0x2db4 <_Z16color_fade_functPh+0x194>
    2dac:	30 93 6c 13 	sts	0x136C, r19	; 0x80136c <AUSYS_vars+0x7>
    2db0:	20 93 6b 13 	sts	0x136B, r18	; 0x80136b <AUSYS_vars+0x6>

        smer[0] == -1 && tr_r < mozne_barve.barvni_ptr[*BARVA][0] ? tr_r = mozne_barve.barvni_ptr[*BARVA][0] : NULL;
    2db4:	8f ef       	ldi	r24, 0xFF	; 255
    2db6:	f8 12       	cpse	r15, r24
    2db8:	17 c0       	rjmp	.+46     	; 0x2de8 <_Z16color_fade_functPh+0x1c8>
    2dba:	20 91 67 13 	lds	r18, 0x1367	; 0x801367 <AUSYS_vars+0x2>
    2dbe:	30 91 68 13 	lds	r19, 0x1368	; 0x801368 <AUSYS_vars+0x3>
    2dc2:	e8 81       	ld	r30, Y
    2dc4:	f0 e0       	ldi	r31, 0x00	; 0
    2dc6:	3c 96       	adiw	r30, 0x0c	; 12
    2dc8:	ee 0f       	add	r30, r30
    2dca:	ff 1f       	adc	r31, r31
    2dcc:	e3 5c       	subi	r30, 0xC3	; 195
    2dce:	fc 4e       	sbci	r31, 0xEC	; 236
    2dd0:	01 90       	ld	r0, Z+
    2dd2:	f0 81       	ld	r31, Z
    2dd4:	e0 2d       	mov	r30, r0
    2dd6:	80 81       	ld	r24, Z
    2dd8:	90 e0       	ldi	r25, 0x00	; 0
    2dda:	28 17       	cp	r18, r24
    2ddc:	39 07       	cpc	r19, r25
    2dde:	24 f4       	brge	.+8      	; 0x2de8 <_Z16color_fade_functPh+0x1c8>
    2de0:	90 93 68 13 	sts	0x1368, r25	; 0x801368 <AUSYS_vars+0x3>
    2de4:	80 93 67 13 	sts	0x1367, r24	; 0x801367 <AUSYS_vars+0x2>
        smer[1] == -1 && tr_z < mozne_barve.barvni_ptr[*BARVA][1] ? tr_z = mozne_barve.barvni_ptr[*BARVA][1] : NULL;
    2de8:	1f 3f       	cpi	r17, 0xFF	; 255
    2dea:	b9 f4       	brne	.+46     	; 0x2e1a <_Z16color_fade_functPh+0x1fa>
    2dec:	20 91 69 13 	lds	r18, 0x1369	; 0x801369 <AUSYS_vars+0x4>
    2df0:	30 91 6a 13 	lds	r19, 0x136A	; 0x80136a <AUSYS_vars+0x5>
    2df4:	e8 81       	ld	r30, Y
    2df6:	f0 e0       	ldi	r31, 0x00	; 0
    2df8:	3c 96       	adiw	r30, 0x0c	; 12
    2dfa:	ee 0f       	add	r30, r30
    2dfc:	ff 1f       	adc	r31, r31
    2dfe:	e3 5c       	subi	r30, 0xC3	; 195
    2e00:	fc 4e       	sbci	r31, 0xEC	; 236
    2e02:	01 90       	ld	r0, Z+
    2e04:	f0 81       	ld	r31, Z
    2e06:	e0 2d       	mov	r30, r0
    2e08:	81 81       	ldd	r24, Z+1	; 0x01
    2e0a:	90 e0       	ldi	r25, 0x00	; 0
    2e0c:	28 17       	cp	r18, r24
    2e0e:	39 07       	cpc	r19, r25
    2e10:	24 f4       	brge	.+8      	; 0x2e1a <_Z16color_fade_functPh+0x1fa>
    2e12:	90 93 6a 13 	sts	0x136A, r25	; 0x80136a <AUSYS_vars+0x5>
    2e16:	80 93 69 13 	sts	0x1369, r24	; 0x801369 <AUSYS_vars+0x4>
        smer[2] == -1 && tr_m < mozne_barve.barvni_ptr[*BARVA][2] ? tr_m = mozne_barve.barvni_ptr[*BARVA][2] : NULL;
    2e1a:	0f 3f       	cpi	r16, 0xFF	; 255
    2e1c:	b9 f4       	brne	.+46     	; 0x2e4c <_Z16color_fade_functPh+0x22c>
    2e1e:	20 91 6b 13 	lds	r18, 0x136B	; 0x80136b <AUSYS_vars+0x6>
    2e22:	30 91 6c 13 	lds	r19, 0x136C	; 0x80136c <AUSYS_vars+0x7>
    2e26:	e8 81       	ld	r30, Y
    2e28:	f0 e0       	ldi	r31, 0x00	; 0
    2e2a:	3c 96       	adiw	r30, 0x0c	; 12
    2e2c:	ee 0f       	add	r30, r30
    2e2e:	ff 1f       	adc	r31, r31
    2e30:	e3 5c       	subi	r30, 0xC3	; 195
    2e32:	fc 4e       	sbci	r31, 0xEC	; 236
    2e34:	01 90       	ld	r0, Z+
    2e36:	f0 81       	ld	r31, Z
    2e38:	e0 2d       	mov	r30, r0
    2e3a:	82 81       	ldd	r24, Z+2	; 0x02
    2e3c:	90 e0       	ldi	r25, 0x00	; 0
    2e3e:	28 17       	cp	r18, r24
    2e40:	39 07       	cpc	r19, r25
    2e42:	24 f4       	brge	.+8      	; 0x2e4c <_Z16color_fade_functPh+0x22c>
    2e44:	90 93 6c 13 	sts	0x136C, r25	; 0x80136c <AUSYS_vars+0x7>
    2e48:	80 93 6b 13 	sts	0x136B, r24	; 0x80136b <AUSYS_vars+0x6>

        writeTRAK();
    2e4c:	34 de       	rcall	.-920    	; 0x2ab6 <_Z9writeTRAKv>
        delay_FRTOS(5);
    2e4e:	80 e0       	ldi	r24, 0x00	; 0
    2e50:	90 e0       	ldi	r25, 0x00	; 0
    2e52:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    }
}

void color_fade_funct(uint8_t *BARVA)
{
    while (tr_r != mozne_barve.barvni_ptr[*BARVA][0] || tr_z != mozne_barve.barvni_ptr[*BARVA][1] || tr_m != mozne_barve.barvni_ptr[*BARVA][2]) //Trenutna razlicna od zeljene
    2e56:	ec ce       	rjmp	.-552    	; 0x2c30 <_Z16color_fade_functPh+0x10>
        smer[2] == -1 && tr_m < mozne_barve.barvni_ptr[*BARVA][2] ? tr_m = mozne_barve.barvni_ptr[*BARVA][2] : NULL;

        writeTRAK();
        delay_FRTOS(5);
    }
}
    2e58:	df 91       	pop	r29
    2e5a:	cf 91       	pop	r28
    2e5c:	1f 91       	pop	r17
    2e5e:	0f 91       	pop	r16
    2e60:	ff 90       	pop	r15
    2e62:	df 90       	pop	r13
    2e64:	cf 90       	pop	r12
    2e66:	08 95       	ret

00002e68 <_Z18svetlost_mod_functch>:

void svetlost_mod_funct(char smer, uint8_t cas_krog)
{
    2e68:	cf 93       	push	r28
    2e6a:	df 93       	push	r29
    2e6c:	c8 2f       	mov	r28, r24
    2e6e:	d6 2f       	mov	r29, r22
    2e70:	2f ef       	ldi	r18, 0xFF	; 255
    2e72:	83 ec       	ldi	r24, 0xC3	; 195
    2e74:	99 e0       	ldi	r25, 0x09	; 9
    2e76:	21 50       	subi	r18, 0x01	; 1
    2e78:	80 40       	sbci	r24, 0x00	; 0
    2e7a:	90 40       	sbci	r25, 0x00	; 0
    2e7c:	e1 f7       	brne	.-8      	; 0x2e76 <_Z18svetlost_mod_functch+0xe>
    2e7e:	00 c0       	rjmp	.+0      	; 0x2e80 <_Z18svetlost_mod_functch+0x18>
    2e80:	00 00       	nop
	_delay_ms(200);
    while (smer > 0 ? tr_bright < 255 : tr_bright > 0)
    2e82:	1c 16       	cp	r1, r28
    2e84:	54 f4       	brge	.+20     	; 0x2e9a <_Z18svetlost_mod_functch+0x32>
    2e86:	20 91 6d 13 	lds	r18, 0x136D	; 0x80136d <AUSYS_vars+0x8>
    2e8a:	30 91 6e 13 	lds	r19, 0x136E	; 0x80136e <AUSYS_vars+0x9>
    2e8e:	81 e0       	ldi	r24, 0x01	; 1
    2e90:	2f 3f       	cpi	r18, 0xFF	; 255
    2e92:	31 05       	cpc	r19, r1
    2e94:	5c f0       	brlt	.+22     	; 0x2eac <_Z18svetlost_mod_functch+0x44>
    2e96:	80 e0       	ldi	r24, 0x00	; 0
    2e98:	09 c0       	rjmp	.+18     	; 0x2eac <_Z18svetlost_mod_functch+0x44>
    2e9a:	20 91 6d 13 	lds	r18, 0x136D	; 0x80136d <AUSYS_vars+0x8>
    2e9e:	30 91 6e 13 	lds	r19, 0x136E	; 0x80136e <AUSYS_vars+0x9>
    2ea2:	81 e0       	ldi	r24, 0x01	; 1
    2ea4:	12 16       	cp	r1, r18
    2ea6:	13 06       	cpc	r1, r19
    2ea8:	0c f0       	brlt	.+2      	; 0x2eac <_Z18svetlost_mod_functch+0x44>
    2eaa:	80 e0       	ldi	r24, 0x00	; 0
    2eac:	88 23       	and	r24, r24
    2eae:	f9 f0       	breq	.+62     	; 0x2eee <_Z18svetlost_mod_functch+0x86>
    {
        tr_bright += 8 * smer;
    2eb0:	80 91 6d 13 	lds	r24, 0x136D	; 0x80136d <AUSYS_vars+0x8>
    2eb4:	90 91 6e 13 	lds	r25, 0x136E	; 0x80136e <AUSYS_vars+0x9>
        tr_bright = tr_bright < 0 ? 0 : tr_bright;
    2eb8:	28 e0       	ldi	r18, 0x08	; 8
    2eba:	c2 02       	muls	r28, r18
    2ebc:	80 0d       	add	r24, r0
    2ebe:	91 1d       	adc	r25, r1
    2ec0:	11 24       	eor	r1, r1
    2ec2:	99 23       	and	r25, r25
    2ec4:	14 f4       	brge	.+4      	; 0x2eca <_Z18svetlost_mod_functch+0x62>
    2ec6:	80 e0       	ldi	r24, 0x00	; 0
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
        tr_bright = tr_bright > 255 ? 255 : tr_bright;
    2eca:	8f 3f       	cpi	r24, 0xFF	; 255
    2ecc:	91 05       	cpc	r25, r1
    2ece:	19 f0       	breq	.+6      	; 0x2ed6 <_Z18svetlost_mod_functch+0x6e>
    2ed0:	14 f0       	brlt	.+4      	; 0x2ed6 <_Z18svetlost_mod_functch+0x6e>
    2ed2:	8f ef       	ldi	r24, 0xFF	; 255
    2ed4:	90 e0       	ldi	r25, 0x00	; 0
    2ed6:	90 93 6e 13 	sts	0x136E, r25	; 0x80136e <AUSYS_vars+0x9>
    2eda:	80 93 6d 13 	sts	0x136D, r24	; 0x80136d <AUSYS_vars+0x8>
        writeTRAK();
    2ede:	eb dd       	rcall	.-1066   	; 0x2ab6 <_Z9writeTRAKv>
        delay_FRTOS(cas_krog);
    2ee0:	8d 2f       	mov	r24, r29
    2ee2:	82 95       	swap	r24
    2ee4:	8f 70       	andi	r24, 0x0F	; 15
    2ee6:	90 e0       	ldi	r25, 0x00	; 0
    2ee8:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
}

void svetlost_mod_funct(char smer, uint8_t cas_krog)
{
	_delay_ms(200);
    while (smer > 0 ? tr_bright < 255 : tr_bright > 0)
    2eec:	ca cf       	rjmp	.-108    	; 0x2e82 <_Z18svetlost_mod_functch+0x1a>
        tr_bright = tr_bright < 0 ? 0 : tr_bright;
        tr_bright = tr_bright > 255 ? 255 : tr_bright;
        writeTRAK();
        delay_FRTOS(cas_krog);
    }
}
    2eee:	df 91       	pop	r29
    2ef0:	cf 91       	pop	r28
    2ef2:	08 95       	ret

00002ef4 <_Z14strip_mode_chgPc>:

void strip_mode_chg(char *ch)
{
    if (ch == "off")
    2ef4:	8e 55       	subi	r24, 0x5E	; 94
    2ef6:	92 40       	sbci	r25, 0x02	; 2
    2ef8:	39 f4       	brne	.+14     	; 0x2f08 <_Z14strip_mode_chgPc+0x14>
        trenutni_audio_mode = OFF_A;
    2efa:	84 e0       	ldi	r24, 0x04	; 4
    2efc:	90 e0       	ldi	r25, 0x00	; 0
    2efe:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <AUSYS_vars+0x1>
    2f02:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <AUSYS_vars>
    2f06:	22 c0       	rjmp	.+68     	; 0x2f4c <_Z14strip_mode_chgPc+0x58>

    else if (trenutni_audio_mode == OFF_A)
    2f08:	20 91 65 13 	lds	r18, 0x1365	; 0x801365 <AUSYS_vars>
    2f0c:	30 91 66 13 	lds	r19, 0x1366	; 0x801366 <AUSYS_vars+0x1>
    2f10:	24 30       	cpi	r18, 0x04	; 4
    2f12:	31 05       	cpc	r19, r1
    2f14:	29 f4       	brne	.+10     	; 0x2f20 <_Z14strip_mode_chgPc+0x2c>
        trenutni_audio_mode = NORMAL_FADE;
    2f16:	10 92 66 13 	sts	0x1366, r1	; 0x801366 <AUSYS_vars+0x1>
    2f1a:	10 92 65 13 	sts	0x1365, r1	; 0x801365 <AUSYS_vars>
    2f1e:	16 c0       	rjmp	.+44     	; 0x2f4c <_Z14strip_mode_chgPc+0x58>

    else
        trenutni_audio_mode = ++trenutni_audio_mode % LENGTH_2;
    2f20:	a9 01       	movw	r20, r18
    2f22:	4f 5f       	subi	r20, 0xFF	; 255
    2f24:	5f 4f       	sbci	r21, 0xFF	; 255
    2f26:	9a 01       	movw	r18, r20
    2f28:	ab ea       	ldi	r26, 0xAB	; 171
    2f2a:	ba ea       	ldi	r27, 0xAA	; 170
    2f2c:	0e 94 46 20 	call	0x408c	; 0x408c <__umulhisi3>
    2f30:	96 95       	lsr	r25
    2f32:	87 95       	ror	r24
    2f34:	9c 01       	movw	r18, r24
    2f36:	22 0f       	add	r18, r18
    2f38:	33 1f       	adc	r19, r19
    2f3a:	82 0f       	add	r24, r18
    2f3c:	93 1f       	adc	r25, r19
    2f3e:	9a 01       	movw	r18, r20
    2f40:	28 1b       	sub	r18, r24
    2f42:	39 0b       	sbc	r19, r25
    2f44:	30 93 66 13 	sts	0x1366, r19	; 0x801366 <AUSYS_vars+0x1>
    2f48:	20 93 65 13 	sts	0x1365, r18	; 0x801365 <AUSYS_vars>
	EEPROM.pisi(audiomode_eeprom_addr, trenutni_audio_mode);
    2f4c:	40 91 65 13 	lds	r20, 0x1365	; 0x801365 <AUSYS_vars>
    2f50:	50 91 66 13 	lds	r21, 0x1366	; 0x801366 <AUSYS_vars+0x1>
    2f54:	60 e0       	ldi	r22, 0x00	; 0
    2f56:	8c e3       	ldi	r24, 0x3C	; 60
    2f58:	93 e1       	ldi	r25, 0x13	; 19
    2f5a:	70 d3       	rcall	.+1760   	; 0x363c <_ZN8EEPROM_t4pisiEhj>
    deleteALL_subAUDIO_tasks();
    2f5c:	77 cd       	rjmp	.-1298   	; 0x2a4c <_Z24deleteALL_subAUDIO_tasksv>
    2f5e:	08 95       	ret

00002f60 <_Z9fade_taskPv>:
    2f60:	cf 93       	push	r28
*                                                                                                                         *
*                                                         FADE TASKI                                                      *
*                                                                                                                         *
**************************************************************************************************************************/
void fade_task(void *BARVA) //Prizig na barbi in pocasen izklop
{
    2f62:	df 93       	push	r29
    2f64:	ec 01       	movw	r28, r24
    tr_bright = 255;
    2f66:	a5 e6       	ldi	r26, 0x65	; 101
    2f68:	b3 e1       	ldi	r27, 0x13	; 19
    2f6a:	8f ef       	ldi	r24, 0xFF	; 255
    2f6c:	90 e0       	ldi	r25, 0x00	; 0
    2f6e:	19 96       	adiw	r26, 0x09	; 9
    2f70:	9c 93       	st	X, r25
    2f72:	8e 93       	st	-X, r24
    2f74:	18 97       	sbiw	r26, 0x08	; 8
    nastavi_barve(BARVA);
    2f76:	e8 81       	ld	r30, Y
    2f78:	f0 e0       	ldi	r31, 0x00	; 0
    2f7a:	3c 96       	adiw	r30, 0x0c	; 12
    2f7c:	ee 0f       	add	r30, r30
    2f7e:	ff 1f       	adc	r31, r31
    2f80:	e3 5c       	subi	r30, 0xC3	; 195
    2f82:	fc 4e       	sbci	r31, 0xEC	; 236
    2f84:	01 90       	ld	r0, Z+
    2f86:	f0 81       	ld	r31, Z
    2f88:	e0 2d       	mov	r30, r0
    2f8a:	80 81       	ld	r24, Z
    2f8c:	90 e0       	ldi	r25, 0x00	; 0
    2f8e:	13 96       	adiw	r26, 0x03	; 3
    2f90:	9c 93       	st	X, r25
    2f92:	8e 93       	st	-X, r24
    2f94:	12 97       	sbiw	r26, 0x02	; 2
    2f96:	e8 81       	ld	r30, Y
    2f98:	f0 e0       	ldi	r31, 0x00	; 0
    2f9a:	3c 96       	adiw	r30, 0x0c	; 12
    2f9c:	ee 0f       	add	r30, r30
    2f9e:	ff 1f       	adc	r31, r31
    2fa0:	e3 5c       	subi	r30, 0xC3	; 195
    2fa2:	fc 4e       	sbci	r31, 0xEC	; 236
    2fa4:	01 90       	ld	r0, Z+
    2fa6:	f0 81       	ld	r31, Z
    2fa8:	e0 2d       	mov	r30, r0
    2faa:	81 81       	ldd	r24, Z+1	; 0x01
    2fac:	90 e0       	ldi	r25, 0x00	; 0
    2fae:	15 96       	adiw	r26, 0x05	; 5
    2fb0:	9c 93       	st	X, r25
    2fb2:	8e 93       	st	-X, r24
    2fb4:	14 97       	sbiw	r26, 0x04	; 4
    2fb6:	e8 81       	ld	r30, Y
    2fb8:	f0 e0       	ldi	r31, 0x00	; 0
    2fba:	3c 96       	adiw	r30, 0x0c	; 12
    2fbc:	ee 0f       	add	r30, r30
    2fbe:	ff 1f       	adc	r31, r31
    2fc0:	e3 5c       	subi	r30, 0xC3	; 195
    2fc2:	fc 4e       	sbci	r31, 0xEC	; 236
    2fc4:	01 90       	ld	r0, Z+
    2fc6:	f0 81       	ld	r31, Z
    2fc8:	e0 2d       	mov	r30, r0
    2fca:	82 81       	ldd	r24, Z+2	; 0x02
    2fcc:	90 e0       	ldi	r25, 0x00	; 0
    2fce:	17 96       	adiw	r26, 0x07	; 7
    2fd0:	9c 93       	st	X, r25
    2fd2:	8e 93       	st	-X, r24
    2fd4:	16 97       	sbiw	r26, 0x06	; 6

    brightDOWN(15);
    2fd6:	6f e0       	ldi	r22, 0x0F	; 15
    2fd8:	8f ef       	ldi	r24, 0xFF	; 255
    2fda:	46 df       	rcall	.-372    	; 0x2e68 <_Z18svetlost_mod_functch>

    fade_control = NULL;
    2fdc:	10 92 09 13 	sts	0x1309, r1	; 0x801309 <fade_control+0x1>
    2fe0:	10 92 08 13 	sts	0x1308, r1	; 0x801308 <fade_control>
    vTaskDelete(NULL);
    2fe4:	80 e0       	ldi	r24, 0x00	; 0
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
}
    2fec:	df 91       	pop	r29
    2fee:	cf 91       	pop	r28
    2ff0:	08 95       	ret

00002ff2 <_Z15Color_Fade_taskPv>:

void Color_Fade_task(void *BARVA) //Fade iz ene barve v drugo
{

    if (Breathe_control == NULL) // Ce diha on ne sme nastaviti svetlosti,
    2ff2:	20 91 04 13 	lds	r18, 0x1304	; 0x801304 <Breathe_control>
    2ff6:	30 91 05 13 	lds	r19, 0x1305	; 0x801305 <Breathe_control+0x1>
    2ffa:	23 2b       	or	r18, r19
    2ffc:	31 f4       	brne	.+12     	; 0x300a <_Z15Color_Fade_taskPv+0x18>
    {                            // saj jo nastavlja dihalni task
        tr_bright = 255;
    2ffe:	2f ef       	ldi	r18, 0xFF	; 255
    3000:	30 e0       	ldi	r19, 0x00	; 0
    3002:	30 93 6e 13 	sts	0x136E, r19	; 0x80136e <AUSYS_vars+0x9>
    3006:	20 93 6d 13 	sts	0x136D, r18	; 0x80136d <AUSYS_vars+0x8>
    }

    colorSHIFT(BARVA); //prehod iz ene barve v drugo
    300a:	0a de       	rcall	.-1004   	; 0x2c20 <_Z16color_fade_functPh>
    color_fade_control = NULL;
    300c:	10 92 07 13 	sts	0x1307, r1	; 0x801307 <color_fade_control+0x1>
    3010:	10 92 06 13 	sts	0x1306, r1	; 0x801306 <color_fade_control>
    vTaskDelete(NULL);
    3014:	80 e0       	ldi	r24, 0x00	; 0
    3016:	90 e0       	ldi	r25, 0x00	; 0
    3018:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <vTaskDelete>
    301c:	08 95       	ret

0000301e <_Z17Fade_Breathe_TaskPv>:
}

void Fade_Breathe_Task(void *BARVA)
{
    301e:	cf 93       	push	r28
    3020:	df 93       	push	r29
    if (color_fade_control == NULL)
    3022:	20 91 06 13 	lds	r18, 0x1306	; 0x801306 <color_fade_control>
    3026:	30 91 07 13 	lds	r19, 0x1307	; 0x801307 <color_fade_control+0x1>
    302a:	23 2b       	or	r18, r19
    302c:	a1 f5       	brne	.+104    	; 0x3096 <_Z17Fade_Breathe_TaskPv+0x78>
    {
        nastavi_barve(BARVA);
    302e:	dc 01       	movw	r26, r24
    3030:	ec 91       	ld	r30, X
    3032:	f0 e0       	ldi	r31, 0x00	; 0
    3034:	3c 96       	adiw	r30, 0x0c	; 12
    3036:	ee 0f       	add	r30, r30
    3038:	ff 1f       	adc	r31, r31
    303a:	e3 5c       	subi	r30, 0xC3	; 195
    303c:	fc 4e       	sbci	r31, 0xEC	; 236
    303e:	01 90       	ld	r0, Z+
    3040:	f0 81       	ld	r31, Z
    3042:	e0 2d       	mov	r30, r0
    3044:	20 81       	ld	r18, Z
    3046:	a5 e6       	ldi	r26, 0x65	; 101
    3048:	b3 e1       	ldi	r27, 0x13	; 19
    304a:	30 e0       	ldi	r19, 0x00	; 0
    304c:	13 96       	adiw	r26, 0x03	; 3
    304e:	3c 93       	st	X, r19
    3050:	2e 93       	st	-X, r18
    3052:	12 97       	sbiw	r26, 0x02	; 2
    3054:	ec 01       	movw	r28, r24
    3056:	e8 81       	ld	r30, Y
    3058:	f0 e0       	ldi	r31, 0x00	; 0
    305a:	3c 96       	adiw	r30, 0x0c	; 12
    305c:	ee 0f       	add	r30, r30
    305e:	ff 1f       	adc	r31, r31
    3060:	e3 5c       	subi	r30, 0xC3	; 195
    3062:	fc 4e       	sbci	r31, 0xEC	; 236
    3064:	01 90       	ld	r0, Z+
    3066:	f0 81       	ld	r31, Z
    3068:	e0 2d       	mov	r30, r0
    306a:	21 81       	ldd	r18, Z+1	; 0x01
    306c:	30 e0       	ldi	r19, 0x00	; 0
    306e:	15 96       	adiw	r26, 0x05	; 5
    3070:	3c 93       	st	X, r19
    3072:	2e 93       	st	-X, r18
    3074:	14 97       	sbiw	r26, 0x04	; 4
    3076:	e8 81       	ld	r30, Y
    3078:	f0 e0       	ldi	r31, 0x00	; 0
    307a:	3c 96       	adiw	r30, 0x0c	; 12
    307c:	ee 0f       	add	r30, r30
    307e:	ff 1f       	adc	r31, r31
    3080:	e3 5c       	subi	r30, 0xC3	; 195
    3082:	fc 4e       	sbci	r31, 0xEC	; 236
    3084:	01 90       	ld	r0, Z+
    3086:	f0 81       	ld	r31, Z
    3088:	e0 2d       	mov	r30, r0
    308a:	82 81       	ldd	r24, Z+2	; 0x02
    308c:	90 e0       	ldi	r25, 0x00	; 0
    308e:	17 96       	adiw	r26, 0x07	; 7
    3090:	9c 93       	st	X, r25
    3092:	8e 93       	st	-X, r24
    3094:	16 97       	sbiw	r26, 0x06	; 6
    }
    brightUP(7);
    3096:	67 e0       	ldi	r22, 0x07	; 7
    3098:	81 e0       	ldi	r24, 0x01	; 1
    309a:	e6 de       	rcall	.-564    	; 0x2e68 <_Z18svetlost_mod_functch>
    brightDOWN(7);
    309c:	67 e0       	ldi	r22, 0x07	; 7
    309e:	8f ef       	ldi	r24, 0xFF	; 255
    30a0:	e3 de       	rcall	.-570    	; 0x2e68 <_Z18svetlost_mod_functch>
    Breathe_control = NULL;
    30a2:	10 92 05 13 	sts	0x1305, r1	; 0x801305 <Breathe_control+0x1>
    30a6:	10 92 04 13 	sts	0x1304, r1	; 0x801304 <Breathe_control>
    vTaskDelete(NULL);
    30aa:	80 e0       	ldi	r24, 0x00	; 0
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	0e 94 ac 09 	call	0x1358	; 0x1358 <vTaskDelete>
}
    30b2:	df 91       	pop	r29
    30b4:	cf 91       	pop	r28
    30b6:	08 95       	ret

000030b8 <_Z41__static_initialization_and_destruction_0ii>:
{
	trenutni_audio_mode = EEPROM.beri(audiomode_eeprom_addr);
	writeOUTPUT(_12V_line, 'B', 1); // izklopi izhod
	writeOUTPUT(main_mosfet_pin, 'H', 1);
	Hardware.is_Powered_UP = true;
}
    30b8:	01 97       	sbiw	r24, 0x01	; 1
    30ba:	b1 f4       	brne	.+44     	; 0x30e8 <_Z41__static_initialization_and_destruction_0ii+0x30>
    30bc:	6f 3f       	cpi	r22, 0xFF	; 255
    30be:	7f 4f       	sbci	r23, 0xFF	; 255
    30c0:	99 f4       	brne	.+38     	; 0x30e8 <_Z41__static_initialization_and_destruction_0ii+0x30>
    bool risingEdge();
    bool fallingEdge();

    VHOD(int pin, char port, int default_state)
    {
        this->port = port;
    30c2:	eb e1       	ldi	r30, 0x1B	; 27
    30c4:	f3 e1       	ldi	r31, 0x13	; 19
    30c6:	84 e4       	ldi	r24, 0x44	; 68
    30c8:	86 83       	std	Z+6, r24	; 0x06
        this->pin = pin;
    30ca:	22 e0       	ldi	r18, 0x02	; 2
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	35 83       	std	Z+5, r19	; 0x05
    30d0:	24 83       	std	Z+4, r18	; 0x04
        this->default_state = default_state;
    30d2:	10 86       	std	Z+8, r1	; 0x08
    30d4:	17 82       	std	Z+7, r1	; 0x07
    bool risingEdge();
    bool fallingEdge();

    VHOD(int pin, char port, int default_state)
    {
        this->port = port;
    30d6:	e2 e1       	ldi	r30, 0x12	; 18
    30d8:	f3 e1       	ldi	r31, 0x13	; 19
    30da:	86 83       	std	Z+6, r24	; 0x06
        this->pin = pin;
    30dc:	84 e0       	ldi	r24, 0x04	; 4
    30de:	90 e0       	ldi	r25, 0x00	; 0
    30e0:	95 83       	std	Z+5, r25	; 0x05
    30e2:	84 83       	std	Z+4, r24	; 0x04
        this->default_state = default_state;
    30e4:	10 86       	std	Z+8, r1	; 0x08
    30e6:	17 82       	std	Z+7, r1	; 0x07
    30e8:	08 95       	ret

000030ea <_Z8Shutdownv>:
	}
}

void Shutdown()
{
	writeOUTPUT(_12V_line, 'B', 0); // izklopi izhod
    30ea:	40 e0       	ldi	r20, 0x00	; 0
    30ec:	62 e4       	ldi	r22, 0x42	; 66
    30ee:	87 e0       	ldi	r24, 0x07	; 7
    30f0:	03 d3       	rcall	.+1542   	; 0x36f8 <_Z11writeOUTPUThcb>
	writeOUTPUT(main_mosfet_pin, 'H', 0);
    30f2:	40 e0       	ldi	r20, 0x00	; 0
    30f4:	68 e4       	ldi	r22, 0x48	; 72
    30f6:	83 e0       	ldi	r24, 0x03	; 3
    30f8:	ff d2       	rcall	.+1534   	; 0x36f8 <_Z11writeOUTPUThcb>
	Hardware.is_Powered_UP = false;
    30fa:	10 92 a4 13 	sts	0x13A4, r1	; 0x8013a4 <Hardware+0x8>
	trenutni_audio_mode = OFF_A;
    30fe:	84 e0       	ldi	r24, 0x04	; 4
    3100:	90 e0       	ldi	r25, 0x00	; 0
    3102:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <AUSYS_vars+0x1>
    3106:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <AUSYS_vars>
    310a:	08 95       	ret

0000310c <_Z8Power_UPv>:
}

void Power_UP()
{
	trenutni_audio_mode = EEPROM.beri(audiomode_eeprom_addr);
    310c:	60 e0       	ldi	r22, 0x00	; 0
    310e:	70 e0       	ldi	r23, 0x00	; 0
    3110:	8c e3       	ldi	r24, 0x3C	; 60
    3112:	93 e1       	ldi	r25, 0x13	; 19
    3114:	ac d2       	rcall	.+1368   	; 0x366e <_ZN8EEPROM_t4beriEj>
    3116:	90 e0       	ldi	r25, 0x00	; 0
    3118:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <AUSYS_vars+0x1>
    311c:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <AUSYS_vars>
	writeOUTPUT(_12V_line, 'B', 1); // izklopi izhod
    3120:	41 e0       	ldi	r20, 0x01	; 1
    3122:	62 e4       	ldi	r22, 0x42	; 66
    3124:	87 e0       	ldi	r24, 0x07	; 7
    3126:	e8 d2       	rcall	.+1488   	; 0x36f8 <_Z11writeOUTPUThcb>
	writeOUTPUT(main_mosfet_pin, 'H', 1);
    3128:	41 e0       	ldi	r20, 0x01	; 1
    312a:	68 e4       	ldi	r22, 0x48	; 72
    312c:	83 e0       	ldi	r24, 0x03	; 3
    312e:	e4 d2       	rcall	.+1480   	; 0x36f8 <_Z11writeOUTPUThcb>
	Hardware.is_Powered_UP = true;
    3130:	81 e0       	ldi	r24, 0x01	; 1
    3132:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <Hardware+0x8>
    3136:	08 95       	ret

00003138 <_Z4corePv>:

void core(void *paramOdTaska)
{
	while (true)
	{
		if (stikalo.vrednost() == 0 && Timers.stikaloOFFtime.vrednost() > 30)	{
    3138:	82 e1       	ldi	r24, 0x12	; 18
    313a:	93 e1       	ldi	r25, 0x13	; 19
    313c:	01 d5       	rcall	.+2562   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    313e:	c8 2f       	mov	r28, r24
    3140:	81 11       	cpse	r24, r1
    3142:	0b c0       	rjmp	.+22     	; 0x315a <_Z4corePv+0x22>
    3144:	8e e7       	ldi	r24, 0x7E	; 126
    3146:	93 e1       	ldi	r25, 0x13	; 19
    3148:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    314c:	6f 31       	cpi	r22, 0x1F	; 31
    314e:	71 05       	cpc	r23, r1
    3150:	81 05       	cpc	r24, r1
    3152:	91 05       	cpc	r25, r1
    3154:	18 f0       	brcs	.+6      	; 0x315c <_Z4corePv+0x24>
    3156:	c1 e0       	ldi	r28, 0x01	; 1
    3158:	01 c0       	rjmp	.+2      	; 0x315c <_Z4corePv+0x24>
    315a:	c0 e0       	ldi	r28, 0x00	; 0
    315c:	cc 23       	and	r28, r28
    315e:	81 f0       	breq	.+32     	; 0x3180 <_Z4corePv+0x48>
			if (Hardware.is_Powered_UP)
    3160:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <Hardware+0x8>
			{
				Shutdown();
    3164:	81 11       	cpse	r24, r1
    3166:	c1 df       	rcall	.-126    	; 0x30ea <_Z8Shutdownv>
			}
			Timers.stikaloCAS.ponastavi();
    3168:	8f e6       	ldi	r24, 0x6F	; 111
    316a:	93 e1       	ldi	r25, 0x13	; 19
    316c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
			if (stikalo.fallingEdge())
    3170:	82 e1       	ldi	r24, 0x12	; 18
    3172:	93 e1       	ldi	r25, 0x13	; 19
    3174:	2c d5       	rcall	.+2648   	; 0x3bce <_ZN4VHOD11fallingEdgeEv>
    3176:	88 23       	and	r24, r24
    3178:	61 f0       	breq	.+24     	; 0x3192 <_Z4corePv+0x5a>
			{
				Hardware.AMP_oheat = false;
    317a:	10 92 a8 13 	sts	0x13A8, r1	; 0x8013a8 <Hardware+0xc>
			}
		}
		else if (stikalo.vrednost() == 1)
    317e:	09 c0       	rjmp	.+18     	; 0x3192 <_Z4corePv+0x5a>
    3180:	82 e1       	ldi	r24, 0x12	; 18
    3182:	93 e1       	ldi	r25, 0x13	; 19
    3184:	dd d4       	rcall	.+2490   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    3186:	88 23       	and	r24, r24
    3188:	21 f0       	breq	.+8      	; 0x3192 <_Z4corePv+0x5a>
		{
			Timers.stikaloOFFtime.ponastavi();
    318a:	8e e7       	ldi	r24, 0x7E	; 126
    318c:	93 e1       	ldi	r25, 0x13	; 19
    318e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
		*                                      BRANJE VOLT                                            *
		*                                                                                             *
		*                                                                                             *
		***********************************************************************************************/

			xSemaphoreTake(voltage_SEM, portMAX_DELAY); 
    3192:	6f ef       	ldi	r22, 0xFF	; 255
    3194:	7f ef       	ldi	r23, 0xFF	; 255
    3196:	80 91 f5 12 	lds	r24, 0x12F5	; 0x8012f5 <voltage_SEM>
    319a:	90 91 f6 12 	lds	r25, 0x12F6	; 0x8012f6 <voltage_SEM+0x1>
    319e:	0e 94 a4 06 	call	0xd48	; 0xd48 <xQueueSemaphoreTake>

			if (Timers.VOLT_timer.vrednost() > 500)
    31a2:	83 e8       	ldi	r24, 0x83	; 131
    31a4:	93 e1       	ldi	r25, 0x13	; 19
    31a6:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    31aa:	65 3f       	cpi	r22, 0xF5	; 245
    31ac:	71 40       	sbci	r23, 0x01	; 1
    31ae:	81 05       	cpc	r24, r1
    31b0:	91 05       	cpc	r25, r1
    31b2:	d8 f0       	brcs	.+54     	; 0x31ea <_Z4corePv+0xb2>
			{
				Timers.VOLT_timer.ponastavi();
    31b4:	83 e8       	ldi	r24, 0x83	; 131
    31b6:	93 e1       	ldi	r25, 0x13	; 19
    31b8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
				Hardware.napetost = readANALOG(vDIV_pin) * (float)Hardware.REF_mVOLT / 1023.00f;
    31bc:	82 e0       	ldi	r24, 0x02	; 2
    31be:	fc d2       	rcall	.+1528   	; 0x37b8 <_Z10readANALOGh>
    31c0:	cc e9       	ldi	r28, 0x9C	; 156
    31c2:	d3 e1       	ldi	r29, 0x13	; 19
    31c4:	c8 80       	ld	r12, Y
    31c6:	d9 80       	ldd	r13, Y+1	; 0x01
    31c8:	ea 80       	ldd	r14, Y+2	; 0x02
    31ca:	fb 80       	ldd	r15, Y+3	; 0x03
    31cc:	bc 01       	movw	r22, r24
    31ce:	80 e0       	ldi	r24, 0x00	; 0
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	06 d6       	rcall	.+3084   	; 0x3de0 <__floatunsisf>
    31d4:	a7 01       	movw	r20, r14
    31d6:	96 01       	movw	r18, r12
    31d8:	95 d6       	rcall	.+3370   	; 0x3f04 <__mulsf3>
    31da:	20 e0       	ldi	r18, 0x00	; 0
    31dc:	30 ec       	ldi	r19, 0xC0	; 192
    31de:	4f e7       	ldi	r20, 0x7F	; 127
    31e0:	54 e4       	ldi	r21, 0x44	; 68
    31e2:	6a d5       	rcall	.+2772   	; 0x3cb8 <__divsf3>
    31e4:	d1 d5       	rcall	.+2978   	; 0x3d88 <__fixunssfsi>
    31e6:	7b 8b       	std	Y+19, r23	; 0x13
    31e8:	6a 8b       	std	Y+18, r22	; 0x12
			}

			xSemaphoreGive(voltage_SEM); // Da zeleno luc ostalim taskom
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	40 e0       	ldi	r20, 0x00	; 0
    31ee:	50 e0       	ldi	r21, 0x00	; 0
    31f0:	60 e0       	ldi	r22, 0x00	; 0
    31f2:	70 e0       	ldi	r23, 0x00	; 0
    31f4:	80 91 f5 12 	lds	r24, 0x12F5	; 0x8012f5 <voltage_SEM>
    31f8:	90 91 f6 12 	lds	r25, 0x12F6	; 0x8012f6 <voltage_SEM+0x1>
    31fc:	0e 94 48 05 	call	0xa90	; 0xa90 <xQueueGenericSend>
		

		//----------------------------------------------------------------------------------------------------------------------------------
		//                                               Power UP
		//----------------------------------------------------------------------------------------------------------------------------------
		if (Timers.stikaloCAS.vrednost() >= 2000 && !Hardware.AMP_oheat && (Hardware.napetost > sleep_voltage + 50 || Hardware.PSW) && !Hardware.is_Powered_UP)
    3200:	8f e6       	ldi	r24, 0x6F	; 111
    3202:	93 e1       	ldi	r25, 0x13	; 19
    3204:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    3208:	60 3d       	cpi	r22, 0xD0	; 208
    320a:	77 40       	sbci	r23, 0x07	; 7
    320c:	81 05       	cpc	r24, r1
    320e:	91 05       	cpc	r25, r1
    3210:	a8 f0       	brcs	.+42     	; 0x323c <_Z4corePv+0x104>
    3212:	80 91 a8 13 	lds	r24, 0x13A8	; 0x8013a8 <Hardware+0xc>
    3216:	81 11       	cpse	r24, r1
    3218:	13 c0       	rjmp	.+38     	; 0x3240 <_Z4corePv+0x108>
    321a:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <Hardware+0x12>
    321e:	90 91 af 13 	lds	r25, 0x13AF	; 0x8013af <Hardware+0x13>
    3222:	87 31       	cpi	r24, 0x17	; 23
    3224:	9d 40       	sbci	r25, 0x0D	; 13
    3226:	20 f4       	brcc	.+8      	; 0x3230 <_Z4corePv+0xf8>
    3228:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <Hardware+0x9>
    322c:	88 23       	and	r24, r24
    322e:	51 f0       	breq	.+20     	; 0x3244 <_Z4corePv+0x10c>
    3230:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <Hardware+0x8>
    3234:	88 23       	and	r24, r24
    3236:	41 f0       	breq	.+16     	; 0x3248 <_Z4corePv+0x110>
    3238:	80 e0       	ldi	r24, 0x00	; 0
    323a:	07 c0       	rjmp	.+14     	; 0x324a <_Z4corePv+0x112>
    323c:	80 e0       	ldi	r24, 0x00	; 0
    323e:	05 c0       	rjmp	.+10     	; 0x324a <_Z4corePv+0x112>
    3240:	80 e0       	ldi	r24, 0x00	; 0
    3242:	03 c0       	rjmp	.+6      	; 0x324a <_Z4corePv+0x112>
    3244:	80 e0       	ldi	r24, 0x00	; 0
    3246:	01 c0       	rjmp	.+2      	; 0x324a <_Z4corePv+0x112>
    3248:	81 e0       	ldi	r24, 0x01	; 1
		{ // Elapsed 2000 ms, not overheated, enough power or (already switched to)external power and not already powered up
			Power_UP();
    324a:	81 11       	cpse	r24, r1
		}
		if (Hardware.napetost <= sleep_voltage && napajalnik.vrednost() == 0 && Hardware.napetost != 0 && Hardware.is_Powered_UP) //Če je napetost 0V, to pomeni da baterij še ni prebral ; V spanje gre pri 8% napolnjenosti
    324c:	5f df       	rcall	.-322    	; 0x310c <_Z8Power_UPv>
    324e:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <Hardware+0x12>
    3252:	90 91 af 13 	lds	r25, 0x13AF	; 0x8013af <Hardware+0x13>
    3256:	85 3e       	cpi	r24, 0xE5	; 229
    3258:	9c 40       	sbci	r25, 0x0C	; 12
    325a:	70 f4       	brcc	.+28     	; 0x3278 <_Z4corePv+0x140>
    325c:	8b e1       	ldi	r24, 0x1B	; 27
    325e:	93 e1       	ldi	r25, 0x13	; 19
    3260:	6f d4       	rcall	.+2270   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    3262:	81 11       	cpse	r24, r1
    3264:	0b c0       	rjmp	.+22     	; 0x327c <_Z4corePv+0x144>
    3266:	20 91 ae 13 	lds	r18, 0x13AE	; 0x8013ae <Hardware+0x12>
    326a:	30 91 af 13 	lds	r19, 0x13AF	; 0x8013af <Hardware+0x13>
    326e:	23 2b       	or	r18, r19
    3270:	31 f0       	breq	.+12     	; 0x327e <_Z4corePv+0x146>
    3272:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <Hardware+0x8>
    3276:	03 c0       	rjmp	.+6      	; 0x327e <_Z4corePv+0x146>
    3278:	80 e0       	ldi	r24, 0x00	; 0
    327a:	01 c0       	rjmp	.+2      	; 0x327e <_Z4corePv+0x146>
    327c:	80 e0       	ldi	r24, 0x00	; 0
		{
			Shutdown();
    327e:	81 11       	cpse	r24, r1
    3280:	34 df       	rcall	.-408    	; 0x30ea <_Z8Shutdownv>
		}
		delay_FRTOS(100);
    3282:	86 e0       	ldi	r24, 0x06	; 6
    3284:	90 e0       	ldi	r25, 0x00	; 0
    3286:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
void audio_visual();
/* *********************************************************************** */

void core(void *paramOdTaska)
{
	while (true)
    328a:	56 cf       	rjmp	.-340    	; 0x3138 <_Z4corePv>

0000328c <_GLOBAL__sub_I_napajalnik>:
{
	trenutni_audio_mode = EEPROM.beri(audiomode_eeprom_addr);
	writeOUTPUT(_12V_line, 'B', 1); // izklopi izhod
	writeOUTPUT(main_mosfet_pin, 'H', 1);
	Hardware.is_Powered_UP = true;
}
    328c:	6f ef       	ldi	r22, 0xFF	; 255
    328e:	7f ef       	ldi	r23, 0xFF	; 255
    3290:	81 e0       	ldi	r24, 0x01	; 1
    3292:	90 e0       	ldi	r25, 0x00	; 0
    3294:	11 cf       	rjmp	.-478    	; 0x30b8 <_Z41__static_initialization_and_destruction_0ii>
    3296:	08 95       	ret

00003298 <_Z41__static_initialization_and_destruction_0ii>:
    PORTD &= ~(1 << 7);
    Timers.stikaloCAS.ponastavi();
    _delay_ms(20);
    Hardware.PSW = false;
    taskEXIT_CRITICAL();
}
    3298:	01 97       	sbiw	r24, 0x01	; 1
    329a:	a1 f4       	brne	.+40     	; 0x32c4 <_Z41__static_initialization_and_destruction_0ii+0x2c>
    329c:	6f 3f       	cpi	r22, 0xFF	; 255
    329e:	7f 4f       	sbci	r23, 0xFF	; 255
    32a0:	89 f4       	brne	.+34     	; 0x32c4 <_Z41__static_initialization_and_destruction_0ii+0x2c>
};

/******************************************************************************************/
/*                                  SPREMENLJIVKE EVENTOV                                 */
/******************************************************************************************/
struct sw2_state_machine_strct
    32a2:	ed e2       	ldi	r30, 0x2D	; 45
    32a4:	f3 e1       	ldi	r31, 0x13	; 19
    32a6:	10 82       	st	Z, r1
    32a8:	11 82       	std	Z+1, r1	; 0x01
    32aa:	15 86       	std	Z+13, r1	; 0x0d
    32ac:	14 86       	std	Z+12, r1	; 0x0c
    32ae:	16 86       	std	Z+14, r1	; 0x0e
    bool risingEdge();
    bool fallingEdge();

    VHOD(int pin, char port, int default_state)
    {
        this->port = port;
    32b0:	e4 e2       	ldi	r30, 0x24	; 36
    32b2:	f3 e1       	ldi	r31, 0x13	; 19
    32b4:	82 e4       	ldi	r24, 0x42	; 66
    32b6:	86 83       	std	Z+6, r24	; 0x06
        this->pin = pin;
    32b8:	84 e0       	ldi	r24, 0x04	; 4
    32ba:	90 e0       	ldi	r25, 0x00	; 0
    32bc:	95 83       	std	Z+5, r25	; 0x05
    32be:	84 83       	std	Z+4, r24	; 0x04
        this->default_state = default_state;
    32c0:	10 86       	std	Z+8, r1	; 0x08
    32c2:	17 82       	std	Z+7, r1	; 0x07
    32c4:	08 95       	ret

000032c6 <_Z4exitv>:
    colorSHIFT(&evnt_st.menu_seek);
// Prikaze element v seeku ce je scroll aktiven

void exit()
{
    evnt_st.state = unset;
    32c6:	ed e2       	ldi	r30, 0x2D	; 45
    32c8:	f3 e1       	ldi	r31, 0x13	; 19
    32ca:	10 82       	st	Z, r1
    evnt_st.menu_seek = TOGGLE_LCD;
    32cc:	11 82       	std	Z+1, r1	; 0x01
    evnt_st.longPRESS = true;
    32ce:	81 e0       	ldi	r24, 0x01	; 1
    32d0:	86 87       	std	Z+14, r24	; 0x0e
    flash_strip();
    32d2:	6c dc       	rcall	.-1832   	; 0x2bac <_Z11flash_stripv>
    evnt_st.state_exit_timer.ponastavi();
    32d4:	8f e2       	ldi	r24, 0x2F	; 47
    32d6:	93 e1       	ldi	r25, 0x13	; 19
    32d8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    tr_bright = 255;
    32dc:	8f ef       	ldi	r24, 0xFF	; 255
    32de:	90 e0       	ldi	r25, 0x00	; 0
    32e0:	90 93 6e 13 	sts	0x136E, r25	; 0x80136e <AUSYS_vars+0x9>
    32e4:	80 93 6d 13 	sts	0x136D, r24	; 0x80136d <AUSYS_vars+0x8>
    brightDOWN(15);
    32e8:	6f e0       	ldi	r22, 0x0F	; 15
    32ea:	8f ef       	ldi	r24, 0xFF	; 255
    32ec:	bd dd       	rcall	.-1158   	; 0x2e68 <_Z18svetlost_mod_functch>
    delay_FRTOS(500);
    32ee:	8f e1       	ldi	r24, 0x1F	; 31
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    resumeTASK(audio_system_control);
    32f6:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    32fa:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    32fe:	0e 94 f7 09 	call	0x13ee	; 0x13ee <eTaskGetState>
    3302:	83 30       	cpi	r24, 0x03	; 3
    3304:	41 f4       	brne	.+16     	; 0x3316 <_Z4exitv+0x50>
    3306:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    330a:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    330e:	89 2b       	or	r24, r25
    3310:	21 f4       	brne	.+8      	; 0x331a <_Z4exitv+0x54>
    3312:	80 e0       	ldi	r24, 0x00	; 0
    3314:	03 c0       	rjmp	.+6      	; 0x331c <_Z4exitv+0x56>
    3316:	80 e0       	ldi	r24, 0x00	; 0
    3318:	01 c0       	rjmp	.+2      	; 0x331c <_Z4exitv+0x56>
    331a:	81 e0       	ldi	r24, 0x01	; 1
    331c:	88 23       	and	r24, r24
    331e:	31 f0       	breq	.+12     	; 0x332c <_Z4exitv+0x66>
    3320:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    3324:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    3328:	0c 94 43 0a 	jmp	0x1486	; 0x1486 <vTaskResume>
    332c:	08 95       	ret

0000332e <_Z24external_power_switch_evv>:
    }
}

void external_power_switch_ev()
{
    taskENTER_CRITICAL();
    332e:	0f b6       	in	r0, 0x3f	; 63
    3330:	f8 94       	cli
    3332:	0f 92       	push	r0
    Shutdown();
    3334:	da de       	rcall	.-588    	; 0x30ea <_Z8Shutdownv>
    3336:	2f ef       	ldi	r18, 0xFF	; 255
    3338:	89 ef       	ldi	r24, 0xF9	; 249
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	21 50       	subi	r18, 0x01	; 1
    333e:	80 40       	sbci	r24, 0x00	; 0
    3340:	90 40       	sbci	r25, 0x00	; 0
    3342:	e1 f7       	brne	.-8      	; 0x333c <_Z24external_power_switch_evv+0xe>
    3344:	00 c0       	rjmp	.+0      	; 0x3346 <_Z24external_power_switch_evv+0x18>
    3346:	00 00       	nop
    _delay_ms(20);
    PORTD |= (1 << 7);
    3348:	8b b1       	in	r24, 0x0b	; 11
    334a:	80 68       	ori	r24, 0x80	; 128
    334c:	8b b9       	out	0x0b, r24	; 11
    Timers.stikaloCAS.ponastavi();
    334e:	8f e6       	ldi	r24, 0x6F	; 111
    3350:	93 e1       	ldi	r25, 0x13	; 19
    3352:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    3356:	2f ef       	ldi	r18, 0xFF	; 255
    3358:	89 ef       	ldi	r24, 0xF9	; 249
    335a:	90 e0       	ldi	r25, 0x00	; 0
    335c:	21 50       	subi	r18, 0x01	; 1
    335e:	80 40       	sbci	r24, 0x00	; 0
    3360:	90 40       	sbci	r25, 0x00	; 0
    3362:	e1 f7       	brne	.-8      	; 0x335c <_Z24external_power_switch_evv+0x2e>
    3364:	00 c0       	rjmp	.+0      	; 0x3366 <_Z24external_power_switch_evv+0x38>
    3366:	00 00       	nop
    _delay_ms(20);
    Hardware.PSW = true;
    3368:	81 e0       	ldi	r24, 0x01	; 1
    336a:	80 93 a5 13 	sts	0x13A5, r24	; 0x8013a5 <Hardware+0x9>
    taskEXIT_CRITICAL();
    336e:	0f 90       	pop	r0
    3370:	0f be       	out	0x3f, r0	; 63
    3372:	08 95       	ret

00003374 <_Z24internal_power_switch_evv>:
}

void internal_power_switch_ev()
{
    taskENTER_CRITICAL();
    3374:	0f b6       	in	r0, 0x3f	; 63
    3376:	f8 94       	cli
    3378:	0f 92       	push	r0
    Shutdown();
    337a:	b7 de       	rcall	.-658    	; 0x30ea <_Z8Shutdownv>
    337c:	2f ef       	ldi	r18, 0xFF	; 255
    337e:	89 ef       	ldi	r24, 0xF9	; 249
    3380:	90 e0       	ldi	r25, 0x00	; 0
    3382:	21 50       	subi	r18, 0x01	; 1
    3384:	80 40       	sbci	r24, 0x00	; 0
    3386:	90 40       	sbci	r25, 0x00	; 0
    3388:	e1 f7       	brne	.-8      	; 0x3382 <_Z24internal_power_switch_evv+0xe>
    338a:	00 c0       	rjmp	.+0      	; 0x338c <_Z24internal_power_switch_evv+0x18>
    338c:	00 00       	nop
    _delay_ms(20);
    PORTD &= ~(1 << 7);
    338e:	8b b1       	in	r24, 0x0b	; 11
    3390:	8f 77       	andi	r24, 0x7F	; 127
    3392:	8b b9       	out	0x0b, r24	; 11
    Timers.stikaloCAS.ponastavi();
    3394:	8f e6       	ldi	r24, 0x6F	; 111
    3396:	93 e1       	ldi	r25, 0x13	; 19
    3398:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    339c:	2f ef       	ldi	r18, 0xFF	; 255
    339e:	89 ef       	ldi	r24, 0xF9	; 249
    33a0:	90 e0       	ldi	r25, 0x00	; 0
    33a2:	21 50       	subi	r18, 0x01	; 1
    33a4:	80 40       	sbci	r24, 0x00	; 0
    33a6:	90 40       	sbci	r25, 0x00	; 0
    33a8:	e1 f7       	brne	.-8      	; 0x33a2 <_Z24internal_power_switch_evv+0x2e>
    33aa:	00 c0       	rjmp	.+0      	; 0x33ac <_Z24internal_power_switch_evv+0x38>
    33ac:	00 00       	nop
    _delay_ms(20);
    Hardware.PSW = false;
    33ae:	10 92 a5 13 	sts	0x13A5, r1	; 0x8013a5 <Hardware+0x9>
    taskEXIT_CRITICAL();
    33b2:	0f 90       	pop	r0
    33b4:	0f be       	out	0x3f, r0	; 63
    33b6:	08 95       	ret

000033b8 <_Z6eventsPv>:
{
    while (true)
    {
        /******************************************** SWITCH 2 EVENTS ****************************************/

        if (eventSW.vrednost())
    33b8:	84 e2       	ldi	r24, 0x24	; 36
    33ba:	93 e1       	ldi	r25, 0x13	; 19
    33bc:	c1 d3       	rcall	.+1922   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    33be:	88 23       	and	r24, r24
    33c0:	29 f0       	breq	.+10     	; 0x33cc <_Z6eventsPv+0x14>
        {
            Timers.SW2_off_timer.ponastavi(); // Filtrira lazne nepritiske
    33c2:	88 e8       	ldi	r24, 0x88	; 136
    33c4:	93 e1       	ldi	r25, 0x13	; 19
    33c6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    33ca:	0b c0       	rjmp	.+22     	; 0x33e2 <_Z6eventsPv+0x2a>
        }
        else if (Timers.SW2_off_timer.vrednost() > 50)
    33cc:	88 e8       	ldi	r24, 0x88	; 136
    33ce:	93 e1       	ldi	r25, 0x13	; 19
    33d0:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    33d4:	63 33       	cpi	r22, 0x33	; 51
    33d6:	71 05       	cpc	r23, r1
    33d8:	81 05       	cpc	r24, r1
    33da:	91 05       	cpc	r25, r1
    33dc:	10 f0       	brcs	.+4      	; 0x33e2 <_Z6eventsPv+0x2a>
        {
            evnt_st.longPRESS = false;
    33de:	10 92 3b 13 	sts	0x133B, r1	; 0x80133b <evnt_st+0xe>
        }
        //
        //State machine
        if (Hardware.is_Powered_UP && !evnt_st.longPRESS)
    33e2:	c0 91 a4 13 	lds	r28, 0x13A4	; 0x8013a4 <Hardware+0x8>
    33e6:	cc 23       	and	r28, r28
    33e8:	09 f4       	brne	.+2      	; 0x33ec <_Z6eventsPv+0x34>
    33ea:	dc c0       	rjmp	.+440    	; 0x35a4 <_Z6eventsPv+0x1ec>
    33ec:	d0 91 3b 13 	lds	r29, 0x133B	; 0x80133b <evnt_st+0xe>
    33f0:	d1 11       	cpse	r29, r1
    33f2:	d8 c0       	rjmp	.+432    	; 0x35a4 <_Z6eventsPv+0x1ec>
        {
            switch (evnt_st.state)
    33f4:	80 91 2d 13 	lds	r24, 0x132D	; 0x80132d <evnt_st>
    33f8:	88 23       	and	r24, r24
    33fa:	21 f0       	breq	.+8      	; 0x3404 <_Z6eventsPv+0x4c>
    33fc:	81 30       	cpi	r24, 0x01	; 1
    33fe:	09 f4       	brne	.+2      	; 0x3402 <_Z6eventsPv+0x4a>
    3400:	51 c0       	rjmp	.+162    	; 0x34a4 <_Z6eventsPv+0xec>
    3402:	d0 c0       	rjmp	.+416    	; 0x35a4 <_Z6eventsPv+0x1ec>
            {

            case unset:
                if (evnt_st.hold_timer.vrednost() > 1000)
    3404:	84 e3       	ldi	r24, 0x34	; 52
    3406:	93 e1       	ldi	r25, 0x13	; 19
    3408:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    340c:	69 3e       	cpi	r22, 0xE9	; 233
    340e:	73 40       	sbci	r23, 0x03	; 3
    3410:	81 05       	cpc	r24, r1
    3412:	91 05       	cpc	r25, r1
    3414:	08 f4       	brcc	.+2      	; 0x3418 <_Z6eventsPv+0x60>
    3416:	3c c0       	rjmp	.+120    	; 0x3490 <_Z6eventsPv+0xd8>
                {
                    evnt_st.state = SCROLL;
    3418:	ed e2       	ldi	r30, 0x2D	; 45
    341a:	f3 e1       	ldi	r31, 0x13	; 19
    341c:	81 e0       	ldi	r24, 0x01	; 1
    341e:	80 83       	st	Z, r24
                    evnt_st.menu_seek = TOGGLE_LCD;
    3420:	11 82       	std	Z+1, r1	; 0x01
                    evnt_st.state_exit_timer.ponastavi();
    3422:	8f e2       	ldi	r24, 0x2F	; 47
    3424:	93 e1       	ldi	r25, 0x13	; 19
    3426:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
                    evnt_st.hold_timer.ponastavi();
    342a:	84 e3       	ldi	r24, 0x34	; 52
    342c:	93 e1       	ldi	r25, 0x13	; 19
    342e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
                    turnOFFstrip();
    3432:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    3436:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    343a:	0e 94 f7 09 	call	0x13ee	; 0x13ee <eTaskGetState>
    343e:	83 30       	cpi	r24, 0x03	; 3
    3440:	41 f0       	breq	.+16     	; 0x3452 <_Z6eventsPv+0x9a>
    3442:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    3446:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    344a:	89 2b       	or	r24, r25
    344c:	19 f4       	brne	.+6      	; 0x3454 <_Z6eventsPv+0x9c>
    344e:	cd 2f       	mov	r28, r29
    3450:	01 c0       	rjmp	.+2      	; 0x3454 <_Z6eventsPv+0x9c>
    3452:	cd 2f       	mov	r28, r29
    3454:	cc 23       	and	r28, r28
    3456:	31 f0       	breq	.+12     	; 0x3464 <_Z6eventsPv+0xac>
    3458:	80 91 fd 12 	lds	r24, 0x12FD	; 0x8012fd <audio_system_control>
    345c:	90 91 fe 12 	lds	r25, 0x12FE	; 0x8012fe <audio_system_control+0x1>
    3460:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <vTaskSuspend>
    3464:	f3 da       	rcall	.-2586   	; 0x2a4c <_Z24deleteALL_subAUDIO_tasksv>
    3466:	6f e0       	ldi	r22, 0x0F	; 15
    3468:	8f ef       	ldi	r24, 0xFF	; 255
                    flash_strip();
    346a:	fe dc       	rcall	.-1540   	; 0x2e68 <_Z18svetlost_mod_functch>
    346c:	9f db       	rcall	.-2242   	; 0x2bac <_Z11flash_stripv>
                    show_scroll_Seek();
    346e:	8f ef       	ldi	r24, 0xFF	; 255
    3470:	90 e0       	ldi	r25, 0x00	; 0
    3472:	90 93 6e 13 	sts	0x136E, r25	; 0x80136e <AUSYS_vars+0x9>
    3476:	80 93 6d 13 	sts	0x136D, r24	; 0x80136d <AUSYS_vars+0x8>
    347a:	8e e2       	ldi	r24, 0x2E	; 46
    347c:	93 e1       	ldi	r25, 0x13	; 19
    347e:	d0 db       	rcall	.-2144   	; 0x2c20 <_Z16color_fade_functPh>
                    delay_FRTOS(200);
    3480:	8c e0       	ldi	r24, 0x0C	; 12
    3482:	90 e0       	ldi	r25, 0x00	; 0
    3484:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
                    evnt_st.longPRESS = true;
    3488:	81 e0       	ldi	r24, 0x01	; 1
    348a:	80 93 3b 13 	sts	0x133B, r24	; 0x80133b <evnt_st+0xe>
                }

                else if (!eventSW.vrednost())
    348e:	8a c0       	rjmp	.+276    	; 0x35a4 <_Z6eventsPv+0x1ec>
    3490:	84 e2       	ldi	r24, 0x24	; 36
    3492:	93 e1       	ldi	r25, 0x13	; 19
    3494:	55 d3       	rcall	.+1706   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    3496:	81 11       	cpse	r24, r1
    3498:	85 c0       	rjmp	.+266    	; 0x35a4 <_Z6eventsPv+0x1ec>
                {
                    evnt_st.hold_timer.ponastavi();
    349a:	84 e3       	ldi	r24, 0x34	; 52
    349c:	93 e1       	ldi	r25, 0x13	; 19
    349e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    34a2:	80 c0       	rjmp	.+256    	; 0x35a4 <_Z6eventsPv+0x1ec>
                }
                break;

            case SCROLL:
                check_auto_exit(); //Macro to auto exit timer
    34a4:	8f e2       	ldi	r24, 0x2F	; 47
    34a6:	93 e1       	ldi	r25, 0x13	; 19
    34a8:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    34ac:	61 37       	cpi	r22, 0x71	; 113
    34ae:	77 41       	sbci	r23, 0x17	; 23
    34b0:	81 05       	cpc	r24, r1
    34b2:	91 05       	cpc	r25, r1
    34b4:	08 f0       	brcs	.+2      	; 0x34b8 <_Z6eventsPv+0x100>
                if (eventSW.vrednost())
    34b6:	07 df       	rcall	.-498    	; 0x32c6 <_Z4exitv>
    34b8:	84 e2       	ldi	r24, 0x24	; 36
    34ba:	93 e1       	ldi	r25, 0x13	; 19
    34bc:	41 d3       	rcall	.+1666   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    34be:	88 23       	and	r24, r24
    34c0:	09 f4       	brne	.+2      	; 0x34c4 <_Z6eventsPv+0x10c>
    34c2:	4d c0       	rjmp	.+154    	; 0x355e <_Z6eventsPv+0x1a6>
                {
                    evnt_st.hold_time = evnt_st.hold_timer.vrednost(); //stopa cas pritiska
    34c4:	84 e3       	ldi	r24, 0x34	; 52
    34c6:	93 e1       	ldi	r25, 0x13	; 19
    34c8:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    34cc:	0d e2       	ldi	r16, 0x2D	; 45
    34ce:	13 e1       	ldi	r17, 0x13	; 19
    34d0:	f8 01       	movw	r30, r16
    34d2:	75 87       	std	Z+13, r23	; 0x0d
    34d4:	64 87       	std	Z+12, r22	; 0x0c
                    evnt_st.state_exit_timer.ponastavi();
    34d6:	8f e2       	ldi	r24, 0x2F	; 47
    34d8:	93 e1       	ldi	r25, 0x13	; 19
    34da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>

                    if (evnt_st.hold_time > 1000)
    34de:	f8 01       	movw	r30, r16
    34e0:	84 85       	ldd	r24, Z+12	; 0x0c
    34e2:	95 85       	ldd	r25, Z+13	; 0x0d
    34e4:	89 3e       	cpi	r24, 0xE9	; 233
    34e6:	93 40       	sbci	r25, 0x03	; 3
    34e8:	08 f4       	brcc	.+2      	; 0x34ec <_Z6eventsPv+0x134>
    34ea:	5c c0       	rjmp	.+184    	; 0x35a4 <_Z6eventsPv+0x1ec>
                    {
                        evnt_st.longPRESS = true;
    34ec:	f8 01       	movw	r30, r16
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	86 87       	std	Z+14, r24	; 0x0e
                        switch (evnt_st.menu_seek) //Glede na trenutni menu seek nekaj izvede
    34f2:	81 81       	ldd	r24, Z+1	; 0x01
    34f4:	81 30       	cpi	r24, 0x01	; 1
    34f6:	29 f1       	breq	.+74     	; 0x3542 <_Z6eventsPv+0x18a>
    34f8:	18 f0       	brcs	.+6      	; 0x3500 <_Z6eventsPv+0x148>
    34fa:	82 30       	cpi	r24, 0x02	; 2
    34fc:	39 f1       	breq	.+78     	; 0x354c <_Z6eventsPv+0x194>
    34fe:	2a c0       	rjmp	.+84     	; 0x3554 <_Z6eventsPv+0x19c>
                        {
                        case TOGGLE_LCD:
                            toggleLCD(); //Task Zaslon se blocka v zaslon tasku
    3500:	ec e9       	ldi	r30, 0x9C	; 156
    3502:	f3 e1       	ldi	r31, 0x13	; 19
    3504:	c5 85       	ldd	r28, Z+13	; 0x0d
    3506:	81 e0       	ldi	r24, 0x01	; 1
    3508:	c8 27       	eor	r28, r24
    350a:	c5 87       	std	Z+13, r28	; 0x0d
    350c:	cc 23       	and	r28, r28
    350e:	b9 f0       	breq	.+46     	; 0x353e <_Z6eventsPv+0x186>
    3510:	80 91 fb 12 	lds	r24, 0x12FB	; 0x8012fb <zaslon_control>
    3514:	90 91 fc 12 	lds	r25, 0x12FC	; 0x8012fc <zaslon_control+0x1>
    3518:	0e 94 f7 09 	call	0x13ee	; 0x13ee <eTaskGetState>
    351c:	83 30       	cpi	r24, 0x03	; 3
    351e:	39 f4       	brne	.+14     	; 0x352e <_Z6eventsPv+0x176>
    3520:	80 91 fb 12 	lds	r24, 0x12FB	; 0x8012fb <zaslon_control>
    3524:	90 91 fc 12 	lds	r25, 0x12FC	; 0x8012fc <zaslon_control+0x1>
    3528:	89 2b       	or	r24, r25
    352a:	09 f0       	breq	.+2      	; 0x352e <_Z6eventsPv+0x176>
    352c:	dc 2f       	mov	r29, r28
    352e:	dd 23       	and	r29, r29
    3530:	31 f0       	breq	.+12     	; 0x353e <_Z6eventsPv+0x186>
    3532:	80 91 fb 12 	lds	r24, 0x12FB	; 0x8012fb <zaslon_control>
    3536:	90 91 fc 12 	lds	r25, 0x12FC	; 0x8012fc <zaslon_control+0x1>
                            exit();
                            break;
                        case STRIP_MD_CHG:
                            strip_mode_chg("");
    353a:	0e 94 43 0a 	call	0x1486	; 0x1486 <vTaskResume>
    353e:	c3 de       	rcall	.-634    	; 0x32c6 <_Z4exitv>
    3540:	09 c0       	rjmp	.+18     	; 0x3554 <_Z6eventsPv+0x19c>
                            exit();
    3542:	8b e0       	ldi	r24, 0x0B	; 11
    3544:	92 e0       	ldi	r25, 0x02	; 2
                            break;
    3546:	d6 dc       	rcall	.-1620   	; 0x2ef4 <_Z14strip_mode_chgPc>
                        case STRIP_OFF:
                            strip_mode_chg("off");
    3548:	be de       	rcall	.-644    	; 0x32c6 <_Z4exitv>
    354a:	04 c0       	rjmp	.+8      	; 0x3554 <_Z6eventsPv+0x19c>
    354c:	8e e5       	ldi	r24, 0x5E	; 94
    354e:	92 e0       	ldi	r25, 0x02	; 2
                            exit();
    3550:	d1 dc       	rcall	.-1630   	; 0x2ef4 <_Z14strip_mode_chgPc>
    3552:	b9 de       	rcall	.-654    	; 0x32c6 <_Z4exitv>
                            break;
                        }
                        evnt_st.hold_timer.ponastavi();
    3554:	84 e3       	ldi	r24, 0x34	; 52
    3556:	93 e1       	ldi	r25, 0x13	; 19
    3558:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    355c:	23 c0       	rjmp	.+70     	; 0x35a4 <_Z6eventsPv+0x1ec>
                    }
                }

                else if (evnt_st.hold_time > 0)
    355e:	80 91 39 13 	lds	r24, 0x1339	; 0x801339 <evnt_st+0xc>
    3562:	90 91 3a 13 	lds	r25, 0x133A	; 0x80133a <evnt_st+0xd>
    3566:	00 97       	sbiw	r24, 0x00	; 0
                {

                    if (evnt_st.hold_time < 500) //Kratek pritisk
    3568:	e9 f0       	breq	.+58     	; 0x35a4 <_Z6eventsPv+0x1ec>
    356a:	84 3f       	cpi	r24, 0xF4	; 244
    356c:	91 40       	sbci	r25, 0x01	; 1
                    {
                        evnt_st.menu_seek = (evnt_st.menu_seek + 1) % menu_seek_LEN;
    356e:	48 f4       	brcc	.+18     	; 0x3582 <_Z6eventsPv+0x1ca>
    3570:	ed e2       	ldi	r30, 0x2D	; 45
    3572:	f3 e1       	ldi	r31, 0x13	; 19
    3574:	81 81       	ldd	r24, Z+1	; 0x01
    3576:	90 e0       	ldi	r25, 0x00	; 0
    3578:	01 96       	adiw	r24, 0x01	; 1
    357a:	63 e0       	ldi	r22, 0x03	; 3
    357c:	70 e0       	ldi	r23, 0x00	; 0
    357e:	49 d5       	rcall	.+2706   	; 0x4012 <__divmodhi4>
                    }
                    show_scroll_Seek();
    3580:	81 83       	std	Z+1, r24	; 0x01
    3582:	8f ef       	ldi	r24, 0xFF	; 255
    3584:	90 e0       	ldi	r25, 0x00	; 0
    3586:	90 93 6e 13 	sts	0x136E, r25	; 0x80136e <AUSYS_vars+0x9>
    358a:	80 93 6d 13 	sts	0x136D, r24	; 0x80136d <AUSYS_vars+0x8>
    358e:	8e e2       	ldi	r24, 0x2E	; 46
    3590:	93 e1       	ldi	r25, 0x13	; 19
                    evnt_st.hold_timer.ponastavi();
    3592:	46 db       	rcall	.-2420   	; 0x2c20 <_Z16color_fade_functPh>
    3594:	84 e3       	ldi	r24, 0x34	; 52
    3596:	93 e1       	ldi	r25, 0x13	; 19
    3598:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
                    evnt_st.hold_time = 0;
    359c:	10 92 3a 13 	sts	0x133A, r1	; 0x80133a <evnt_st+0xd>
    35a0:	10 92 39 13 	sts	0x1339, r1	; 0x801339 <evnt_st+0xc>
                break;
            }
        }

        /******************************** POWER SWITCH EVENTS ********************************/
        if (napajalnik.vrednost() && Hardware.PSW == false)
    35a4:	8b e1       	ldi	r24, 0x1B	; 27
    35a6:	93 e1       	ldi	r25, 0x13	; 19
    35a8:	cb d2       	rcall	.+1430   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    35aa:	c8 2f       	mov	r28, r24
    35ac:	88 23       	and	r24, r24
    35ae:	31 f0       	breq	.+12     	; 0x35bc <_Z6eventsPv+0x204>
    35b0:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <Hardware+0x9>
    35b4:	88 23       	and	r24, r24
    35b6:	19 f0       	breq	.+6      	; 0x35be <_Z6eventsPv+0x206>
    35b8:	c0 e0       	ldi	r28, 0x00	; 0
    35ba:	01 c0       	rjmp	.+2      	; 0x35be <_Z6eventsPv+0x206>
    35bc:	c0 e0       	ldi	r28, 0x00	; 0
    35be:	cc 23       	and	r28, r28
    35c0:	a1 f0       	breq	.+40     	; 0x35ea <_Z6eventsPv+0x232>
    35c2:	8f ef       	ldi	r24, 0xFF	; 255
    35c4:	99 ef       	ldi	r25, 0xF9	; 249
    35c6:	e0 e0       	ldi	r30, 0x00	; 0
    35c8:	81 50       	subi	r24, 0x01	; 1
    35ca:	90 40       	sbci	r25, 0x00	; 0
    35cc:	e0 40       	sbci	r30, 0x00	; 0
    35ce:	e1 f7       	brne	.-8      	; 0x35c8 <_Z6eventsPv+0x210>
        {
            _delay_ms(20);
            external_power_switch_ev();
    35d0:	00 c0       	rjmp	.+0      	; 0x35d2 <_Z6eventsPv+0x21a>
    35d2:	00 00       	nop
    35d4:	ac de       	rcall	.-680    	; 0x332e <_Z24external_power_switch_evv>
    35d6:	ff ef       	ldi	r31, 0xFF	; 255
    35d8:	29 ef       	ldi	r18, 0xF9	; 249
    35da:	80 e0       	ldi	r24, 0x00	; 0
    35dc:	f1 50       	subi	r31, 0x01	; 1
    35de:	20 40       	sbci	r18, 0x00	; 0
    35e0:	80 40       	sbci	r24, 0x00	; 0
    35e2:	e1 f7       	brne	.-8      	; 0x35dc <_Z6eventsPv+0x224>
    35e4:	00 c0       	rjmp	.+0      	; 0x35e6 <_Z6eventsPv+0x22e>
    35e6:	00 00       	nop
            _delay_ms(20);
        }

        else if (napajalnik.vrednost() == 0 && Hardware.PSW)
    35e8:	1e c0       	rjmp	.+60     	; 0x3626 <_Z6eventsPv+0x26e>
    35ea:	8b e1       	ldi	r24, 0x1B	; 27
    35ec:	93 e1       	ldi	r25, 0x13	; 19
    35ee:	a8 d2       	rcall	.+1360   	; 0x3b40 <_ZN4VHOD8vrednostEv>
    35f0:	81 11       	cpse	r24, r1
    35f2:	04 c0       	rjmp	.+8      	; 0x35fc <_Z6eventsPv+0x244>
    35f4:	80 91 a5 13 	lds	r24, 0x13A5	; 0x8013a5 <Hardware+0x9>
    35f8:	81 11       	cpse	r24, r1
    35fa:	c8 2f       	mov	r28, r24
    35fc:	cc 23       	and	r28, r28
    35fe:	99 f0       	breq	.+38     	; 0x3626 <_Z6eventsPv+0x26e>
    3600:	9f ef       	ldi	r25, 0xFF	; 255
    3602:	e9 ef       	ldi	r30, 0xF9	; 249
    3604:	f0 e0       	ldi	r31, 0x00	; 0
    3606:	91 50       	subi	r25, 0x01	; 1
    3608:	e0 40       	sbci	r30, 0x00	; 0
    360a:	f0 40       	sbci	r31, 0x00	; 0
    360c:	e1 f7       	brne	.-8      	; 0x3606 <_Z6eventsPv+0x24e>
    360e:	00 c0       	rjmp	.+0      	; 0x3610 <_Z6eventsPv+0x258>
        {
            _delay_ms(20);
            internal_power_switch_ev();
    3610:	00 00       	nop
    3612:	b0 de       	rcall	.-672    	; 0x3374 <_Z24internal_power_switch_evv>
    3614:	2f ef       	ldi	r18, 0xFF	; 255
    3616:	89 ef       	ldi	r24, 0xF9	; 249
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	21 50       	subi	r18, 0x01	; 1
    361c:	80 40       	sbci	r24, 0x00	; 0
    361e:	90 40       	sbci	r25, 0x00	; 0
    3620:	e1 f7       	brne	.-8      	; 0x361a <_Z6eventsPv+0x262>
    3622:	00 c0       	rjmp	.+0      	; 0x3624 <_Z6eventsPv+0x26c>
    3624:	00 00       	nop
            _delay_ms(20);
        }
        delay_FRTOS(30);
    3626:	81 e0       	ldi	r24, 0x01	; 1
    3628:	90 e0       	ldi	r25, 0x00	; 0
    362a:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
// auto izhod iz scrolla
/*******************************************************************************************/

void events(void *paramOdTaska)
{
    while (true)
    362e:	c4 ce       	rjmp	.-632    	; 0x33b8 <_Z6eventsPv>

00003630 <_GLOBAL__sub_I_evnt_st>:
    PORTD &= ~(1 << 7);
    Timers.stikaloCAS.ponastavi();
    _delay_ms(20);
    Hardware.PSW = false;
    taskEXIT_CRITICAL();
}
    3630:	6f ef       	ldi	r22, 0xFF	; 255
    3632:	7f ef       	ldi	r23, 0xFF	; 255
    3634:	81 e0       	ldi	r24, 0x01	; 1
    3636:	90 e0       	ldi	r25, 0x00	; 0
    3638:	2f ce       	rjmp	.-930    	; 0x3298 <_Z41__static_initialization_and_destruction_0ii>
    363a:	08 95       	ret

0000363c <_ZN8EEPROM_t4pisiEhj>:
    363c:	0f 93       	push	r16
    363e:	1f 93       	push	r17
    3640:	cf 93       	push	r28
    3642:	c6 2f       	mov	r28, r22
    3644:	8a 01       	movw	r16, r20
    3646:	f9 9b       	sbis	0x1f, 1	; 31
    3648:	05 c0       	rjmp	.+10     	; 0x3654 <_ZN8EEPROM_t4pisiEhj+0x18>
    364a:	81 e0       	ldi	r24, 0x01	; 1
    364c:	90 e0       	ldi	r25, 0x00	; 0
    364e:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    3652:	f9 cf       	rjmp	.-14     	; 0x3646 <_ZN8EEPROM_t4pisiEhj+0xa>
    3654:	12 bd       	out	0x22, r17	; 34
    3656:	01 bd       	out	0x21, r16	; 33
    3658:	c0 bd       	out	0x20, r28	; 32
    365a:	8f b3       	in	r24, 0x1f	; 31
    365c:	84 60       	ori	r24, 0x04	; 4
    365e:	8f bb       	out	0x1f, r24	; 31
    3660:	8f b3       	in	r24, 0x1f	; 31
    3662:	82 60       	ori	r24, 0x02	; 2
    3664:	8f bb       	out	0x1f, r24	; 31
    3666:	cf 91       	pop	r28
    3668:	1f 91       	pop	r17
    366a:	0f 91       	pop	r16
    366c:	08 95       	ret

0000366e <_ZN8EEPROM_t4beriEj>:
    366e:	cf 93       	push	r28
    3670:	df 93       	push	r29
    3672:	eb 01       	movw	r28, r22
    3674:	f9 9b       	sbis	0x1f, 1	; 31
    3676:	05 c0       	rjmp	.+10     	; 0x3682 <_ZN8EEPROM_t4beriEj+0x14>
    3678:	81 e0       	ldi	r24, 0x01	; 1
    367a:	90 e0       	ldi	r25, 0x00	; 0
    367c:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    3680:	f9 cf       	rjmp	.-14     	; 0x3674 <_ZN8EEPROM_t4beriEj+0x6>
    3682:	d2 bd       	out	0x22, r29	; 34
    3684:	c1 bd       	out	0x21, r28	; 33
    3686:	8f b3       	in	r24, 0x1f	; 31
    3688:	81 60       	ori	r24, 0x01	; 1
    368a:	8f bb       	out	0x1f, r24	; 31
    368c:	80 b5       	in	r24, 0x20	; 32
    368e:	df 91       	pop	r29
    3690:	cf 91       	pop	r28
    3692:	08 95       	ret

00003694 <_Z6pwmOFFhc>:
    3694:	62 34       	cpi	r22, 0x42	; 66
    3696:	79 f5       	brne	.+94     	; 0x36f6 <_Z6pwmOFFhc+0x62>
    3698:	85 30       	cpi	r24, 0x05	; 5
    369a:	89 f0       	breq	.+34     	; 0x36be <_Z6pwmOFFhc+0x2a>
    369c:	86 30       	cpi	r24, 0x06	; 6
    369e:	e9 f0       	breq	.+58     	; 0x36da <_Z6pwmOFFhc+0x46>
    36a0:	84 30       	cpi	r24, 0x04	; 4
    36a2:	49 f5       	brne	.+82     	; 0x36f6 <_Z6pwmOFFhc+0x62>
    36a4:	e0 eb       	ldi	r30, 0xB0	; 176
    36a6:	f0 e0       	ldi	r31, 0x00	; 0
    36a8:	80 81       	ld	r24, Z
    36aa:	8f 77       	andi	r24, 0x7F	; 127
    36ac:	80 83       	st	Z, r24
    36ae:	80 81       	ld	r24, Z
    36b0:	85 fd       	sbrc	r24, 5
    36b2:	21 c0       	rjmp	.+66     	; 0x36f6 <_Z6pwmOFFhc+0x62>
    36b4:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7c00b1>
    36b8:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    36bc:	08 95       	ret
    36be:	e0 e8       	ldi	r30, 0x80	; 128
    36c0:	f0 e0       	ldi	r31, 0x00	; 0
    36c2:	80 81       	ld	r24, Z
    36c4:	8f 77       	andi	r24, 0x7F	; 127
    36c6:	80 83       	st	Z, r24
    36c8:	80 81       	ld	r24, Z
    36ca:	85 fd       	sbrc	r24, 5
    36cc:	06 c0       	rjmp	.+12     	; 0x36da <_Z6pwmOFFhc+0x46>
    36ce:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
    36d2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    36d6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    36da:	e0 e8       	ldi	r30, 0x80	; 128
    36dc:	f0 e0       	ldi	r31, 0x00	; 0
    36de:	80 81       	ld	r24, Z
    36e0:	8f 7d       	andi	r24, 0xDF	; 223
    36e2:	80 83       	st	Z, r24
    36e4:	80 81       	ld	r24, Z
    36e6:	88 23       	and	r24, r24
    36e8:	34 f0       	brlt	.+12     	; 0x36f6 <_Z6pwmOFFhc+0x62>
    36ea:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
    36ee:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    36f2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    36f6:	08 95       	ret

000036f8 <_Z11writeOUTPUThcb>:
    36f8:	1f 93       	push	r17
    36fa:	cf 93       	push	r28
    36fc:	df 93       	push	r29
    36fe:	d8 2f       	mov	r29, r24
    3700:	c6 2f       	mov	r28, r22
    3702:	14 2f       	mov	r17, r20
    3704:	c7 df       	rcall	.-114    	; 0x3694 <_Z6pwmOFFhc>
    3706:	c4 34       	cpi	r28, 0x44	; 68
    3708:	f1 f0       	breq	.+60     	; 0x3746 <_Z11writeOUTPUThcb+0x4e>
    370a:	c8 34       	cpi	r28, 0x48	; 72
    370c:	a9 f1       	breq	.+106    	; 0x3778 <_Z11writeOUTPUThcb+0x80>
    370e:	c2 34       	cpi	r28, 0x42	; 66
    3710:	09 f0       	breq	.+2      	; 0x3714 <_Z11writeOUTPUThcb+0x1c>
    3712:	4e c0       	rjmp	.+156    	; 0x37b0 <_Z11writeOUTPUThcb+0xb8>
    3714:	11 23       	and	r17, r17
    3716:	59 f0       	breq	.+22     	; 0x372e <_Z11writeOUTPUThcb+0x36>
    3718:	25 b1       	in	r18, 0x05	; 5
    371a:	81 e0       	ldi	r24, 0x01	; 1
    371c:	90 e0       	ldi	r25, 0x00	; 0
    371e:	02 c0       	rjmp	.+4      	; 0x3724 <_Z11writeOUTPUThcb+0x2c>
    3720:	88 0f       	add	r24, r24
    3722:	99 1f       	adc	r25, r25
    3724:	da 95       	dec	r29
    3726:	e2 f7       	brpl	.-8      	; 0x3720 <_Z11writeOUTPUThcb+0x28>
    3728:	82 2b       	or	r24, r18
    372a:	85 b9       	out	0x05, r24	; 5
    372c:	41 c0       	rjmp	.+130    	; 0x37b0 <_Z11writeOUTPUThcb+0xb8>
    372e:	25 b1       	in	r18, 0x05	; 5
    3730:	81 e0       	ldi	r24, 0x01	; 1
    3732:	90 e0       	ldi	r25, 0x00	; 0
    3734:	02 c0       	rjmp	.+4      	; 0x373a <_Z11writeOUTPUThcb+0x42>
    3736:	88 0f       	add	r24, r24
    3738:	99 1f       	adc	r25, r25
    373a:	da 95       	dec	r29
    373c:	e2 f7       	brpl	.-8      	; 0x3736 <_Z11writeOUTPUThcb+0x3e>
    373e:	80 95       	com	r24
    3740:	82 23       	and	r24, r18
    3742:	85 b9       	out	0x05, r24	; 5
    3744:	35 c0       	rjmp	.+106    	; 0x37b0 <_Z11writeOUTPUThcb+0xb8>
    3746:	11 23       	and	r17, r17
    3748:	59 f0       	breq	.+22     	; 0x3760 <_Z11writeOUTPUThcb+0x68>
    374a:	2b b1       	in	r18, 0x0b	; 11
    374c:	81 e0       	ldi	r24, 0x01	; 1
    374e:	90 e0       	ldi	r25, 0x00	; 0
    3750:	02 c0       	rjmp	.+4      	; 0x3756 <_Z11writeOUTPUThcb+0x5e>
    3752:	88 0f       	add	r24, r24
    3754:	99 1f       	adc	r25, r25
    3756:	da 95       	dec	r29
    3758:	e2 f7       	brpl	.-8      	; 0x3752 <_Z11writeOUTPUThcb+0x5a>
    375a:	82 2b       	or	r24, r18
    375c:	8b b9       	out	0x0b, r24	; 11
    375e:	28 c0       	rjmp	.+80     	; 0x37b0 <_Z11writeOUTPUThcb+0xb8>
    3760:	2b b1       	in	r18, 0x0b	; 11
    3762:	81 e0       	ldi	r24, 0x01	; 1
    3764:	90 e0       	ldi	r25, 0x00	; 0
    3766:	02 c0       	rjmp	.+4      	; 0x376c <_Z11writeOUTPUThcb+0x74>
    3768:	88 0f       	add	r24, r24
    376a:	99 1f       	adc	r25, r25
    376c:	da 95       	dec	r29
    376e:	e2 f7       	brpl	.-8      	; 0x3768 <_Z11writeOUTPUThcb+0x70>
    3770:	80 95       	com	r24
    3772:	82 23       	and	r24, r18
    3774:	8b b9       	out	0x0b, r24	; 11
    3776:	1c c0       	rjmp	.+56     	; 0x37b0 <_Z11writeOUTPUThcb+0xb8>
    3778:	11 23       	and	r17, r17
    377a:	69 f0       	breq	.+26     	; 0x3796 <_Z11writeOUTPUThcb+0x9e>
    377c:	e2 e0       	ldi	r30, 0x02	; 2
    377e:	f1 e0       	ldi	r31, 0x01	; 1
    3780:	20 81       	ld	r18, Z
    3782:	81 e0       	ldi	r24, 0x01	; 1
    3784:	90 e0       	ldi	r25, 0x00	; 0
    3786:	02 c0       	rjmp	.+4      	; 0x378c <_Z11writeOUTPUThcb+0x94>
    3788:	88 0f       	add	r24, r24
    378a:	99 1f       	adc	r25, r25
    378c:	da 95       	dec	r29
    378e:	e2 f7       	brpl	.-8      	; 0x3788 <_Z11writeOUTPUThcb+0x90>
    3790:	82 2b       	or	r24, r18
    3792:	80 83       	st	Z, r24
    3794:	0d c0       	rjmp	.+26     	; 0x37b0 <_Z11writeOUTPUThcb+0xb8>
    3796:	e2 e0       	ldi	r30, 0x02	; 2
    3798:	f1 e0       	ldi	r31, 0x01	; 1
    379a:	20 81       	ld	r18, Z
    379c:	81 e0       	ldi	r24, 0x01	; 1
    379e:	90 e0       	ldi	r25, 0x00	; 0
    37a0:	02 c0       	rjmp	.+4      	; 0x37a6 <_Z11writeOUTPUThcb+0xae>
    37a2:	88 0f       	add	r24, r24
    37a4:	99 1f       	adc	r25, r25
    37a6:	da 95       	dec	r29
    37a8:	e2 f7       	brpl	.-8      	; 0x37a2 <_Z11writeOUTPUThcb+0xaa>
    37aa:	80 95       	com	r24
    37ac:	82 23       	and	r24, r18
    37ae:	80 83       	st	Z, r24
    37b0:	df 91       	pop	r29
    37b2:	cf 91       	pop	r28
    37b4:	1f 91       	pop	r17
    37b6:	08 95       	ret

000037b8 <_Z10readANALOGh>:
    37b8:	e0 ee       	ldi	r30, 0xE0	; 224
    37ba:	f0 e0       	ldi	r31, 0x00	; 0
    37bc:	80 81       	ld	r24, Z
    37be:	80 64       	ori	r24, 0x40	; 64
    37c0:	80 83       	st	Z, r24
    37c2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
    37c6:	86 ff       	sbrs	r24, 6
    37c8:	05 c0       	rjmp	.+10     	; 0x37d4 <_Z10readANALOGh+0x1c>
    37ca:	81 e0       	ldi	r24, 0x01	; 1
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    37d2:	f7 cf       	rjmp	.-18     	; 0x37c2 <_Z10readANALOGh+0xa>
    37d4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
    37d8:	90 e0       	ldi	r25, 0x00	; 0
    37da:	08 95       	ret

000037dc <_Z8writePWMhch>:
    37dc:	62 34       	cpi	r22, 0x42	; 66
    37de:	89 f5       	brne	.+98     	; 0x3842 <_Z8writePWMhch+0x66>
    37e0:	94 b1       	in	r25, 0x04	; 4
    37e2:	21 e0       	ldi	r18, 0x01	; 1
    37e4:	30 e0       	ldi	r19, 0x00	; 0
    37e6:	08 2e       	mov	r0, r24
    37e8:	02 c0       	rjmp	.+4      	; 0x37ee <_Z8writePWMhch+0x12>
    37ea:	22 0f       	add	r18, r18
    37ec:	33 1f       	adc	r19, r19
    37ee:	0a 94       	dec	r0
    37f0:	e2 f7       	brpl	.-8      	; 0x37ea <_Z8writePWMhch+0xe>
    37f2:	29 2b       	or	r18, r25
    37f4:	24 b9       	out	0x04, r18	; 4
    37f6:	85 30       	cpi	r24, 0x05	; 5
    37f8:	69 f0       	breq	.+26     	; 0x3814 <_Z8writePWMhch+0x38>
    37fa:	86 30       	cpi	r24, 0x06	; 6
    37fc:	b9 f0       	breq	.+46     	; 0x382c <_Z8writePWMhch+0x50>
    37fe:	84 30       	cpi	r24, 0x04	; 4
    3800:	01 f5       	brne	.+64     	; 0x3842 <_Z8writePWMhch+0x66>
    3802:	83 e8       	ldi	r24, 0x83	; 131
    3804:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    3808:	81 e0       	ldi	r24, 0x01	; 1
    380a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7c00b1>
    380e:	40 93 b3 00 	sts	0x00B3, r20	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    3812:	08 95       	ret
    3814:	89 e8       	ldi	r24, 0x89	; 137
    3816:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    381a:	81 e0       	ldi	r24, 0x01	; 1
    381c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
    3820:	50 e0       	ldi	r21, 0x00	; 0
    3822:	50 93 89 00 	sts	0x0089, r21	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    3826:	40 93 88 00 	sts	0x0088, r20	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    382a:	08 95       	ret
    382c:	89 e2       	ldi	r24, 0x29	; 41
    382e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    3832:	81 e0       	ldi	r24, 0x01	; 1
    3834:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
    3838:	50 e0       	ldi	r21, 0x00	; 0
    383a:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
    383e:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
    3842:	08 95       	ret

00003844 <_Z41__static_initialization_and_destruction_0ii>:

Hardware_t Hardware;
Timers_t Timers;
adsys_t AUSYS_vars;
mozne_barve_t mozne_barve;
    3844:	01 97       	sbiw	r24, 0x01	; 1
    3846:	09 f0       	breq	.+2      	; 0x384a <_Z41__static_initialization_and_destruction_0ii+0x6>
    3848:	6e c0       	rjmp	.+220    	; 0x3926 <_Z41__static_initialization_and_destruction_0ii+0xe2>
    384a:	6f 3f       	cpi	r22, 0xFF	; 255
    384c:	7f 4f       	sbci	r23, 0xFF	; 255
    384e:	09 f0       	breq	.+2      	; 0x3852 <_Z41__static_initialization_and_destruction_0ii+0xe>
    3850:	6a c0       	rjmp	.+212    	; 0x3926 <_Z41__static_initialization_and_destruction_0ii+0xe2>
extern TaskHandle_t chrg_control;
extern TaskHandle_t thermal_control;
extern TaskHandle_t meas_control;
extern SemaphoreHandle_t voltage_SEM;

struct Hardware_t
    3852:	ec e9       	ldi	r30, 0x9C	; 156
    3854:	f3 e1       	ldi	r31, 0x13	; 19
    3856:	80 e0       	ldi	r24, 0x00	; 0
    3858:	90 e4       	ldi	r25, 0x40	; 64
    385a:	ac e9       	ldi	r26, 0x9C	; 156
    385c:	b5 e4       	ldi	r27, 0x45	; 69
    385e:	80 83       	st	Z, r24
    3860:	91 83       	std	Z+1, r25	; 0x01
    3862:	a2 83       	std	Z+2, r26	; 0x02
    3864:	b3 83       	std	Z+3, r27	; 0x03
    3866:	80 e0       	ldi	r24, 0x00	; 0
    3868:	90 e0       	ldi	r25, 0x00	; 0
    386a:	a0 ea       	ldi	r26, 0xA0	; 160
    386c:	b0 e4       	ldi	r27, 0x40	; 64
    386e:	84 83       	std	Z+4, r24	; 0x04
    3870:	95 83       	std	Z+5, r25	; 0x05
    3872:	a6 83       	std	Z+6, r26	; 0x06
    3874:	b7 83       	std	Z+7, r27	; 0x07
    3876:	10 86       	std	Z+8, r1	; 0x08
    3878:	11 86       	std	Z+9, r1	; 0x09
    387a:	14 86       	std	Z+12, r1	; 0x0c
    387c:	81 e0       	ldi	r24, 0x01	; 1
    387e:	85 87       	std	Z+13, r24	; 0x0d
    3880:	16 86       	std	Z+14, r1	; 0x0e
    3882:	17 86       	std	Z+15, r1	; 0x0f
    3884:	10 8a       	std	Z+16, r1	; 0x10
    3886:	11 8a       	std	Z+17, r1	; 0x11
    3888:	13 8a       	std	Z+19, r1	; 0x13
    388a:	12 8a       	std	Z+18, r1	; 0x12
    388c:	14 8a       	std	Z+20, r1	; 0x14
    388e:	15 8a       	std	Z+21, r1	; 0x15
    3890:	16 8a       	std	Z+22, r1	; 0x16
    3892:	17 8a       	std	Z+23, r1	; 0x17
    Fade_Breathe,
    LENGTH_2,
    OFF_A
};

struct adsys_t
    3894:	e5 e6       	ldi	r30, 0x65	; 101
    3896:	f3 e1       	ldi	r31, 0x13	; 19
    3898:	84 e0       	ldi	r24, 0x04	; 4
    389a:	90 e0       	ldi	r25, 0x00	; 0
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
    38a0:	13 82       	std	Z+3, r1	; 0x03
    38a2:	12 82       	std	Z+2, r1	; 0x02
    38a4:	15 82       	std	Z+5, r1	; 0x05
    38a6:	14 82       	std	Z+4, r1	; 0x04
    38a8:	17 82       	std	Z+7, r1	; 0x07
    38aa:	16 82       	std	Z+6, r1	; 0x06
    38ac:	11 86       	std	Z+9, r1	; 0x09
    38ae:	10 86       	std	Z+8, r1	; 0x08
	VIJOLICNA,
	ROZA,
	LENGHT
};

struct mozne_barve_t
    38b0:	ed e3       	ldi	r30, 0x3D	; 61
    38b2:	f3 e1       	ldi	r31, 0x13	; 19
    38b4:	8f ef       	ldi	r24, 0xFF	; 255
    38b6:	80 83       	st	Z, r24
    38b8:	81 83       	std	Z+1, r24	; 0x01
    38ba:	82 83       	std	Z+2, r24	; 0x02
    38bc:	13 82       	std	Z+3, r1	; 0x03
    38be:	84 83       	std	Z+4, r24	; 0x04
    38c0:	15 82       	std	Z+5, r1	; 0x05
    38c2:	86 83       	std	Z+6, r24	; 0x06
    38c4:	17 82       	std	Z+7, r1	; 0x07
    38c6:	10 86       	std	Z+8, r1	; 0x08
    38c8:	11 86       	std	Z+9, r1	; 0x09
    38ca:	12 86       	std	Z+10, r1	; 0x0a
    38cc:	83 87       	std	Z+11, r24	; 0x0b
    38ce:	84 87       	std	Z+12, r24	; 0x0c
    38d0:	85 87       	std	Z+13, r24	; 0x0d
    38d2:	16 86       	std	Z+14, r1	; 0x0e
    38d4:	17 86       	std	Z+15, r1	; 0x0f
    38d6:	80 8b       	std	Z+16, r24	; 0x10
    38d8:	81 8b       	std	Z+17, r24	; 0x11
    38da:	82 8b       	std	Z+18, r24	; 0x12
    38dc:	13 8a       	std	Z+19, r1	; 0x13
    38de:	84 8b       	std	Z+20, r24	; 0x14
    38e0:	85 8b       	std	Z+21, r24	; 0x15
    38e2:	84 e1       	ldi	r24, 0x14	; 20
    38e4:	86 8b       	std	Z+22, r24	; 0x16
    38e6:	83 e9       	ldi	r24, 0x93	; 147
    38e8:	87 8b       	std	Z+23, r24	; 0x17
    38ea:	f1 8f       	std	Z+25, r31	; 0x19
    38ec:	e0 8f       	std	Z+24, r30	; 0x18
    38ee:	80 e4       	ldi	r24, 0x40	; 64
    38f0:	93 e1       	ldi	r25, 0x13	; 19
    38f2:	93 8f       	std	Z+27, r25	; 0x1b
    38f4:	82 8f       	std	Z+26, r24	; 0x1a
    38f6:	83 e4       	ldi	r24, 0x43	; 67
    38f8:	93 e1       	ldi	r25, 0x13	; 19
    38fa:	95 8f       	std	Z+29, r25	; 0x1d
    38fc:	84 8f       	std	Z+28, r24	; 0x1c
    38fe:	86 e4       	ldi	r24, 0x46	; 70
    3900:	93 e1       	ldi	r25, 0x13	; 19
    3902:	97 8f       	std	Z+31, r25	; 0x1f
    3904:	86 8f       	std	Z+30, r24	; 0x1e
    3906:	89 e4       	ldi	r24, 0x49	; 73
    3908:	93 e1       	ldi	r25, 0x13	; 19
    390a:	91 a3       	std	Z+33, r25	; 0x21
    390c:	80 a3       	std	Z+32, r24	; 0x20
    390e:	8c e4       	ldi	r24, 0x4C	; 76
    3910:	93 e1       	ldi	r25, 0x13	; 19
    3912:	93 a3       	std	Z+35, r25	; 0x23
    3914:	82 a3       	std	Z+34, r24	; 0x22
    3916:	8f e4       	ldi	r24, 0x4F	; 79
    3918:	93 e1       	ldi	r25, 0x13	; 19
    391a:	95 a3       	std	Z+37, r25	; 0x25
    391c:	84 a3       	std	Z+36, r24	; 0x24
    391e:	82 e5       	ldi	r24, 0x52	; 82
    3920:	93 e1       	ldi	r25, 0x13	; 19
    3922:	97 a3       	std	Z+39, r25	; 0x27
    3924:	86 a3       	std	Z+38, r24	; 0x26
    3926:	08 95       	ret

00003928 <_GLOBAL__sub_I_Hardware>:
    3928:	6f ef       	ldi	r22, 0xFF	; 255
    392a:	7f ef       	ldi	r23, 0xFF	; 255
    392c:	81 e0       	ldi	r24, 0x01	; 1
    392e:	90 e0       	ldi	r25, 0x00	; 0
    3930:	89 cf       	rjmp	.-238    	; 0x3844 <_Z41__static_initialization_and_destruction_0ii>
    3932:	08 95       	ret

00003934 <_Z9polnjenjePv>:
    3934:	6f ef       	ldi	r22, 0xFF	; 255
    3936:	7f ef       	ldi	r23, 0xFF	; 255
    3938:	80 91 f5 12 	lds	r24, 0x12F5	; 0x8012f5 <voltage_SEM>
    393c:	90 91 f6 12 	lds	r25, 0x12F6	; 0x8012f6 <voltage_SEM+0x1>
    3940:	0e 94 a4 06 	call	0xd48	; 0xd48 <xQueueSemaphoreTake>
    3944:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <Hardware+0x12>
    3948:	90 91 af 13 	lds	r25, 0x13AF	; 0x8013af <Hardware+0x13>
    394c:	86 33       	cpi	r24, 0x36	; 54
    394e:	20 e1       	ldi	r18, 0x10	; 16
    3950:	92 07       	cpc	r25, r18
    3952:	40 f0       	brcs	.+16     	; 0x3964 <_Z9polnjenjePv+0x30>
    3954:	20 91 a6 13 	lds	r18, 0x13A6	; 0x8013a6 <Hardware+0xa>
    3958:	21 11       	cpse	r18, r1
    395a:	04 c0       	rjmp	.+8      	; 0x3964 <_Z9polnjenjePv+0x30>
    395c:	81 e0       	ldi	r24, 0x01	; 1
    395e:	80 93 a6 13 	sts	0x13A6, r24	; 0x8013a6 <Hardware+0xa>
    3962:	08 c0       	rjmp	.+16     	; 0x3974 <_Z9polnjenjePv+0x40>
    3964:	81 3a       	cpi	r24, 0xA1	; 161
    3966:	9f 40       	sbci	r25, 0x0F	; 15
    3968:	28 f4       	brcc	.+10     	; 0x3974 <_Z9polnjenjePv+0x40>
    396a:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <Hardware+0xa>
    396e:	81 11       	cpse	r24, r1
    3970:	10 92 a6 13 	sts	0x13A6, r1	; 0x8013a6 <Hardware+0xa>
    3974:	20 e0       	ldi	r18, 0x00	; 0
    3976:	40 e0       	ldi	r20, 0x00	; 0
    3978:	50 e0       	ldi	r21, 0x00	; 0
    397a:	60 e0       	ldi	r22, 0x00	; 0
    397c:	70 e0       	ldi	r23, 0x00	; 0
    397e:	80 91 f5 12 	lds	r24, 0x12F5	; 0x8012f5 <voltage_SEM>
    3982:	90 91 f6 12 	lds	r25, 0x12F6	; 0x8012f6 <voltage_SEM+0x1>
    3986:	0e 94 48 05 	call	0xa90	; 0xa90 <xQueueGenericSend>
    398a:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <Hardware+0xa>
    398e:	81 11       	cpse	r24, r1
    3990:	09 c0       	rjmp	.+18     	; 0x39a4 <_Z9polnjenjePv+0x70>
    3992:	c0 91 a8 13 	lds	r28, 0x13A8	; 0x8013a8 <Hardware+0xc>
    3996:	c1 11       	cpse	r28, r1
    3998:	05 c0       	rjmp	.+10     	; 0x39a4 <_Z9polnjenjePv+0x70>
    399a:	8b e1       	ldi	r24, 0x1B	; 27
    399c:	93 e1       	ldi	r25, 0x13	; 19
    399e:	d0 d0       	rcall	.+416    	; 0x3b40 <_ZN4VHOD8vrednostEv>
    39a0:	81 11       	cpse	r24, r1
    39a2:	02 c0       	rjmp	.+4      	; 0x39a8 <_Z9polnjenjePv+0x74>
    39a4:	c0 91 a7 13 	lds	r28, 0x13A7	; 0x8013a7 <Hardware+0xb>
    39a8:	cc 23       	and	r28, r28
    39aa:	39 f0       	breq	.+14     	; 0x39ba <_Z9polnjenjePv+0x86>
    39ac:	40 e0       	ldi	r20, 0x00	; 0
    39ae:	64 e4       	ldi	r22, 0x44	; 68
    39b0:	86 e0       	ldi	r24, 0x06	; 6
    39b2:	a2 de       	rcall	.-700    	; 0x36f8 <_Z11writeOUTPUThcb>
    39b4:	10 92 a7 13 	sts	0x13A7, r1	; 0x8013a7 <Hardware+0xb>
    39b8:	23 c0       	rjmp	.+70     	; 0x3a00 <_Z9polnjenjePv+0xcc>
    39ba:	d0 91 a6 13 	lds	r29, 0x13A6	; 0x8013a6 <Hardware+0xa>
    39be:	d1 11       	cpse	r29, r1
    39c0:	12 c0       	rjmp	.+36     	; 0x39e6 <_Z9polnjenjePv+0xb2>
    39c2:	8b e1       	ldi	r24, 0x1B	; 27
    39c4:	93 e1       	ldi	r25, 0x13	; 19
    39c6:	bc d0       	rcall	.+376    	; 0x3b40 <_ZN4VHOD8vrednostEv>
    39c8:	c8 2f       	mov	r28, r24
    39ca:	88 23       	and	r24, r24
    39cc:	61 f0       	breq	.+24     	; 0x39e6 <_Z9polnjenjePv+0xb2>
    39ce:	80 91 a8 13 	lds	r24, 0x13A8	; 0x8013a8 <Hardware+0xc>
    39d2:	81 11       	cpse	r24, r1
    39d4:	05 c0       	rjmp	.+10     	; 0x39e0 <_Z9polnjenjePv+0xac>
    39d6:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <Hardware+0xb>
    39da:	91 11       	cpse	r25, r1
    39dc:	03 c0       	rjmp	.+6      	; 0x39e4 <_Z9polnjenjePv+0xb0>
    39de:	03 c0       	rjmp	.+6      	; 0x39e6 <_Z9polnjenjePv+0xb2>
    39e0:	cd 2f       	mov	r28, r29
    39e2:	01 c0       	rjmp	.+2      	; 0x39e6 <_Z9polnjenjePv+0xb2>
    39e4:	c8 2f       	mov	r28, r24
    39e6:	cc 23       	and	r28, r28
    39e8:	59 f0       	breq	.+22     	; 0x3a00 <_Z9polnjenjePv+0xcc>
    39ea:	8e e3       	ldi	r24, 0x3E	; 62
    39ec:	90 e0       	ldi	r25, 0x00	; 0
    39ee:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    39f2:	41 e0       	ldi	r20, 0x01	; 1
    39f4:	64 e4       	ldi	r22, 0x44	; 68
    39f6:	86 e0       	ldi	r24, 0x06	; 6
    39f8:	7f de       	rcall	.-770    	; 0x36f8 <_Z11writeOUTPUThcb>
    39fa:	81 e0       	ldi	r24, 0x01	; 1
    39fc:	80 93 a7 13 	sts	0x13A7, r24	; 0x8013a7 <Hardware+0xb>
    3a00:	86 e0       	ldi	r24, 0x06	; 6
    3a02:	90 e0       	ldi	r25, 0x00	; 0
    3a04:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    3a08:	95 cf       	rjmp	.-214    	; 0x3934 <_Z9polnjenjePv>

00003a0a <_Z6zaslonPv>:
    3a0a:	c0 91 a9 13 	lds	r28, 0x13A9	; 0x8013a9 <Hardware+0xd>
    3a0e:	cc 23       	and	r28, r28
    3a10:	09 f4       	brne	.+2      	; 0x3a14 <_Z6zaslonPv+0xa>
    3a12:	45 c0       	rjmp	.+138    	; 0x3a9e <_Z6zaslonPv+0x94>
    3a14:	8b e1       	ldi	r24, 0x1B	; 27
    3a16:	93 e1       	ldi	r25, 0x13	; 19
    3a18:	93 d0       	rcall	.+294    	; 0x3b40 <_ZN4VHOD8vrednostEv>
    3a1a:	d8 2f       	mov	r29, r24
    3a1c:	81 11       	cpse	r24, r1
    3a1e:	24 c0       	rjmp	.+72     	; 0x3a68 <_Z6zaslonPv+0x5e>
    3a20:	89 e7       	ldi	r24, 0x79	; 121
    3a22:	93 e1       	ldi	r25, 0x13	; 19
    3a24:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    3a28:	68 32       	cpi	r22, 0x28	; 40
    3a2a:	73 42       	sbci	r23, 0x23	; 35
    3a2c:	81 05       	cpc	r24, r1
    3a2e:	91 05       	cpc	r25, r1
    3a30:	20 f4       	brcc	.+8      	; 0x3a3a <_Z6zaslonPv+0x30>
    3a32:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <Hardware+0x8>
    3a36:	81 11       	cpse	r24, r1
    3a38:	cd 2f       	mov	r28, r29
    3a3a:	cc 23       	and	r28, r28
    3a3c:	41 f0       	breq	.+16     	; 0x3a4e <_Z6zaslonPv+0x44>
    3a3e:	89 e7       	ldi	r24, 0x79	; 121
    3a40:	93 e1       	ldi	r25, 0x13	; 19
    3a42:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    3a46:	85 b1       	in	r24, 0x05	; 5
    3a48:	8b 7f       	andi	r24, 0xFB	; 251
    3a4a:	85 b9       	out	0x05, r24	; 5
    3a4c:	42 c0       	rjmp	.+132    	; 0x3ad2 <_Z6zaslonPv+0xc8>
    3a4e:	89 e7       	ldi	r24, 0x79	; 121
    3a50:	93 e1       	ldi	r25, 0x13	; 19
    3a52:	0e 94 c8 00 	call	0x190	; 0x190 <_ZN8castimer8vrednostEv>
    3a56:	61 37       	cpi	r22, 0x71	; 113
    3a58:	77 41       	sbci	r23, 0x17	; 23
    3a5a:	81 05       	cpc	r24, r1
    3a5c:	91 05       	cpc	r25, r1
    3a5e:	c8 f1       	brcs	.+114    	; 0x3ad2 <_Z6zaslonPv+0xc8>
    3a60:	85 b1       	in	r24, 0x05	; 5
    3a62:	84 60       	ori	r24, 0x04	; 4
    3a64:	85 b9       	out	0x05, r24	; 5
    3a66:	35 c0       	rjmp	.+106    	; 0x3ad2 <_Z6zaslonPv+0xc8>
    3a68:	80 91 a7 13 	lds	r24, 0x13A7	; 0x8013a7 <Hardware+0xb>
    3a6c:	88 23       	and	r24, r24
    3a6e:	69 f0       	breq	.+26     	; 0x3a8a <_Z6zaslonPv+0x80>
    3a70:	8f e1       	ldi	r24, 0x1F	; 31
    3a72:	90 e0       	ldi	r25, 0x00	; 0
    3a74:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    3a78:	95 b1       	in	r25, 0x05	; 5
    3a7a:	84 e0       	ldi	r24, 0x04	; 4
    3a7c:	89 27       	eor	r24, r25
    3a7e:	85 b9       	out	0x05, r24	; 5
    3a80:	89 e7       	ldi	r24, 0x79	; 121
    3a82:	93 e1       	ldi	r25, 0x13	; 19
    3a84:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN8castimer9ponastaviEv>
    3a88:	24 c0       	rjmp	.+72     	; 0x3ad2 <_Z6zaslonPv+0xc8>
    3a8a:	85 b1       	in	r24, 0x05	; 5
    3a8c:	84 60       	ori	r24, 0x04	; 4
    3a8e:	85 b9       	out	0x05, r24	; 5
    3a90:	8b eb       	ldi	r24, 0xBB	; 187
    3a92:	90 e0       	ldi	r25, 0x00	; 0
    3a94:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    3a98:	10 92 a9 13 	sts	0x13A9, r1	; 0x8013a9 <Hardware+0xd>
    3a9c:	1a c0       	rjmp	.+52     	; 0x3ad2 <_Z6zaslonPv+0xc8>
    3a9e:	85 b1       	in	r24, 0x05	; 5
    3aa0:	8b 7f       	andi	r24, 0xFB	; 251
    3aa2:	85 b9       	out	0x05, r24	; 5
    3aa4:	80 91 fb 12 	lds	r24, 0x12FB	; 0x8012fb <zaslon_control>
    3aa8:	90 91 fc 12 	lds	r25, 0x12FC	; 0x8012fc <zaslon_control+0x1>
    3aac:	0e 94 f7 09 	call	0x13ee	; 0x13ee <eTaskGetState>
    3ab0:	83 30       	cpi	r24, 0x03	; 3
    3ab2:	39 f0       	breq	.+14     	; 0x3ac2 <_Z6zaslonPv+0xb8>
    3ab4:	80 91 fb 12 	lds	r24, 0x12FB	; 0x8012fb <zaslon_control>
    3ab8:	90 91 fc 12 	lds	r25, 0x12FC	; 0x8012fc <zaslon_control+0x1>
    3abc:	89 2b       	or	r24, r25
    3abe:	09 f0       	breq	.+2      	; 0x3ac2 <_Z6zaslonPv+0xb8>
    3ac0:	c1 e0       	ldi	r28, 0x01	; 1
    3ac2:	cc 23       	and	r28, r28
    3ac4:	31 f0       	breq	.+12     	; 0x3ad2 <_Z6zaslonPv+0xc8>
    3ac6:	80 91 fb 12 	lds	r24, 0x12FB	; 0x8012fb <zaslon_control>
    3aca:	90 91 fc 12 	lds	r25, 0x12FC	; 0x8012fc <zaslon_control+0x1>
    3ace:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <vTaskSuspend>
    3ad2:	8c e0       	ldi	r24, 0x0C	; 12
    3ad4:	90 e0       	ldi	r25, 0x00	; 0
    3ad6:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>
    3ada:	97 cf       	rjmp	.-210    	; 0x3a0a <_Z6zaslonPv>

00003adc <_Z7thermalPv>:

void thermal(void *paramOdTaska)
{
  while (true)
  {
    delay_FRTOS(6000);
    3adc:	87 e7       	ldi	r24, 0x77	; 119
    3ade:	91 e0       	ldi	r25, 0x01	; 1
    3ae0:	0e 94 cf 0c 	call	0x199e	; 0x199e <vTaskDelay>

    float AMP_Temp_S_Voltage = (float)readANALOG(1) * Hardware.REF_mVOLT / 1023.00f;
    3ae4:	81 e0       	ldi	r24, 0x01	; 1
    3ae6:	68 de       	rcall	.-816    	; 0x37b8 <_Z10readANALOGh>
    3ae8:	cc e9       	ldi	r28, 0x9C	; 156
    3aea:	d3 e1       	ldi	r29, 0x13	; 19
    3aec:	c8 80       	ld	r12, Y
    3aee:	d9 80       	ldd	r13, Y+1	; 0x01
    3af0:	ea 80       	ldd	r14, Y+2	; 0x02
    3af2:	fb 80       	ldd	r15, Y+3	; 0x03
    3af4:	bc 01       	movw	r22, r24
    3af6:	80 e0       	ldi	r24, 0x00	; 0
    3af8:	90 e0       	ldi	r25, 0x00	; 0
    3afa:	72 d1       	rcall	.+740    	; 0x3de0 <__floatunsisf>
    3afc:	a7 01       	movw	r20, r14
    3afe:	96 01       	movw	r18, r12
    3b00:	01 d2       	rcall	.+1026   	; 0x3f04 <__mulsf3>
    3b02:	20 e0       	ldi	r18, 0x00	; 0
    3b04:	30 ec       	ldi	r19, 0xC0	; 192
    3b06:	4f e7       	ldi	r20, 0x7F	; 127
    3b08:	54 e4       	ldi	r21, 0x44	; 68
    3b0a:	d6 d0       	rcall	.+428    	; 0x3cb8 <__divsf3>
    Hardware.Amplifier_temp = (float)(-0.073f) * (float)AMP_Temp_S_Voltage + 192.754f;
    3b0c:	26 e0       	ldi	r18, 0x06	; 6
    3b0e:	31 e8       	ldi	r19, 0x81	; 129
    3b10:	45 e9       	ldi	r20, 0x95	; 149
    3b12:	5d eb       	ldi	r21, 0xBD	; 189
    3b14:	f7 d1       	rcall	.+1006   	; 0x3f04 <__mulsf3>
    3b16:	26 e0       	ldi	r18, 0x06	; 6
    3b18:	31 ec       	ldi	r19, 0xC1	; 193
    3b1a:	40 e4       	ldi	r20, 0x40	; 64
    3b1c:	53 e4       	ldi	r21, 0x43	; 67
    3b1e:	68 d0       	rcall	.+208    	; 0x3bf0 <__addsf3>
    3b20:	6e 87       	std	Y+14, r22	; 0x0e
    3b22:	7f 87       	std	Y+15, r23	; 0x0f
    3b24:	88 8b       	std	Y+16, r24	; 0x10
    3b26:	99 8b       	std	Y+17, r25	; 0x11

    if (Hardware.Amplifier_temp > 60)
    3b28:	20 e0       	ldi	r18, 0x00	; 0
    3b2a:	30 e0       	ldi	r19, 0x00	; 0
    3b2c:	40 e7       	ldi	r20, 0x70	; 112
    3b2e:	52 e4       	ldi	r21, 0x42	; 66
    3b30:	e5 d1       	rcall	.+970    	; 0x3efc <__gesf2>
    3b32:	18 16       	cp	r1, r24
    3b34:	9c f6       	brge	.-90     	; 0x3adc <_Z7thermalPv>
    {
      Hardware.AMP_oheat = true;
    3b36:	81 e0       	ldi	r24, 0x01	; 1
    3b38:	80 93 a8 13 	sts	0x13A8, r24	; 0x8013a8 <Hardware+0xc>
      Shutdown();
    3b3c:	d6 da       	rcall	.-2644   	; 0x30ea <_Z8Shutdownv>
    3b3e:	ce cf       	rjmp	.-100    	; 0x3adc <_Z7thermalPv>

00003b40 <_ZN4VHOD8vrednostEv>:
    3b40:	fc 01       	movw	r30, r24
    3b42:	86 81       	ldd	r24, Z+6	; 0x06
    3b44:	82 34       	cpi	r24, 0x42	; 66
    3b46:	b9 f0       	breq	.+46     	; 0x3b76 <_ZN4VHOD8vrednostEv+0x36>
    3b48:	84 34       	cpi	r24, 0x44	; 68
    3b4a:	49 f5       	brne	.+82     	; 0x3b9e <_ZN4VHOD8vrednostEv+0x5e>
    3b4c:	49 b1       	in	r20, 0x09	; 9
    3b4e:	81 e0       	ldi	r24, 0x01	; 1
    3b50:	90 e0       	ldi	r25, 0x00	; 0
    3b52:	9c 01       	movw	r18, r24
    3b54:	04 80       	ldd	r0, Z+4	; 0x04
    3b56:	02 c0       	rjmp	.+4      	; 0x3b5c <_ZN4VHOD8vrednostEv+0x1c>
    3b58:	22 0f       	add	r18, r18
    3b5a:	33 1f       	adc	r19, r19
    3b5c:	0a 94       	dec	r0
    3b5e:	e2 f7       	brpl	.-8      	; 0x3b58 <_ZN4VHOD8vrednostEv+0x18>
    3b60:	84 2f       	mov	r24, r20
    3b62:	90 e0       	ldi	r25, 0x00	; 0
    3b64:	82 23       	and	r24, r18
    3b66:	93 23       	and	r25, r19
    3b68:	21 e0       	ldi	r18, 0x01	; 1
    3b6a:	18 16       	cp	r1, r24
    3b6c:	19 06       	cpc	r1, r25
    3b6e:	0c f0       	brlt	.+2      	; 0x3b72 <_ZN4VHOD8vrednostEv+0x32>
    3b70:	20 e0       	ldi	r18, 0x00	; 0
    3b72:	21 83       	std	Z+1, r18	; 0x01
    3b74:	14 c0       	rjmp	.+40     	; 0x3b9e <_ZN4VHOD8vrednostEv+0x5e>
    3b76:	43 b1       	in	r20, 0x03	; 3
    3b78:	81 e0       	ldi	r24, 0x01	; 1
    3b7a:	90 e0       	ldi	r25, 0x00	; 0
    3b7c:	9c 01       	movw	r18, r24
    3b7e:	04 80       	ldd	r0, Z+4	; 0x04
    3b80:	02 c0       	rjmp	.+4      	; 0x3b86 <_ZN4VHOD8vrednostEv+0x46>
    3b82:	22 0f       	add	r18, r18
    3b84:	33 1f       	adc	r19, r19
    3b86:	0a 94       	dec	r0
    3b88:	e2 f7       	brpl	.-8      	; 0x3b82 <_ZN4VHOD8vrednostEv+0x42>
    3b8a:	84 2f       	mov	r24, r20
    3b8c:	90 e0       	ldi	r25, 0x00	; 0
    3b8e:	82 23       	and	r24, r18
    3b90:	93 23       	and	r25, r19
    3b92:	21 e0       	ldi	r18, 0x01	; 1
    3b94:	18 16       	cp	r1, r24
    3b96:	19 06       	cpc	r1, r25
    3b98:	0c f0       	brlt	.+2      	; 0x3b9c <_ZN4VHOD8vrednostEv+0x5c>
    3b9a:	20 e0       	ldi	r18, 0x00	; 0
    3b9c:	21 83       	std	Z+1, r18	; 0x01
    3b9e:	87 81       	ldd	r24, Z+7	; 0x07
    3ba0:	90 85       	ldd	r25, Z+8	; 0x08
    3ba2:	89 2b       	or	r24, r25
    3ba4:	21 f0       	breq	.+8      	; 0x3bae <_ZN4VHOD8vrednostEv+0x6e>
    3ba6:	91 81       	ldd	r25, Z+1	; 0x01
    3ba8:	81 e0       	ldi	r24, 0x01	; 1
    3baa:	89 27       	eor	r24, r25
    3bac:	81 83       	std	Z+1, r24	; 0x01
    3bae:	90 81       	ld	r25, Z
    3bb0:	81 81       	ldd	r24, Z+1	; 0x01
    3bb2:	98 17       	cp	r25, r24
    3bb4:	31 f0       	breq	.+12     	; 0x3bc2 <_ZN4VHOD8vrednostEv+0x82>
    3bb6:	88 23       	and	r24, r24
    3bb8:	21 f0       	breq	.+8      	; 0x3bc2 <_ZN4VHOD8vrednostEv+0x82>
    3bba:	91 e0       	ldi	r25, 0x01	; 1
    3bbc:	92 83       	std	Z+2, r25	; 0x02
    3bbe:	80 83       	st	Z, r24
    3bc0:	08 95       	ret
    3bc2:	98 17       	cp	r25, r24
    3bc4:	19 f0       	breq	.+6      	; 0x3bcc <_ZN4VHOD8vrednostEv+0x8c>
    3bc6:	91 e0       	ldi	r25, 0x01	; 1
    3bc8:	93 83       	std	Z+3, r25	; 0x03
    3bca:	80 83       	st	Z, r24
    3bcc:	08 95       	ret

00003bce <_ZN4VHOD11fallingEdgeEv>:
    3bce:	cf 93       	push	r28
    3bd0:	df 93       	push	r29
    3bd2:	ec 01       	movw	r28, r24
    3bd4:	b5 df       	rcall	.-150    	; 0x3b40 <_ZN4VHOD8vrednostEv>
    3bd6:	89 81       	ldd	r24, Y+1	; 0x01
    3bd8:	88 23       	and	r24, r24
    3bda:	19 f0       	breq	.+6      	; 0x3be2 <_ZN4VHOD11fallingEdgeEv+0x14>
    3bdc:	1b 82       	std	Y+3, r1	; 0x03
    3bde:	80 e0       	ldi	r24, 0x00	; 0
    3be0:	03 c0       	rjmp	.+6      	; 0x3be8 <_ZN4VHOD11fallingEdgeEv+0x1a>
    3be2:	8b 81       	ldd	r24, Y+3	; 0x03
    3be4:	81 11       	cpse	r24, r1
    3be6:	1b 82       	std	Y+3, r1	; 0x03
    3be8:	df 91       	pop	r29
    3bea:	cf 91       	pop	r28
    3bec:	08 95       	ret

00003bee <__subsf3>:
    3bee:	50 58       	subi	r21, 0x80	; 128

00003bf0 <__addsf3>:
    3bf0:	bb 27       	eor	r27, r27
    3bf2:	aa 27       	eor	r26, r26
    3bf4:	0e d0       	rcall	.+28     	; 0x3c12 <__addsf3x>
    3bf6:	48 c1       	rjmp	.+656    	; 0x3e88 <__fp_round>
    3bf8:	39 d1       	rcall	.+626    	; 0x3e6c <__fp_pscA>
    3bfa:	30 f0       	brcs	.+12     	; 0x3c08 <__addsf3+0x18>
    3bfc:	3e d1       	rcall	.+636    	; 0x3e7a <__fp_pscB>
    3bfe:	20 f0       	brcs	.+8      	; 0x3c08 <__addsf3+0x18>
    3c00:	31 f4       	brne	.+12     	; 0x3c0e <__addsf3+0x1e>
    3c02:	9f 3f       	cpi	r25, 0xFF	; 255
    3c04:	11 f4       	brne	.+4      	; 0x3c0a <__addsf3+0x1a>
    3c06:	1e f4       	brtc	.+6      	; 0x3c0e <__addsf3+0x1e>
    3c08:	2e c1       	rjmp	.+604    	; 0x3e66 <__fp_nan>
    3c0a:	0e f4       	brtc	.+2      	; 0x3c0e <__addsf3+0x1e>
    3c0c:	e0 95       	com	r30
    3c0e:	e7 fb       	bst	r30, 7
    3c10:	24 c1       	rjmp	.+584    	; 0x3e5a <__fp_inf>

00003c12 <__addsf3x>:
    3c12:	e9 2f       	mov	r30, r25
    3c14:	4a d1       	rcall	.+660    	; 0x3eaa <__fp_split3>
    3c16:	80 f3       	brcs	.-32     	; 0x3bf8 <__addsf3+0x8>
    3c18:	ba 17       	cp	r27, r26
    3c1a:	62 07       	cpc	r22, r18
    3c1c:	73 07       	cpc	r23, r19
    3c1e:	84 07       	cpc	r24, r20
    3c20:	95 07       	cpc	r25, r21
    3c22:	18 f0       	brcs	.+6      	; 0x3c2a <__addsf3x+0x18>
    3c24:	71 f4       	brne	.+28     	; 0x3c42 <__addsf3x+0x30>
    3c26:	9e f5       	brtc	.+102    	; 0x3c8e <__addsf3x+0x7c>
    3c28:	62 c1       	rjmp	.+708    	; 0x3eee <__fp_zero>
    3c2a:	0e f4       	brtc	.+2      	; 0x3c2e <__addsf3x+0x1c>
    3c2c:	e0 95       	com	r30
    3c2e:	0b 2e       	mov	r0, r27
    3c30:	ba 2f       	mov	r27, r26
    3c32:	a0 2d       	mov	r26, r0
    3c34:	0b 01       	movw	r0, r22
    3c36:	b9 01       	movw	r22, r18
    3c38:	90 01       	movw	r18, r0
    3c3a:	0c 01       	movw	r0, r24
    3c3c:	ca 01       	movw	r24, r20
    3c3e:	a0 01       	movw	r20, r0
    3c40:	11 24       	eor	r1, r1
    3c42:	ff 27       	eor	r31, r31
    3c44:	59 1b       	sub	r21, r25
    3c46:	99 f0       	breq	.+38     	; 0x3c6e <__addsf3x+0x5c>
    3c48:	59 3f       	cpi	r21, 0xF9	; 249
    3c4a:	50 f4       	brcc	.+20     	; 0x3c60 <__addsf3x+0x4e>
    3c4c:	50 3e       	cpi	r21, 0xE0	; 224
    3c4e:	68 f1       	brcs	.+90     	; 0x3caa <__addsf3x+0x98>
    3c50:	1a 16       	cp	r1, r26
    3c52:	f0 40       	sbci	r31, 0x00	; 0
    3c54:	a2 2f       	mov	r26, r18
    3c56:	23 2f       	mov	r18, r19
    3c58:	34 2f       	mov	r19, r20
    3c5a:	44 27       	eor	r20, r20
    3c5c:	58 5f       	subi	r21, 0xF8	; 248
    3c5e:	f3 cf       	rjmp	.-26     	; 0x3c46 <__addsf3x+0x34>
    3c60:	46 95       	lsr	r20
    3c62:	37 95       	ror	r19
    3c64:	27 95       	ror	r18
    3c66:	a7 95       	ror	r26
    3c68:	f0 40       	sbci	r31, 0x00	; 0
    3c6a:	53 95       	inc	r21
    3c6c:	c9 f7       	brne	.-14     	; 0x3c60 <__addsf3x+0x4e>
    3c6e:	7e f4       	brtc	.+30     	; 0x3c8e <__addsf3x+0x7c>
    3c70:	1f 16       	cp	r1, r31
    3c72:	ba 0b       	sbc	r27, r26
    3c74:	62 0b       	sbc	r22, r18
    3c76:	73 0b       	sbc	r23, r19
    3c78:	84 0b       	sbc	r24, r20
    3c7a:	ba f0       	brmi	.+46     	; 0x3caa <__addsf3x+0x98>
    3c7c:	91 50       	subi	r25, 0x01	; 1
    3c7e:	a1 f0       	breq	.+40     	; 0x3ca8 <__addsf3x+0x96>
    3c80:	ff 0f       	add	r31, r31
    3c82:	bb 1f       	adc	r27, r27
    3c84:	66 1f       	adc	r22, r22
    3c86:	77 1f       	adc	r23, r23
    3c88:	88 1f       	adc	r24, r24
    3c8a:	c2 f7       	brpl	.-16     	; 0x3c7c <__addsf3x+0x6a>
    3c8c:	0e c0       	rjmp	.+28     	; 0x3caa <__addsf3x+0x98>
    3c8e:	ba 0f       	add	r27, r26
    3c90:	62 1f       	adc	r22, r18
    3c92:	73 1f       	adc	r23, r19
    3c94:	84 1f       	adc	r24, r20
    3c96:	48 f4       	brcc	.+18     	; 0x3caa <__addsf3x+0x98>
    3c98:	87 95       	ror	r24
    3c9a:	77 95       	ror	r23
    3c9c:	67 95       	ror	r22
    3c9e:	b7 95       	ror	r27
    3ca0:	f7 95       	ror	r31
    3ca2:	9e 3f       	cpi	r25, 0xFE	; 254
    3ca4:	08 f0       	brcs	.+2      	; 0x3ca8 <__addsf3x+0x96>
    3ca6:	b3 cf       	rjmp	.-154    	; 0x3c0e <__addsf3+0x1e>
    3ca8:	93 95       	inc	r25
    3caa:	88 0f       	add	r24, r24
    3cac:	08 f0       	brcs	.+2      	; 0x3cb0 <__addsf3x+0x9e>
    3cae:	99 27       	eor	r25, r25
    3cb0:	ee 0f       	add	r30, r30
    3cb2:	97 95       	ror	r25
    3cb4:	87 95       	ror	r24
    3cb6:	08 95       	ret

00003cb8 <__divsf3>:
    3cb8:	0c d0       	rcall	.+24     	; 0x3cd2 <__divsf3x>
    3cba:	e6 c0       	rjmp	.+460    	; 0x3e88 <__fp_round>
    3cbc:	de d0       	rcall	.+444    	; 0x3e7a <__fp_pscB>
    3cbe:	40 f0       	brcs	.+16     	; 0x3cd0 <__divsf3+0x18>
    3cc0:	d5 d0       	rcall	.+426    	; 0x3e6c <__fp_pscA>
    3cc2:	30 f0       	brcs	.+12     	; 0x3cd0 <__divsf3+0x18>
    3cc4:	21 f4       	brne	.+8      	; 0x3cce <__divsf3+0x16>
    3cc6:	5f 3f       	cpi	r21, 0xFF	; 255
    3cc8:	19 f0       	breq	.+6      	; 0x3cd0 <__divsf3+0x18>
    3cca:	c7 c0       	rjmp	.+398    	; 0x3e5a <__fp_inf>
    3ccc:	51 11       	cpse	r21, r1
    3cce:	10 c1       	rjmp	.+544    	; 0x3ef0 <__fp_szero>
    3cd0:	ca c0       	rjmp	.+404    	; 0x3e66 <__fp_nan>

00003cd2 <__divsf3x>:
    3cd2:	eb d0       	rcall	.+470    	; 0x3eaa <__fp_split3>
    3cd4:	98 f3       	brcs	.-26     	; 0x3cbc <__divsf3+0x4>

00003cd6 <__divsf3_pse>:
    3cd6:	99 23       	and	r25, r25
    3cd8:	c9 f3       	breq	.-14     	; 0x3ccc <__divsf3+0x14>
    3cda:	55 23       	and	r21, r21
    3cdc:	b1 f3       	breq	.-20     	; 0x3cca <__divsf3+0x12>
    3cde:	95 1b       	sub	r25, r21
    3ce0:	55 0b       	sbc	r21, r21
    3ce2:	bb 27       	eor	r27, r27
    3ce4:	aa 27       	eor	r26, r26
    3ce6:	62 17       	cp	r22, r18
    3ce8:	73 07       	cpc	r23, r19
    3cea:	84 07       	cpc	r24, r20
    3cec:	38 f0       	brcs	.+14     	; 0x3cfc <__divsf3_pse+0x26>
    3cee:	9f 5f       	subi	r25, 0xFF	; 255
    3cf0:	5f 4f       	sbci	r21, 0xFF	; 255
    3cf2:	22 0f       	add	r18, r18
    3cf4:	33 1f       	adc	r19, r19
    3cf6:	44 1f       	adc	r20, r20
    3cf8:	aa 1f       	adc	r26, r26
    3cfa:	a9 f3       	breq	.-22     	; 0x3ce6 <__divsf3_pse+0x10>
    3cfc:	33 d0       	rcall	.+102    	; 0x3d64 <__divsf3_pse+0x8e>
    3cfe:	0e 2e       	mov	r0, r30
    3d00:	3a f0       	brmi	.+14     	; 0x3d10 <__divsf3_pse+0x3a>
    3d02:	e0 e8       	ldi	r30, 0x80	; 128
    3d04:	30 d0       	rcall	.+96     	; 0x3d66 <__divsf3_pse+0x90>
    3d06:	91 50       	subi	r25, 0x01	; 1
    3d08:	50 40       	sbci	r21, 0x00	; 0
    3d0a:	e6 95       	lsr	r30
    3d0c:	00 1c       	adc	r0, r0
    3d0e:	ca f7       	brpl	.-14     	; 0x3d02 <__divsf3_pse+0x2c>
    3d10:	29 d0       	rcall	.+82     	; 0x3d64 <__divsf3_pse+0x8e>
    3d12:	fe 2f       	mov	r31, r30
    3d14:	27 d0       	rcall	.+78     	; 0x3d64 <__divsf3_pse+0x8e>
    3d16:	66 0f       	add	r22, r22
    3d18:	77 1f       	adc	r23, r23
    3d1a:	88 1f       	adc	r24, r24
    3d1c:	bb 1f       	adc	r27, r27
    3d1e:	26 17       	cp	r18, r22
    3d20:	37 07       	cpc	r19, r23
    3d22:	48 07       	cpc	r20, r24
    3d24:	ab 07       	cpc	r26, r27
    3d26:	b0 e8       	ldi	r27, 0x80	; 128
    3d28:	09 f0       	breq	.+2      	; 0x3d2c <__divsf3_pse+0x56>
    3d2a:	bb 0b       	sbc	r27, r27
    3d2c:	80 2d       	mov	r24, r0
    3d2e:	bf 01       	movw	r22, r30
    3d30:	ff 27       	eor	r31, r31
    3d32:	93 58       	subi	r25, 0x83	; 131
    3d34:	5f 4f       	sbci	r21, 0xFF	; 255
    3d36:	2a f0       	brmi	.+10     	; 0x3d42 <__divsf3_pse+0x6c>
    3d38:	9e 3f       	cpi	r25, 0xFE	; 254
    3d3a:	51 05       	cpc	r21, r1
    3d3c:	68 f0       	brcs	.+26     	; 0x3d58 <__divsf3_pse+0x82>
    3d3e:	8d c0       	rjmp	.+282    	; 0x3e5a <__fp_inf>
    3d40:	d7 c0       	rjmp	.+430    	; 0x3ef0 <__fp_szero>
    3d42:	5f 3f       	cpi	r21, 0xFF	; 255
    3d44:	ec f3       	brlt	.-6      	; 0x3d40 <__divsf3_pse+0x6a>
    3d46:	98 3e       	cpi	r25, 0xE8	; 232
    3d48:	dc f3       	brlt	.-10     	; 0x3d40 <__divsf3_pse+0x6a>
    3d4a:	86 95       	lsr	r24
    3d4c:	77 95       	ror	r23
    3d4e:	67 95       	ror	r22
    3d50:	b7 95       	ror	r27
    3d52:	f7 95       	ror	r31
    3d54:	9f 5f       	subi	r25, 0xFF	; 255
    3d56:	c9 f7       	brne	.-14     	; 0x3d4a <__divsf3_pse+0x74>
    3d58:	88 0f       	add	r24, r24
    3d5a:	91 1d       	adc	r25, r1
    3d5c:	96 95       	lsr	r25
    3d5e:	87 95       	ror	r24
    3d60:	97 f9       	bld	r25, 7
    3d62:	08 95       	ret
    3d64:	e1 e0       	ldi	r30, 0x01	; 1
    3d66:	66 0f       	add	r22, r22
    3d68:	77 1f       	adc	r23, r23
    3d6a:	88 1f       	adc	r24, r24
    3d6c:	bb 1f       	adc	r27, r27
    3d6e:	62 17       	cp	r22, r18
    3d70:	73 07       	cpc	r23, r19
    3d72:	84 07       	cpc	r24, r20
    3d74:	ba 07       	cpc	r27, r26
    3d76:	20 f0       	brcs	.+8      	; 0x3d80 <__divsf3_pse+0xaa>
    3d78:	62 1b       	sub	r22, r18
    3d7a:	73 0b       	sbc	r23, r19
    3d7c:	84 0b       	sbc	r24, r20
    3d7e:	ba 0b       	sbc	r27, r26
    3d80:	ee 1f       	adc	r30, r30
    3d82:	88 f7       	brcc	.-30     	; 0x3d66 <__divsf3_pse+0x90>
    3d84:	e0 95       	com	r30
    3d86:	08 95       	ret

00003d88 <__fixunssfsi>:
    3d88:	98 d0       	rcall	.+304    	; 0x3eba <__fp_splitA>
    3d8a:	88 f0       	brcs	.+34     	; 0x3dae <__fixunssfsi+0x26>
    3d8c:	9f 57       	subi	r25, 0x7F	; 127
    3d8e:	90 f0       	brcs	.+36     	; 0x3db4 <__fixunssfsi+0x2c>
    3d90:	b9 2f       	mov	r27, r25
    3d92:	99 27       	eor	r25, r25
    3d94:	b7 51       	subi	r27, 0x17	; 23
    3d96:	a0 f0       	brcs	.+40     	; 0x3dc0 <__fixunssfsi+0x38>
    3d98:	d1 f0       	breq	.+52     	; 0x3dce <__fixunssfsi+0x46>
    3d9a:	66 0f       	add	r22, r22
    3d9c:	77 1f       	adc	r23, r23
    3d9e:	88 1f       	adc	r24, r24
    3da0:	99 1f       	adc	r25, r25
    3da2:	1a f0       	brmi	.+6      	; 0x3daa <__fixunssfsi+0x22>
    3da4:	ba 95       	dec	r27
    3da6:	c9 f7       	brne	.-14     	; 0x3d9a <__fixunssfsi+0x12>
    3da8:	12 c0       	rjmp	.+36     	; 0x3dce <__fixunssfsi+0x46>
    3daa:	b1 30       	cpi	r27, 0x01	; 1
    3dac:	81 f0       	breq	.+32     	; 0x3dce <__fixunssfsi+0x46>
    3dae:	9f d0       	rcall	.+318    	; 0x3eee <__fp_zero>
    3db0:	b1 e0       	ldi	r27, 0x01	; 1
    3db2:	08 95       	ret
    3db4:	9c c0       	rjmp	.+312    	; 0x3eee <__fp_zero>
    3db6:	67 2f       	mov	r22, r23
    3db8:	78 2f       	mov	r23, r24
    3dba:	88 27       	eor	r24, r24
    3dbc:	b8 5f       	subi	r27, 0xF8	; 248
    3dbe:	39 f0       	breq	.+14     	; 0x3dce <__fixunssfsi+0x46>
    3dc0:	b9 3f       	cpi	r27, 0xF9	; 249
    3dc2:	cc f3       	brlt	.-14     	; 0x3db6 <__fixunssfsi+0x2e>
    3dc4:	86 95       	lsr	r24
    3dc6:	77 95       	ror	r23
    3dc8:	67 95       	ror	r22
    3dca:	b3 95       	inc	r27
    3dcc:	d9 f7       	brne	.-10     	; 0x3dc4 <__fixunssfsi+0x3c>
    3dce:	3e f4       	brtc	.+14     	; 0x3dde <__fixunssfsi+0x56>
    3dd0:	90 95       	com	r25
    3dd2:	80 95       	com	r24
    3dd4:	70 95       	com	r23
    3dd6:	61 95       	neg	r22
    3dd8:	7f 4f       	sbci	r23, 0xFF	; 255
    3dda:	8f 4f       	sbci	r24, 0xFF	; 255
    3ddc:	9f 4f       	sbci	r25, 0xFF	; 255
    3dde:	08 95       	ret

00003de0 <__floatunsisf>:
    3de0:	e8 94       	clt
    3de2:	09 c0       	rjmp	.+18     	; 0x3df6 <__floatsisf+0x12>

00003de4 <__floatsisf>:
    3de4:	97 fb       	bst	r25, 7
    3de6:	3e f4       	brtc	.+14     	; 0x3df6 <__floatsisf+0x12>
    3de8:	90 95       	com	r25
    3dea:	80 95       	com	r24
    3dec:	70 95       	com	r23
    3dee:	61 95       	neg	r22
    3df0:	7f 4f       	sbci	r23, 0xFF	; 255
    3df2:	8f 4f       	sbci	r24, 0xFF	; 255
    3df4:	9f 4f       	sbci	r25, 0xFF	; 255
    3df6:	99 23       	and	r25, r25
    3df8:	a9 f0       	breq	.+42     	; 0x3e24 <__floatsisf+0x40>
    3dfa:	f9 2f       	mov	r31, r25
    3dfc:	96 e9       	ldi	r25, 0x96	; 150
    3dfe:	bb 27       	eor	r27, r27
    3e00:	93 95       	inc	r25
    3e02:	f6 95       	lsr	r31
    3e04:	87 95       	ror	r24
    3e06:	77 95       	ror	r23
    3e08:	67 95       	ror	r22
    3e0a:	b7 95       	ror	r27
    3e0c:	f1 11       	cpse	r31, r1
    3e0e:	f8 cf       	rjmp	.-16     	; 0x3e00 <__floatsisf+0x1c>
    3e10:	fa f4       	brpl	.+62     	; 0x3e50 <__floatsisf+0x6c>
    3e12:	bb 0f       	add	r27, r27
    3e14:	11 f4       	brne	.+4      	; 0x3e1a <__floatsisf+0x36>
    3e16:	60 ff       	sbrs	r22, 0
    3e18:	1b c0       	rjmp	.+54     	; 0x3e50 <__floatsisf+0x6c>
    3e1a:	6f 5f       	subi	r22, 0xFF	; 255
    3e1c:	7f 4f       	sbci	r23, 0xFF	; 255
    3e1e:	8f 4f       	sbci	r24, 0xFF	; 255
    3e20:	9f 4f       	sbci	r25, 0xFF	; 255
    3e22:	16 c0       	rjmp	.+44     	; 0x3e50 <__floatsisf+0x6c>
    3e24:	88 23       	and	r24, r24
    3e26:	11 f0       	breq	.+4      	; 0x3e2c <__floatsisf+0x48>
    3e28:	96 e9       	ldi	r25, 0x96	; 150
    3e2a:	11 c0       	rjmp	.+34     	; 0x3e4e <__floatsisf+0x6a>
    3e2c:	77 23       	and	r23, r23
    3e2e:	21 f0       	breq	.+8      	; 0x3e38 <__floatsisf+0x54>
    3e30:	9e e8       	ldi	r25, 0x8E	; 142
    3e32:	87 2f       	mov	r24, r23
    3e34:	76 2f       	mov	r23, r22
    3e36:	05 c0       	rjmp	.+10     	; 0x3e42 <__floatsisf+0x5e>
    3e38:	66 23       	and	r22, r22
    3e3a:	71 f0       	breq	.+28     	; 0x3e58 <__floatsisf+0x74>
    3e3c:	96 e8       	ldi	r25, 0x86	; 134
    3e3e:	86 2f       	mov	r24, r22
    3e40:	70 e0       	ldi	r23, 0x00	; 0
    3e42:	60 e0       	ldi	r22, 0x00	; 0
    3e44:	2a f0       	brmi	.+10     	; 0x3e50 <__floatsisf+0x6c>
    3e46:	9a 95       	dec	r25
    3e48:	66 0f       	add	r22, r22
    3e4a:	77 1f       	adc	r23, r23
    3e4c:	88 1f       	adc	r24, r24
    3e4e:	da f7       	brpl	.-10     	; 0x3e46 <__floatsisf+0x62>
    3e50:	88 0f       	add	r24, r24
    3e52:	96 95       	lsr	r25
    3e54:	87 95       	ror	r24
    3e56:	97 f9       	bld	r25, 7
    3e58:	08 95       	ret

00003e5a <__fp_inf>:
    3e5a:	97 f9       	bld	r25, 7
    3e5c:	9f 67       	ori	r25, 0x7F	; 127
    3e5e:	80 e8       	ldi	r24, 0x80	; 128
    3e60:	70 e0       	ldi	r23, 0x00	; 0
    3e62:	60 e0       	ldi	r22, 0x00	; 0
    3e64:	08 95       	ret

00003e66 <__fp_nan>:
    3e66:	9f ef       	ldi	r25, 0xFF	; 255
    3e68:	80 ec       	ldi	r24, 0xC0	; 192
    3e6a:	08 95       	ret

00003e6c <__fp_pscA>:
    3e6c:	00 24       	eor	r0, r0
    3e6e:	0a 94       	dec	r0
    3e70:	16 16       	cp	r1, r22
    3e72:	17 06       	cpc	r1, r23
    3e74:	18 06       	cpc	r1, r24
    3e76:	09 06       	cpc	r0, r25
    3e78:	08 95       	ret

00003e7a <__fp_pscB>:
    3e7a:	00 24       	eor	r0, r0
    3e7c:	0a 94       	dec	r0
    3e7e:	12 16       	cp	r1, r18
    3e80:	13 06       	cpc	r1, r19
    3e82:	14 06       	cpc	r1, r20
    3e84:	05 06       	cpc	r0, r21
    3e86:	08 95       	ret

00003e88 <__fp_round>:
    3e88:	09 2e       	mov	r0, r25
    3e8a:	03 94       	inc	r0
    3e8c:	00 0c       	add	r0, r0
    3e8e:	11 f4       	brne	.+4      	; 0x3e94 <__fp_round+0xc>
    3e90:	88 23       	and	r24, r24
    3e92:	52 f0       	brmi	.+20     	; 0x3ea8 <__fp_round+0x20>
    3e94:	bb 0f       	add	r27, r27
    3e96:	40 f4       	brcc	.+16     	; 0x3ea8 <__fp_round+0x20>
    3e98:	bf 2b       	or	r27, r31
    3e9a:	11 f4       	brne	.+4      	; 0x3ea0 <__fp_round+0x18>
    3e9c:	60 ff       	sbrs	r22, 0
    3e9e:	04 c0       	rjmp	.+8      	; 0x3ea8 <__fp_round+0x20>
    3ea0:	6f 5f       	subi	r22, 0xFF	; 255
    3ea2:	7f 4f       	sbci	r23, 0xFF	; 255
    3ea4:	8f 4f       	sbci	r24, 0xFF	; 255
    3ea6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ea8:	08 95       	ret

00003eaa <__fp_split3>:
    3eaa:	57 fd       	sbrc	r21, 7
    3eac:	90 58       	subi	r25, 0x80	; 128
    3eae:	44 0f       	add	r20, r20
    3eb0:	55 1f       	adc	r21, r21
    3eb2:	59 f0       	breq	.+22     	; 0x3eca <__fp_splitA+0x10>
    3eb4:	5f 3f       	cpi	r21, 0xFF	; 255
    3eb6:	71 f0       	breq	.+28     	; 0x3ed4 <__fp_splitA+0x1a>
    3eb8:	47 95       	ror	r20

00003eba <__fp_splitA>:
    3eba:	88 0f       	add	r24, r24
    3ebc:	97 fb       	bst	r25, 7
    3ebe:	99 1f       	adc	r25, r25
    3ec0:	61 f0       	breq	.+24     	; 0x3eda <__fp_splitA+0x20>
    3ec2:	9f 3f       	cpi	r25, 0xFF	; 255
    3ec4:	79 f0       	breq	.+30     	; 0x3ee4 <__fp_splitA+0x2a>
    3ec6:	87 95       	ror	r24
    3ec8:	08 95       	ret
    3eca:	12 16       	cp	r1, r18
    3ecc:	13 06       	cpc	r1, r19
    3ece:	14 06       	cpc	r1, r20
    3ed0:	55 1f       	adc	r21, r21
    3ed2:	f2 cf       	rjmp	.-28     	; 0x3eb8 <__fp_split3+0xe>
    3ed4:	46 95       	lsr	r20
    3ed6:	f1 df       	rcall	.-30     	; 0x3eba <__fp_splitA>
    3ed8:	08 c0       	rjmp	.+16     	; 0x3eea <__fp_splitA+0x30>
    3eda:	16 16       	cp	r1, r22
    3edc:	17 06       	cpc	r1, r23
    3ede:	18 06       	cpc	r1, r24
    3ee0:	99 1f       	adc	r25, r25
    3ee2:	f1 cf       	rjmp	.-30     	; 0x3ec6 <__fp_splitA+0xc>
    3ee4:	86 95       	lsr	r24
    3ee6:	71 05       	cpc	r23, r1
    3ee8:	61 05       	cpc	r22, r1
    3eea:	08 94       	sec
    3eec:	08 95       	ret

00003eee <__fp_zero>:
    3eee:	e8 94       	clt

00003ef0 <__fp_szero>:
    3ef0:	bb 27       	eor	r27, r27
    3ef2:	66 27       	eor	r22, r22
    3ef4:	77 27       	eor	r23, r23
    3ef6:	cb 01       	movw	r24, r22
    3ef8:	97 f9       	bld	r25, 7
    3efa:	08 95       	ret

00003efc <__gesf2>:
    3efc:	66 d0       	rcall	.+204    	; 0x3fca <__fp_cmp>
    3efe:	08 f4       	brcc	.+2      	; 0x3f02 <__gesf2+0x6>
    3f00:	8f ef       	ldi	r24, 0xFF	; 255
    3f02:	08 95       	ret

00003f04 <__mulsf3>:
    3f04:	0b d0       	rcall	.+22     	; 0x3f1c <__mulsf3x>
    3f06:	c0 cf       	rjmp	.-128    	; 0x3e88 <__fp_round>
    3f08:	b1 df       	rcall	.-158    	; 0x3e6c <__fp_pscA>
    3f0a:	28 f0       	brcs	.+10     	; 0x3f16 <__mulsf3+0x12>
    3f0c:	b6 df       	rcall	.-148    	; 0x3e7a <__fp_pscB>
    3f0e:	18 f0       	brcs	.+6      	; 0x3f16 <__mulsf3+0x12>
    3f10:	95 23       	and	r25, r21
    3f12:	09 f0       	breq	.+2      	; 0x3f16 <__mulsf3+0x12>
    3f14:	a2 cf       	rjmp	.-188    	; 0x3e5a <__fp_inf>
    3f16:	a7 cf       	rjmp	.-178    	; 0x3e66 <__fp_nan>
    3f18:	11 24       	eor	r1, r1
    3f1a:	ea cf       	rjmp	.-44     	; 0x3ef0 <__fp_szero>

00003f1c <__mulsf3x>:
    3f1c:	c6 df       	rcall	.-116    	; 0x3eaa <__fp_split3>
    3f1e:	a0 f3       	brcs	.-24     	; 0x3f08 <__mulsf3+0x4>

00003f20 <__mulsf3_pse>:
    3f20:	95 9f       	mul	r25, r21
    3f22:	d1 f3       	breq	.-12     	; 0x3f18 <__mulsf3+0x14>
    3f24:	95 0f       	add	r25, r21
    3f26:	50 e0       	ldi	r21, 0x00	; 0
    3f28:	55 1f       	adc	r21, r21
    3f2a:	62 9f       	mul	r22, r18
    3f2c:	f0 01       	movw	r30, r0
    3f2e:	72 9f       	mul	r23, r18
    3f30:	bb 27       	eor	r27, r27
    3f32:	f0 0d       	add	r31, r0
    3f34:	b1 1d       	adc	r27, r1
    3f36:	63 9f       	mul	r22, r19
    3f38:	aa 27       	eor	r26, r26
    3f3a:	f0 0d       	add	r31, r0
    3f3c:	b1 1d       	adc	r27, r1
    3f3e:	aa 1f       	adc	r26, r26
    3f40:	64 9f       	mul	r22, r20
    3f42:	66 27       	eor	r22, r22
    3f44:	b0 0d       	add	r27, r0
    3f46:	a1 1d       	adc	r26, r1
    3f48:	66 1f       	adc	r22, r22
    3f4a:	82 9f       	mul	r24, r18
    3f4c:	22 27       	eor	r18, r18
    3f4e:	b0 0d       	add	r27, r0
    3f50:	a1 1d       	adc	r26, r1
    3f52:	62 1f       	adc	r22, r18
    3f54:	73 9f       	mul	r23, r19
    3f56:	b0 0d       	add	r27, r0
    3f58:	a1 1d       	adc	r26, r1
    3f5a:	62 1f       	adc	r22, r18
    3f5c:	83 9f       	mul	r24, r19
    3f5e:	a0 0d       	add	r26, r0
    3f60:	61 1d       	adc	r22, r1
    3f62:	22 1f       	adc	r18, r18
    3f64:	74 9f       	mul	r23, r20
    3f66:	33 27       	eor	r19, r19
    3f68:	a0 0d       	add	r26, r0
    3f6a:	61 1d       	adc	r22, r1
    3f6c:	23 1f       	adc	r18, r19
    3f6e:	84 9f       	mul	r24, r20
    3f70:	60 0d       	add	r22, r0
    3f72:	21 1d       	adc	r18, r1
    3f74:	82 2f       	mov	r24, r18
    3f76:	76 2f       	mov	r23, r22
    3f78:	6a 2f       	mov	r22, r26
    3f7a:	11 24       	eor	r1, r1
    3f7c:	9f 57       	subi	r25, 0x7F	; 127
    3f7e:	50 40       	sbci	r21, 0x00	; 0
    3f80:	8a f0       	brmi	.+34     	; 0x3fa4 <__mulsf3_pse+0x84>
    3f82:	e1 f0       	breq	.+56     	; 0x3fbc <__mulsf3_pse+0x9c>
    3f84:	88 23       	and	r24, r24
    3f86:	4a f0       	brmi	.+18     	; 0x3f9a <__mulsf3_pse+0x7a>
    3f88:	ee 0f       	add	r30, r30
    3f8a:	ff 1f       	adc	r31, r31
    3f8c:	bb 1f       	adc	r27, r27
    3f8e:	66 1f       	adc	r22, r22
    3f90:	77 1f       	adc	r23, r23
    3f92:	88 1f       	adc	r24, r24
    3f94:	91 50       	subi	r25, 0x01	; 1
    3f96:	50 40       	sbci	r21, 0x00	; 0
    3f98:	a9 f7       	brne	.-22     	; 0x3f84 <__mulsf3_pse+0x64>
    3f9a:	9e 3f       	cpi	r25, 0xFE	; 254
    3f9c:	51 05       	cpc	r21, r1
    3f9e:	70 f0       	brcs	.+28     	; 0x3fbc <__mulsf3_pse+0x9c>
    3fa0:	5c cf       	rjmp	.-328    	; 0x3e5a <__fp_inf>
    3fa2:	a6 cf       	rjmp	.-180    	; 0x3ef0 <__fp_szero>
    3fa4:	5f 3f       	cpi	r21, 0xFF	; 255
    3fa6:	ec f3       	brlt	.-6      	; 0x3fa2 <__mulsf3_pse+0x82>
    3fa8:	98 3e       	cpi	r25, 0xE8	; 232
    3faa:	dc f3       	brlt	.-10     	; 0x3fa2 <__mulsf3_pse+0x82>
    3fac:	86 95       	lsr	r24
    3fae:	77 95       	ror	r23
    3fb0:	67 95       	ror	r22
    3fb2:	b7 95       	ror	r27
    3fb4:	f7 95       	ror	r31
    3fb6:	e7 95       	ror	r30
    3fb8:	9f 5f       	subi	r25, 0xFF	; 255
    3fba:	c1 f7       	brne	.-16     	; 0x3fac <__mulsf3_pse+0x8c>
    3fbc:	fe 2b       	or	r31, r30
    3fbe:	88 0f       	add	r24, r24
    3fc0:	91 1d       	adc	r25, r1
    3fc2:	96 95       	lsr	r25
    3fc4:	87 95       	ror	r24
    3fc6:	97 f9       	bld	r25, 7
    3fc8:	08 95       	ret

00003fca <__fp_cmp>:
    3fca:	99 0f       	add	r25, r25
    3fcc:	00 08       	sbc	r0, r0
    3fce:	55 0f       	add	r21, r21
    3fd0:	aa 0b       	sbc	r26, r26
    3fd2:	e0 e8       	ldi	r30, 0x80	; 128
    3fd4:	fe ef       	ldi	r31, 0xFE	; 254
    3fd6:	16 16       	cp	r1, r22
    3fd8:	17 06       	cpc	r1, r23
    3fda:	e8 07       	cpc	r30, r24
    3fdc:	f9 07       	cpc	r31, r25
    3fde:	c0 f0       	brcs	.+48     	; 0x4010 <__fp_cmp+0x46>
    3fe0:	12 16       	cp	r1, r18
    3fe2:	13 06       	cpc	r1, r19
    3fe4:	e4 07       	cpc	r30, r20
    3fe6:	f5 07       	cpc	r31, r21
    3fe8:	98 f0       	brcs	.+38     	; 0x4010 <__fp_cmp+0x46>
    3fea:	62 1b       	sub	r22, r18
    3fec:	73 0b       	sbc	r23, r19
    3fee:	84 0b       	sbc	r24, r20
    3ff0:	95 0b       	sbc	r25, r21
    3ff2:	39 f4       	brne	.+14     	; 0x4002 <__fp_cmp+0x38>
    3ff4:	0a 26       	eor	r0, r26
    3ff6:	61 f0       	breq	.+24     	; 0x4010 <__fp_cmp+0x46>
    3ff8:	23 2b       	or	r18, r19
    3ffa:	24 2b       	or	r18, r20
    3ffc:	25 2b       	or	r18, r21
    3ffe:	21 f4       	brne	.+8      	; 0x4008 <__fp_cmp+0x3e>
    4000:	08 95       	ret
    4002:	0a 26       	eor	r0, r26
    4004:	09 f4       	brne	.+2      	; 0x4008 <__fp_cmp+0x3e>
    4006:	a1 40       	sbci	r26, 0x01	; 1
    4008:	a6 95       	lsr	r26
    400a:	8f ef       	ldi	r24, 0xFF	; 255
    400c:	81 1d       	adc	r24, r1
    400e:	81 1d       	adc	r24, r1
    4010:	08 95       	ret

00004012 <__divmodhi4>:
    4012:	97 fb       	bst	r25, 7
    4014:	07 2e       	mov	r0, r23
    4016:	16 f4       	brtc	.+4      	; 0x401c <__divmodhi4+0xa>
    4018:	00 94       	com	r0
    401a:	06 d0       	rcall	.+12     	; 0x4028 <__divmodhi4_neg1>
    401c:	77 fd       	sbrc	r23, 7
    401e:	08 d0       	rcall	.+16     	; 0x4030 <__divmodhi4_neg2>
    4020:	44 d0       	rcall	.+136    	; 0x40aa <__udivmodhi4>
    4022:	07 fc       	sbrc	r0, 7
    4024:	05 d0       	rcall	.+10     	; 0x4030 <__divmodhi4_neg2>
    4026:	3e f4       	brtc	.+14     	; 0x4036 <__divmodhi4_exit>

00004028 <__divmodhi4_neg1>:
    4028:	90 95       	com	r25
    402a:	81 95       	neg	r24
    402c:	9f 4f       	sbci	r25, 0xFF	; 255
    402e:	08 95       	ret

00004030 <__divmodhi4_neg2>:
    4030:	70 95       	com	r23
    4032:	61 95       	neg	r22
    4034:	7f 4f       	sbci	r23, 0xFF	; 255

00004036 <__divmodhi4_exit>:
    4036:	08 95       	ret

00004038 <__udivmodsi4>:
    4038:	a1 e2       	ldi	r26, 0x21	; 33
    403a:	1a 2e       	mov	r1, r26
    403c:	aa 1b       	sub	r26, r26
    403e:	bb 1b       	sub	r27, r27
    4040:	fd 01       	movw	r30, r26
    4042:	0d c0       	rjmp	.+26     	; 0x405e <__udivmodsi4_ep>

00004044 <__udivmodsi4_loop>:
    4044:	aa 1f       	adc	r26, r26
    4046:	bb 1f       	adc	r27, r27
    4048:	ee 1f       	adc	r30, r30
    404a:	ff 1f       	adc	r31, r31
    404c:	a2 17       	cp	r26, r18
    404e:	b3 07       	cpc	r27, r19
    4050:	e4 07       	cpc	r30, r20
    4052:	f5 07       	cpc	r31, r21
    4054:	20 f0       	brcs	.+8      	; 0x405e <__udivmodsi4_ep>
    4056:	a2 1b       	sub	r26, r18
    4058:	b3 0b       	sbc	r27, r19
    405a:	e4 0b       	sbc	r30, r20
    405c:	f5 0b       	sbc	r31, r21

0000405e <__udivmodsi4_ep>:
    405e:	66 1f       	adc	r22, r22
    4060:	77 1f       	adc	r23, r23
    4062:	88 1f       	adc	r24, r24
    4064:	99 1f       	adc	r25, r25
    4066:	1a 94       	dec	r1
    4068:	69 f7       	brne	.-38     	; 0x4044 <__udivmodsi4_loop>
    406a:	60 95       	com	r22
    406c:	70 95       	com	r23
    406e:	80 95       	com	r24
    4070:	90 95       	com	r25
    4072:	9b 01       	movw	r18, r22
    4074:	ac 01       	movw	r20, r24
    4076:	bd 01       	movw	r22, r26
    4078:	cf 01       	movw	r24, r30
    407a:	08 95       	ret

0000407c <__tablejump2__>:
    407c:	ee 0f       	add	r30, r30
    407e:	ff 1f       	adc	r31, r31
    4080:	88 1f       	adc	r24, r24
    4082:	8b bf       	out	0x3b, r24	; 59
    4084:	07 90       	elpm	r0, Z+
    4086:	f6 91       	elpm	r31, Z
    4088:	e0 2d       	mov	r30, r0
    408a:	19 94       	eijmp

0000408c <__umulhisi3>:
    408c:	a2 9f       	mul	r26, r18
    408e:	b0 01       	movw	r22, r0
    4090:	b3 9f       	mul	r27, r19
    4092:	c0 01       	movw	r24, r0
    4094:	a3 9f       	mul	r26, r19
    4096:	70 0d       	add	r23, r0
    4098:	81 1d       	adc	r24, r1
    409a:	11 24       	eor	r1, r1
    409c:	91 1d       	adc	r25, r1
    409e:	b2 9f       	mul	r27, r18
    40a0:	70 0d       	add	r23, r0
    40a2:	81 1d       	adc	r24, r1
    40a4:	11 24       	eor	r1, r1
    40a6:	91 1d       	adc	r25, r1
    40a8:	08 95       	ret

000040aa <__udivmodhi4>:
    40aa:	aa 1b       	sub	r26, r26
    40ac:	bb 1b       	sub	r27, r27
    40ae:	51 e1       	ldi	r21, 0x11	; 17
    40b0:	07 c0       	rjmp	.+14     	; 0x40c0 <__udivmodhi4_ep>

000040b2 <__udivmodhi4_loop>:
    40b2:	aa 1f       	adc	r26, r26
    40b4:	bb 1f       	adc	r27, r27
    40b6:	a6 17       	cp	r26, r22
    40b8:	b7 07       	cpc	r27, r23
    40ba:	10 f0       	brcs	.+4      	; 0x40c0 <__udivmodhi4_ep>
    40bc:	a6 1b       	sub	r26, r22
    40be:	b7 0b       	sbc	r27, r23

000040c0 <__udivmodhi4_ep>:
    40c0:	88 1f       	adc	r24, r24
    40c2:	99 1f       	adc	r25, r25
    40c4:	5a 95       	dec	r21
    40c6:	a9 f7       	brne	.-22     	; 0x40b2 <__udivmodhi4_loop>
    40c8:	80 95       	com	r24
    40ca:	90 95       	com	r25
    40cc:	bc 01       	movw	r22, r24
    40ce:	cd 01       	movw	r24, r26
    40d0:	08 95       	ret

000040d2 <malloc>:
    40d2:	0f 93       	push	r16
    40d4:	1f 93       	push	r17
    40d6:	cf 93       	push	r28
    40d8:	df 93       	push	r29
    40da:	82 30       	cpi	r24, 0x02	; 2
    40dc:	91 05       	cpc	r25, r1
    40de:	10 f4       	brcc	.+4      	; 0x40e4 <malloc+0x12>
    40e0:	82 e0       	ldi	r24, 0x02	; 2
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	e0 91 b6 13 	lds	r30, 0x13B6	; 0x8013b6 <__flp>
    40e8:	f0 91 b7 13 	lds	r31, 0x13B7	; 0x8013b7 <__flp+0x1>
    40ec:	20 e0       	ldi	r18, 0x00	; 0
    40ee:	30 e0       	ldi	r19, 0x00	; 0
    40f0:	a0 e0       	ldi	r26, 0x00	; 0
    40f2:	b0 e0       	ldi	r27, 0x00	; 0
    40f4:	30 97       	sbiw	r30, 0x00	; 0
    40f6:	19 f1       	breq	.+70     	; 0x413e <malloc+0x6c>
    40f8:	40 81       	ld	r20, Z
    40fa:	51 81       	ldd	r21, Z+1	; 0x01
    40fc:	02 81       	ldd	r16, Z+2	; 0x02
    40fe:	13 81       	ldd	r17, Z+3	; 0x03
    4100:	48 17       	cp	r20, r24
    4102:	59 07       	cpc	r21, r25
    4104:	c8 f0       	brcs	.+50     	; 0x4138 <malloc+0x66>
    4106:	84 17       	cp	r24, r20
    4108:	95 07       	cpc	r25, r21
    410a:	69 f4       	brne	.+26     	; 0x4126 <malloc+0x54>
    410c:	10 97       	sbiw	r26, 0x00	; 0
    410e:	31 f0       	breq	.+12     	; 0x411c <malloc+0x4a>
    4110:	12 96       	adiw	r26, 0x02	; 2
    4112:	0c 93       	st	X, r16
    4114:	12 97       	sbiw	r26, 0x02	; 2
    4116:	13 96       	adiw	r26, 0x03	; 3
    4118:	1c 93       	st	X, r17
    411a:	27 c0       	rjmp	.+78     	; 0x416a <malloc+0x98>
    411c:	00 93 b6 13 	sts	0x13B6, r16	; 0x8013b6 <__flp>
    4120:	10 93 b7 13 	sts	0x13B7, r17	; 0x8013b7 <__flp+0x1>
    4124:	22 c0       	rjmp	.+68     	; 0x416a <malloc+0x98>
    4126:	21 15       	cp	r18, r1
    4128:	31 05       	cpc	r19, r1
    412a:	19 f0       	breq	.+6      	; 0x4132 <malloc+0x60>
    412c:	42 17       	cp	r20, r18
    412e:	53 07       	cpc	r21, r19
    4130:	18 f4       	brcc	.+6      	; 0x4138 <malloc+0x66>
    4132:	9a 01       	movw	r18, r20
    4134:	bd 01       	movw	r22, r26
    4136:	ef 01       	movw	r28, r30
    4138:	df 01       	movw	r26, r30
    413a:	f8 01       	movw	r30, r16
    413c:	db cf       	rjmp	.-74     	; 0x40f4 <malloc+0x22>
    413e:	21 15       	cp	r18, r1
    4140:	31 05       	cpc	r19, r1
    4142:	f9 f0       	breq	.+62     	; 0x4182 <malloc+0xb0>
    4144:	28 1b       	sub	r18, r24
    4146:	39 0b       	sbc	r19, r25
    4148:	24 30       	cpi	r18, 0x04	; 4
    414a:	31 05       	cpc	r19, r1
    414c:	80 f4       	brcc	.+32     	; 0x416e <malloc+0x9c>
    414e:	8a 81       	ldd	r24, Y+2	; 0x02
    4150:	9b 81       	ldd	r25, Y+3	; 0x03
    4152:	61 15       	cp	r22, r1
    4154:	71 05       	cpc	r23, r1
    4156:	21 f0       	breq	.+8      	; 0x4160 <malloc+0x8e>
    4158:	fb 01       	movw	r30, r22
    415a:	93 83       	std	Z+3, r25	; 0x03
    415c:	82 83       	std	Z+2, r24	; 0x02
    415e:	04 c0       	rjmp	.+8      	; 0x4168 <malloc+0x96>
    4160:	90 93 b7 13 	sts	0x13B7, r25	; 0x8013b7 <__flp+0x1>
    4164:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <__flp>
    4168:	fe 01       	movw	r30, r28
    416a:	32 96       	adiw	r30, 0x02	; 2
    416c:	44 c0       	rjmp	.+136    	; 0x41f6 <malloc+0x124>
    416e:	fe 01       	movw	r30, r28
    4170:	e2 0f       	add	r30, r18
    4172:	f3 1f       	adc	r31, r19
    4174:	81 93       	st	Z+, r24
    4176:	91 93       	st	Z+, r25
    4178:	22 50       	subi	r18, 0x02	; 2
    417a:	31 09       	sbc	r19, r1
    417c:	39 83       	std	Y+1, r19	; 0x01
    417e:	28 83       	st	Y, r18
    4180:	3a c0       	rjmp	.+116    	; 0x41f6 <malloc+0x124>
    4182:	20 91 b4 13 	lds	r18, 0x13B4	; 0x8013b4 <__brkval>
    4186:	30 91 b5 13 	lds	r19, 0x13B5	; 0x8013b5 <__brkval+0x1>
    418a:	23 2b       	or	r18, r19
    418c:	41 f4       	brne	.+16     	; 0x419e <malloc+0xcc>
    418e:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    4192:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    4196:	30 93 b5 13 	sts	0x13B5, r19	; 0x8013b5 <__brkval+0x1>
    419a:	20 93 b4 13 	sts	0x13B4, r18	; 0x8013b4 <__brkval>
    419e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    41a2:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    41a6:	21 15       	cp	r18, r1
    41a8:	31 05       	cpc	r19, r1
    41aa:	41 f4       	brne	.+16     	; 0x41bc <malloc+0xea>
    41ac:	2d b7       	in	r18, 0x3d	; 61
    41ae:	3e b7       	in	r19, 0x3e	; 62
    41b0:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    41b4:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    41b8:	24 1b       	sub	r18, r20
    41ba:	35 0b       	sbc	r19, r21
    41bc:	e0 91 b4 13 	lds	r30, 0x13B4	; 0x8013b4 <__brkval>
    41c0:	f0 91 b5 13 	lds	r31, 0x13B5	; 0x8013b5 <__brkval+0x1>
    41c4:	e2 17       	cp	r30, r18
    41c6:	f3 07       	cpc	r31, r19
    41c8:	a0 f4       	brcc	.+40     	; 0x41f2 <malloc+0x120>
    41ca:	2e 1b       	sub	r18, r30
    41cc:	3f 0b       	sbc	r19, r31
    41ce:	28 17       	cp	r18, r24
    41d0:	39 07       	cpc	r19, r25
    41d2:	78 f0       	brcs	.+30     	; 0x41f2 <malloc+0x120>
    41d4:	ac 01       	movw	r20, r24
    41d6:	4e 5f       	subi	r20, 0xFE	; 254
    41d8:	5f 4f       	sbci	r21, 0xFF	; 255
    41da:	24 17       	cp	r18, r20
    41dc:	35 07       	cpc	r19, r21
    41de:	48 f0       	brcs	.+18     	; 0x41f2 <malloc+0x120>
    41e0:	4e 0f       	add	r20, r30
    41e2:	5f 1f       	adc	r21, r31
    41e4:	50 93 b5 13 	sts	0x13B5, r21	; 0x8013b5 <__brkval+0x1>
    41e8:	40 93 b4 13 	sts	0x13B4, r20	; 0x8013b4 <__brkval>
    41ec:	81 93       	st	Z+, r24
    41ee:	91 93       	st	Z+, r25
    41f0:	02 c0       	rjmp	.+4      	; 0x41f6 <malloc+0x124>
    41f2:	e0 e0       	ldi	r30, 0x00	; 0
    41f4:	f0 e0       	ldi	r31, 0x00	; 0
    41f6:	cf 01       	movw	r24, r30
    41f8:	df 91       	pop	r29
    41fa:	cf 91       	pop	r28
    41fc:	1f 91       	pop	r17
    41fe:	0f 91       	pop	r16
    4200:	08 95       	ret

00004202 <free>:
    4202:	cf 93       	push	r28
    4204:	df 93       	push	r29
    4206:	00 97       	sbiw	r24, 0x00	; 0
    4208:	09 f4       	brne	.+2      	; 0x420c <free+0xa>
    420a:	81 c0       	rjmp	.+258    	; 0x430e <free+0x10c>
    420c:	fc 01       	movw	r30, r24
    420e:	32 97       	sbiw	r30, 0x02	; 2
    4210:	13 82       	std	Z+3, r1	; 0x03
    4212:	12 82       	std	Z+2, r1	; 0x02
    4214:	a0 91 b6 13 	lds	r26, 0x13B6	; 0x8013b6 <__flp>
    4218:	b0 91 b7 13 	lds	r27, 0x13B7	; 0x8013b7 <__flp+0x1>
    421c:	10 97       	sbiw	r26, 0x00	; 0
    421e:	81 f4       	brne	.+32     	; 0x4240 <free+0x3e>
    4220:	20 81       	ld	r18, Z
    4222:	31 81       	ldd	r19, Z+1	; 0x01
    4224:	82 0f       	add	r24, r18
    4226:	93 1f       	adc	r25, r19
    4228:	20 91 b4 13 	lds	r18, 0x13B4	; 0x8013b4 <__brkval>
    422c:	30 91 b5 13 	lds	r19, 0x13B5	; 0x8013b5 <__brkval+0x1>
    4230:	28 17       	cp	r18, r24
    4232:	39 07       	cpc	r19, r25
    4234:	51 f5       	brne	.+84     	; 0x428a <free+0x88>
    4236:	f0 93 b5 13 	sts	0x13B5, r31	; 0x8013b5 <__brkval+0x1>
    423a:	e0 93 b4 13 	sts	0x13B4, r30	; 0x8013b4 <__brkval>
    423e:	67 c0       	rjmp	.+206    	; 0x430e <free+0x10c>
    4240:	ed 01       	movw	r28, r26
    4242:	20 e0       	ldi	r18, 0x00	; 0
    4244:	30 e0       	ldi	r19, 0x00	; 0
    4246:	ce 17       	cp	r28, r30
    4248:	df 07       	cpc	r29, r31
    424a:	40 f4       	brcc	.+16     	; 0x425c <free+0x5a>
    424c:	4a 81       	ldd	r20, Y+2	; 0x02
    424e:	5b 81       	ldd	r21, Y+3	; 0x03
    4250:	9e 01       	movw	r18, r28
    4252:	41 15       	cp	r20, r1
    4254:	51 05       	cpc	r21, r1
    4256:	f1 f0       	breq	.+60     	; 0x4294 <free+0x92>
    4258:	ea 01       	movw	r28, r20
    425a:	f5 cf       	rjmp	.-22     	; 0x4246 <free+0x44>
    425c:	d3 83       	std	Z+3, r29	; 0x03
    425e:	c2 83       	std	Z+2, r28	; 0x02
    4260:	40 81       	ld	r20, Z
    4262:	51 81       	ldd	r21, Z+1	; 0x01
    4264:	84 0f       	add	r24, r20
    4266:	95 1f       	adc	r25, r21
    4268:	c8 17       	cp	r28, r24
    426a:	d9 07       	cpc	r29, r25
    426c:	59 f4       	brne	.+22     	; 0x4284 <free+0x82>
    426e:	88 81       	ld	r24, Y
    4270:	99 81       	ldd	r25, Y+1	; 0x01
    4272:	84 0f       	add	r24, r20
    4274:	95 1f       	adc	r25, r21
    4276:	02 96       	adiw	r24, 0x02	; 2
    4278:	91 83       	std	Z+1, r25	; 0x01
    427a:	80 83       	st	Z, r24
    427c:	8a 81       	ldd	r24, Y+2	; 0x02
    427e:	9b 81       	ldd	r25, Y+3	; 0x03
    4280:	93 83       	std	Z+3, r25	; 0x03
    4282:	82 83       	std	Z+2, r24	; 0x02
    4284:	21 15       	cp	r18, r1
    4286:	31 05       	cpc	r19, r1
    4288:	29 f4       	brne	.+10     	; 0x4294 <free+0x92>
    428a:	f0 93 b7 13 	sts	0x13B7, r31	; 0x8013b7 <__flp+0x1>
    428e:	e0 93 b6 13 	sts	0x13B6, r30	; 0x8013b6 <__flp>
    4292:	3d c0       	rjmp	.+122    	; 0x430e <free+0x10c>
    4294:	e9 01       	movw	r28, r18
    4296:	fb 83       	std	Y+3, r31	; 0x03
    4298:	ea 83       	std	Y+2, r30	; 0x02
    429a:	49 91       	ld	r20, Y+
    429c:	59 91       	ld	r21, Y+
    429e:	c4 0f       	add	r28, r20
    42a0:	d5 1f       	adc	r29, r21
    42a2:	ec 17       	cp	r30, r28
    42a4:	fd 07       	cpc	r31, r29
    42a6:	61 f4       	brne	.+24     	; 0x42c0 <free+0xbe>
    42a8:	80 81       	ld	r24, Z
    42aa:	91 81       	ldd	r25, Z+1	; 0x01
    42ac:	84 0f       	add	r24, r20
    42ae:	95 1f       	adc	r25, r21
    42b0:	02 96       	adiw	r24, 0x02	; 2
    42b2:	e9 01       	movw	r28, r18
    42b4:	99 83       	std	Y+1, r25	; 0x01
    42b6:	88 83       	st	Y, r24
    42b8:	82 81       	ldd	r24, Z+2	; 0x02
    42ba:	93 81       	ldd	r25, Z+3	; 0x03
    42bc:	9b 83       	std	Y+3, r25	; 0x03
    42be:	8a 83       	std	Y+2, r24	; 0x02
    42c0:	e0 e0       	ldi	r30, 0x00	; 0
    42c2:	f0 e0       	ldi	r31, 0x00	; 0
    42c4:	12 96       	adiw	r26, 0x02	; 2
    42c6:	8d 91       	ld	r24, X+
    42c8:	9c 91       	ld	r25, X
    42ca:	13 97       	sbiw	r26, 0x03	; 3
    42cc:	00 97       	sbiw	r24, 0x00	; 0
    42ce:	19 f0       	breq	.+6      	; 0x42d6 <free+0xd4>
    42d0:	fd 01       	movw	r30, r26
    42d2:	dc 01       	movw	r26, r24
    42d4:	f7 cf       	rjmp	.-18     	; 0x42c4 <free+0xc2>
    42d6:	8d 91       	ld	r24, X+
    42d8:	9c 91       	ld	r25, X
    42da:	11 97       	sbiw	r26, 0x01	; 1
    42dc:	9d 01       	movw	r18, r26
    42de:	2e 5f       	subi	r18, 0xFE	; 254
    42e0:	3f 4f       	sbci	r19, 0xFF	; 255
    42e2:	82 0f       	add	r24, r18
    42e4:	93 1f       	adc	r25, r19
    42e6:	20 91 b4 13 	lds	r18, 0x13B4	; 0x8013b4 <__brkval>
    42ea:	30 91 b5 13 	lds	r19, 0x13B5	; 0x8013b5 <__brkval+0x1>
    42ee:	28 17       	cp	r18, r24
    42f0:	39 07       	cpc	r19, r25
    42f2:	69 f4       	brne	.+26     	; 0x430e <free+0x10c>
    42f4:	30 97       	sbiw	r30, 0x00	; 0
    42f6:	29 f4       	brne	.+10     	; 0x4302 <free+0x100>
    42f8:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <__flp+0x1>
    42fc:	10 92 b6 13 	sts	0x13B6, r1	; 0x8013b6 <__flp>
    4300:	02 c0       	rjmp	.+4      	; 0x4306 <free+0x104>
    4302:	13 82       	std	Z+3, r1	; 0x03
    4304:	12 82       	std	Z+2, r1	; 0x02
    4306:	b0 93 b5 13 	sts	0x13B5, r27	; 0x8013b5 <__brkval+0x1>
    430a:	a0 93 b4 13 	sts	0x13B4, r26	; 0x8013b4 <__brkval>
    430e:	df 91       	pop	r29
    4310:	cf 91       	pop	r28
    4312:	08 95       	ret

00004314 <memcpy>:
    4314:	fb 01       	movw	r30, r22
    4316:	dc 01       	movw	r26, r24
    4318:	02 c0       	rjmp	.+4      	; 0x431e <memcpy+0xa>
    431a:	01 90       	ld	r0, Z+
    431c:	0d 92       	st	X+, r0
    431e:	41 50       	subi	r20, 0x01	; 1
    4320:	50 40       	sbci	r21, 0x00	; 0
    4322:	d8 f7       	brcc	.-10     	; 0x431a <memcpy+0x6>
    4324:	08 95       	ret

00004326 <memset>:
    4326:	dc 01       	movw	r26, r24
    4328:	01 c0       	rjmp	.+2      	; 0x432c <memset+0x6>
    432a:	6d 93       	st	X+, r22
    432c:	41 50       	subi	r20, 0x01	; 1
    432e:	50 40       	sbci	r21, 0x00	; 0
    4330:	e0 f7       	brcc	.-8      	; 0x432a <memset+0x4>
    4332:	08 95       	ret

00004334 <_exit>:
    4334:	f8 94       	cli

00004336 <__stop_program>:
    4336:	ff cf       	rjmp	.-2      	; 0x4336 <__stop_program>
